/*
 * This file was automatically generated by EvoSuite
 * Sat Sep 07 02:19:36 GMT 2024
 */

package jts;

import org.junit.Test;
import static org.junit.Assert.*;
import jts.MathUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MathUtil_clamp_Test extends MathUtil_clamp_Test_scaffolding {

  //Test case number: 0
  /*
   * 9 covered goals:
   * Goal 1. Strong Mutation 0: jts.MathUtil.clamp(III)I:40 - InsertUnaryOp Negation (result:0,526;)
   * Goal 2. Strong Mutation 8: jts.MathUtil.clamp(III)I:40 - ReplaceComparisonOperator >= -> == (result:0,526;)
   * Goal 3. Strong Mutation 12: jts.MathUtil.clamp(III)I:42 - InsertUnaryOp Negation (result:1571,526;)
   * Goal 4. Strong Mutation 16: jts.MathUtil.clamp(III)I:42 - InsertUnaryOp IINC 1 (result:527,526; max:527,526;)
   * Goal 5. Strong Mutation 17: jts.MathUtil.clamp(III)I:42 - InsertUnaryOp IINC -1 (result:525,526; max:525,526;)
   * Goal 6. Strong Mutation 18: jts.MathUtil.clamp(III)I:42 - ReplaceComparisonOperator <= -> -1 (result:1571,526;)
   * Goal 7. Strong Mutation 21: jts.MathUtil.clamp(III)I:52 - InsertUnaryOp Negation (result:-526,526;)
   * Goal 8. Strong Mutation 22: jts.MathUtil.clamp(III)I:52 - InsertUnaryOp IINC 1 (result:527,526; max:527,526;)
   * Goal 9. Strong Mutation 23: jts.MathUtil.clamp(III)I:52 - InsertUnaryOp IINC -1 (result:525,526; max:525,526;)
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MathUtil mathUtil0 = new MathUtil();
      int int0 = MathUtil.clamp(1571, 0, 526);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. Strong Mutation 2: jts.MathUtil.clamp(III)I:40 - InsertUnaryOp IINC -1 (result:1888,-1; x:1887,1888;)
   * Goal 2. Strong Mutation 4: jts.MathUtil.clamp(III)I:40 - InsertUnaryOp IINC 1 (result:1889,-1; min:1889,1888;)
   * Goal 3. Strong Mutation 7: jts.MathUtil.clamp(III)I:40 - ReplaceComparisonOperator >= -> > (result:1888,-1;)
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MathUtil mathUtil0 = new MathUtil();
      int int0 = MathUtil.clamp(1888, 1888, (-1));
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * Goal 1. Strong Mutation 1: jts.MathUtil.clamp(III)I:40 - InsertUnaryOp IINC 1 (result:2,1; x:2,1;)
   * Goal 2. Strong Mutation 3: jts.MathUtil.clamp(III)I:40 - InsertUnaryOp Negation (result:-5518,1;)
   * Goal 3. Strong Mutation 13: jts.MathUtil.clamp(III)I:42 - InsertUnaryOp IINC 1 (result:2,1; x:2,1;)
   * Goal 4. Strong Mutation 14: jts.MathUtil.clamp(III)I:42 - InsertUnaryOp IINC -1 (result:0,1; x:0,1;)
   * Goal 5. Strong Mutation 15: jts.MathUtil.clamp(III)I:42 - InsertUnaryOp Negation (result:1571,1;)
   * Goal 6. Strong Mutation 20: jts.MathUtil.clamp(III)I:42 - ReplaceComparisonOperator <= -> == (result:1571,1;)
   * Goal 7. Strong Mutation 24: jts.MathUtil.clamp(III)I:54 - InsertUnaryOp Negation (result:-1,1;)
   * Goal 8. Strong Mutation 25: jts.MathUtil.clamp(III)I:54 - InsertUnaryOp IINC 1 (result:2,1; x:2,1;)
   * Goal 9. Strong Mutation 26: jts.MathUtil.clamp(III)I:54 - InsertUnaryOp IINC -1 (result:0,1; x:0,1;)
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MathUtil mathUtil0 = new MathUtil();
      int int0 = MathUtil.clamp(1, (-5518), 1571);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * Goal 1. Strong Mutation 5: jts.MathUtil.clamp(III)I:40 - InsertUnaryOp IINC -1 (result:-32,-31; min:-32,-31;)
   * Goal 2. Strong Mutation 6: jts.MathUtil.clamp(III)I:40 - ReplaceComparisonOperator >= -> -1 (result:-874,-31;)
   * Goal 3. Strong Mutation 9: jts.MathUtil.clamp(III)I:41 - InsertUnaryOp Negation (result:31,-31;)
   * Goal 4. Strong Mutation 10: jts.MathUtil.clamp(III)I:41 - InsertUnaryOp IINC 1 (result:-30,-31; min:-30,-31;)
   * Goal 5. Strong Mutation 11: jts.MathUtil.clamp(III)I:41 - InsertUnaryOp IINC -1 (result:-32,-31; min:-32,-31;)
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MathUtil mathUtil0 = new MathUtil();
      int int0 = MathUtil.clamp((-874), (-31), (-1));
  }
}
