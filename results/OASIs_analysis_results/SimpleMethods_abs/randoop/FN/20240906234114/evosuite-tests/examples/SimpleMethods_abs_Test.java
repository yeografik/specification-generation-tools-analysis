/*
 * This file was automatically generated by EvoSuite
 * Sat Sep 07 02:42:28 GMT 2024
 */

package examples;

import org.junit.Test;
import static org.junit.Assert.*;
import examples.SimpleMethods;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleMethods_abs_Test extends SimpleMethods_abs_Test_scaffolding {

  //Test case number: 0
  /*
   * 22 covered goals:
   * Goal 1. Strong Mutation 1: examples.SimpleMethods.abs(I)I:13 - InsertUnaryOp IINC 1 (result:0,1; x:0,-1; i:0,1; old_x:0,-1;)
   * Goal 2. Strong Mutation 2: examples.SimpleMethods.abs(I)I:13 - InsertUnaryOp IINC -1 (result:2,1; x:-2,-1; old_x:-2,-1;)
   * Goal 3. Strong Mutation 4: examples.SimpleMethods.abs(I)I:14 - InsertUnaryOp IINC 1 (result:0,1; x:0,-1; i:0,1;)
   * Goal 4. Strong Mutation 5: examples.SimpleMethods.abs(I)I:14 - InsertUnaryOp IINC -1 (result:2,1; x:-2,-1;)
   * Goal 5. Strong Mutation 9: examples.SimpleMethods.abs(I)I:14 - ReplaceConstant - 31 -> 30 (result:5,1; i:3,1;)
   * Goal 6. Strong Mutation 14: examples.SimpleMethods.abs(I)I:23 - InsertUnaryOp IINC 1 (result:0,1; x:0,-1;)
   * Goal 7. Strong Mutation 15: examples.SimpleMethods.abs(I)I:23 - InsertUnaryOp IINC -1 (result:2,1; x:-2,-1;)
   * Goal 8. Strong Mutation 17: examples.SimpleMethods.abs(I)I:23 - InsertUnaryOp IINC 1 (result:3,1; i:2,1;)
   * Goal 9. Strong Mutation 21: examples.SimpleMethods.abs(I)I:23 - ReplaceConstant - -1 -> -2 (result:0,1;)
   * Goal 10. Strong Mutation 22: examples.SimpleMethods.abs(I)I:23 - ReplaceBitwiseOperator ^ -> | (result:0,1;)
   * Goal 11. Strong Mutation 24: examples.SimpleMethods.abs(I)I:23 - ReplaceConstant - 1 -> 0 (result:2,1;)
   * Goal 12. Strong Mutation 25: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> % (result:0,1;)
   * Goal 13. Strong Mutation 26: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> - (result:3,1;)
   * Goal 14. Strong Mutation 27: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> * (result:2,1;)
   * Goal 15. Strong Mutation 28: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> / (result:2,1;)
   * Goal 16. Strong Mutation 29: examples.SimpleMethods.abs(I)I:23 - ReplaceBitwiseOperator ^ -> | (result:0,1;)
   * Goal 17. Strong Mutation 30: examples.SimpleMethods.abs(I)I:23 - ReplaceBitwiseOperator ^ -> & (result:0,1;)
   * Goal 18. Strong Mutation 32: examples.SimpleMethods.abs(I)I:23 - InsertUnaryOp IINC 1 (result:2,1; i:2,1;)
   * Goal 19. Strong Mutation 33: examples.SimpleMethods.abs(I)I:23 - InsertUnaryOp IINC -1 (result:0,1; i:0,1;)
   * Goal 20. Strong Mutation 34: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> % (result:0,1;)
   * Goal 21. Strong Mutation 36: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> * (result:0,1;)
   * Goal 22. Strong Mutation 37: examples.SimpleMethods.abs(I)I:23 - ReplaceArithmeticOperator + -> / (result:0,1;)
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleMethods simpleMethods0 = new SimpleMethods();
      int int0 = simpleMethods0.abs((-1));
  }
}
