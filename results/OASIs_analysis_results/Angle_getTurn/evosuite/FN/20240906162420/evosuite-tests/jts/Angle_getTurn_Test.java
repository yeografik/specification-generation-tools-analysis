/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 19:25:38 GMT 2024
 */

package jts;

import org.junit.Test;
import static org.junit.Assert.*;
import jts.Angle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Angle_getTurn_Test extends Angle_getTurn_Test_scaffolding {

  //Test case number: 0
  /*
   * 10 covered goals:
   * Goal 1. Strong Mutation 0: jts.Angle.getTurn(DD)I:51 - InsertUnaryOp Negation (result:-1,0; crossproduct:-0.9092974268256817,0.0;)
   * Goal 2. Strong Mutation 1: jts.Angle.getTurn(DD)I:51 - InsertUnaryOp Negation (result:1,0; crossproduct:0.9092974268256817,0.0;)
   * Goal 3. Strong Mutation 2: jts.Angle.getTurn(DD)I:51 - ReplaceArithmeticOperator - -> + (result:1,0; crossproduct:0.9092974268256817,0.0;)
   * Goal 4. Strong Mutation 4: jts.Angle.getTurn(DD)I:51 - ReplaceArithmeticOperator - -> * (result:1,0; crossproduct:0.8414709848078965,0.0;)
   * Goal 5. Strong Mutation 5: jts.Angle.getTurn(DD)I:51 - ReplaceArithmeticOperator - -> / (result:1,0; crossproduct:0.8414709848078965,0.0;)
   * Goal 6. Strong Mutation 8: jts.Angle.getTurn(DD)I:44 - ReplaceConstant - 0.0 -> -1.0 (result:1,0;)
   * Goal 7. Strong Mutation 11: jts.Angle.getTurn(DD)I:44 - ReplaceComparisonOperator <= -> < (result:1,0;)
   * Goal 8. Strong Mutation 14: jts.Angle.getTurn(DD)I:55 - ReplaceConstant - 0.0 -> 1.0 (result:-1,0;)
   * Goal 9. Strong Mutation 18: jts.Angle.getTurn(DD)I:55 - ReplaceComparisonOperator >= -> > (result:-1,0;)
   * Goal 10. Strong Mutation 22: jts.Angle.getTurn(DD)I:49 - ReplaceConstant - 0 -> 1 (result:1,0;)
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Angle angle0 = new Angle();
      int int0 = Angle.getTurn(1.0, 1.0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * Goal 1. Strong Mutation 3: jts.Angle.getTurn(DD)I:51 - ReplaceArithmeticOperator - -> % (result:-1,1; crossproduct:-0.14083801642820956,0.9890733865002621;)
   * Goal 2. Strong Mutation 6: jts.Angle.getTurn(DD)I:44 - InsertUnaryOp Negation (result:0,1;)
   * Goal 3. Strong Mutation 7: jts.Angle.getTurn(DD)I:44 - ReplaceConstant - 0.0 -> 1.0 (result:0,1;)
   * Goal 4. Strong Mutation 9: jts.Angle.getTurn(DD)I:44 - ReplaceComparisonOperator <= -> -1 (result:0,1;)
   * Goal 5. Strong Mutation 12: jts.Angle.getTurn(DD)I:45 - ReplaceConstant - 1 -> 0 (result:0,1;)
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Angle angle0 = new Angle();
      int int0 = Angle.getTurn(1297.904941, 5308.0);
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * Goal 1. Strong Mutation 10: jts.Angle.getTurn(DD)I:44 - ReplaceComparisonOperator <= -> == (result:1,-1;)
   * Goal 2. Strong Mutation 13: jts.Angle.getTurn(DD)I:55 - InsertUnaryOp Negation (result:0,-1;)
   * Goal 3. Strong Mutation 15: jts.Angle.getTurn(DD)I:55 - ReplaceConstant - 0.0 -> -1.0 (result:0,-1;)
   * Goal 4. Strong Mutation 16: jts.Angle.getTurn(DD)I:55 - ReplaceComparisonOperator >= -> -1 (result:0,-1;)
   * Goal 5. Strong Mutation 19: jts.Angle.getTurn(DD)I:47 - ReplaceConstant - -1 -> 0 (result:0,-1;)
   * Goal 6. Strong Mutation 20: jts.Angle.getTurn(DD)I:47 - ReplaceConstant - -1 -> 1 (result:1,-1;)
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Angle angle0 = new Angle();
      int int0 = Angle.getTurn((-0.080128959562), (-1.112240907991652));
  }
}
