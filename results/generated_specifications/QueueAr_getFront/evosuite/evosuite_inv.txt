===========================================================================
DataStructures.QueueAr:::OBJECT
this.theArray != null
this.theArray.getClass().getName() == java.lang.Object[].class.getName()
this.currentSize == 0 || this.currentSize == 1 || this.currentSize == 2
this.front == 0 || this.front == 1 || this.front == 2
this.back >= -1
this.currentSize <= daikon.Quant.size(this.theArray)
this.front <= daikon.Quant.size(this.theArray)
this.back <= daikon.Quant.size(this.theArray)-1
===========================================================================
DataStructures.QueueAr.getFront():::ENTER
this.front == this.back
this.currentSize == 0 || this.currentSize == 1
this.front == 0
daikon.Quant.size(this.theArray) == 1 || daikon.Quant.size(this.theArray) == 32 || daikon.Quant.size(this.theArray) == 498
daikon.Quant.getElement_Object(this.theArray, this.currentSize) == null
===========================================================================
DataStructures.QueueAr.getFront():::EXIT
this.theArray == \old(this.theArray)
this.theArray.getClass().getName() == \old(this.theArray.getClass().getName())
daikon.Quant.pairwiseEqual(this.theArray, \old(this.theArray))
this.currentSize == \old(this.currentSize)
this.front == this.back
this.front == \old(this.front)
this.front == \old(this.back)
\result == daikon.Quant.getElement_Object(this.theArray, this.front)
\result == daikon.Quant.getElement_Object(this.theArray, this.back)
\result == daikon.Quant.getElement_Object(this.theArray, \old(this.front))
\result == daikon.Quant.getElement_Object(this.theArray, \old(this.back))
\result == \old(daikon.Quant.getElement_Object(this.theArray, \new(this.front)))
\result == \old(daikon.Quant.getElement_Object(this.theArray, \new(this.back)))
\result == \old(daikon.Quant.getElement_Object(this.theArray, this.front))
\result == \old(daikon.Quant.getElement_Object(this.theArray, this.back))
this.currentSize == 0 || this.currentSize == 1
this.front == 0
\result.getClass().getName() == java.lang.String.class.getName()
daikon.Quant.size(this.theArray) == 1 || daikon.Quant.size(this.theArray) == 32 || daikon.Quant.size(this.theArray) == 498
daikon.Quant.getElement_Object(this.theArray, this.currentSize) == null
daikon.Quant.memberOf(\result.getClass().getName() , daikon.Quant.typeArray(this.theArray) )
