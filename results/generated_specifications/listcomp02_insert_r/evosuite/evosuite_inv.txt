===========================================================================
examples.ListComp02:::OBJECT
daikon.Quant.eltsNotEqual(this._var50, null)
daikon.Quant.eltsEqual(daikon.Quant.typeArray(this._var50), "examples.S")
daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this._var50), new String[] {  }) || daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this._var50), new String[] { "examples.S" })
daikon.Quant.size(this._var49) == 0 || daikon.Quant.size(this._var49) == 1
daikon.Quant.size(this._var50) == 0 || daikon.Quant.size(this._var50) == 1
===========================================================================
examples.ListComp02.insert_r(examples.R):::ENTER
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this._var49), new String[] {  })
r.B.toString().equals("JZJ#a%+7cdh") || r.B.toString().equals("oSU|O_z$_}a")
===========================================================================
examples.ListComp02.insert_r(examples.R):::EXIT
this._var49 == \old(this._var49)
this._var50 == \old(this._var50)
daikon.Quant.pairwiseEqual(this._var50, \old(this._var50))
r.A == \old(r.A)
r.B == \old(r.B)
r.B.toString().equals(\old(r.B.toString()))
daikon.Quant.size(this._var49)-1 == \old(daikon.Quant.size(this._var49))
daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this._var49), new String[] { null }) || daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this._var49), new String[] { "examples.R" })
r.B.toString().equals("JZJ#a%+7cdh") || r.B.toString().equals("oSU|O_z$_}a")
daikon.Quant.size(this._var49) == 1
