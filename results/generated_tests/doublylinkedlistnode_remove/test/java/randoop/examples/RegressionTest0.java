package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        java.lang.Class<?> wildcardClass1 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        java.lang.Class<?> wildcardClass3 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass9 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        java.lang.Class<?> wildcardClass4 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        java.lang.Class<?> wildcardClass4 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass2 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        java.lang.Class<?> wildcardClass5 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode1.insertRight(doublyLinkedListNode7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode1.insertRight(doublyLinkedListNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode3.insertRight(doublyLinkedListNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode11);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass10 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode4);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode14);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass10 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass9 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        java.lang.Class<?> wildcardClass4 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass14 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass4 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        java.lang.Class<?> wildcardClass18 = doublyLinkedListNode9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass5 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode35);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode4);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode8.insertRight(doublyLinkedListNode12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        java.lang.Class<?> wildcardClass18 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode29);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        java.lang.Class<?> wildcardClass17 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass11 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode19);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode11.insertRight(doublyLinkedListNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        java.lang.Class<?> wildcardClass17 = doublyLinkedListNode11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode38);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode4);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode20);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode22.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode22);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        java.lang.Class<?> wildcardClass25 = doublyLinkedListNode16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        java.lang.Class<?> wildcardClass30 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass19 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode21);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        java.lang.Class<?> wildcardClass30 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode15);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode4);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode11);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        java.lang.Class<?> wildcardClass18 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass36 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        java.lang.Class<?> wildcardClass25 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass50 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass8 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        java.lang.Class<?> wildcardClass26 = doublyLinkedListNode16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        java.lang.Class<?> wildcardClass7 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass13 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode36);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode16.insertRight(doublyLinkedListNode26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode31);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass5 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode31);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode8.insertRight(doublyLinkedListNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode10.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode10.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass14 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode46);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass8 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        java.lang.Class<?> wildcardClass43 = doublyLinkedListNode28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass20 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode10.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass13 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode55);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.remove();
        doublyLinkedListNode65.remove();
        doublyLinkedListNode65.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode70.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode70);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode17.insertRight(doublyLinkedListNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode28);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode10.insertRight(doublyLinkedListNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode43);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass38 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode29);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass65 = doublyLinkedListNode16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass37 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode1.insertRight(doublyLinkedListNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass27 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode4);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode29);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass39 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode12);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        doublyLinkedListNode22.remove();
        doublyLinkedListNode22.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode27);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode24);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode45.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode45);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode10.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        java.lang.Class<?> wildcardClass32 = doublyLinkedListNode10.getClass();
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode28);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode59);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        java.lang.Class<?> wildcardClass37 = doublyLinkedListNode8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode22.remove();
        doublyLinkedListNode22.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode22);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass14 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode30.insertRight(doublyLinkedListNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode88 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode88.insertRight(doublyLinkedListNode89);
        doublyLinkedListNode88.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode92 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode93 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode92.insertRight(doublyLinkedListNode93);
        doublyLinkedListNode93.remove();
        doublyLinkedListNode88.insertRight(doublyLinkedListNode93);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        java.lang.Class<?> wildcardClass52 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode32);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode15.insertRight(doublyLinkedListNode20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode53);
        java.lang.Class<?> wildcardClass88 = doublyLinkedListNode53.getClass();
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode54);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode28.insertRight(doublyLinkedListNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode25);
        java.lang.Class<?> wildcardClass41 = doublyLinkedListNode25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode27);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode26.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode58);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode16.insertRight(doublyLinkedListNode58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode51);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass39 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode24);
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode24.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode26);
        java.lang.Class<?> wildcardClass43 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode56);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode18);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode47);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode24.insertRight(doublyLinkedListNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode68);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode3.insertRight(doublyLinkedListNode68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode44);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode52.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode61.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode61);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode88 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode88.insertRight(doublyLinkedListNode89);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode14.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode34);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode15.insertRight(doublyLinkedListNode20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode47);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode26.insertRight(doublyLinkedListNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode25);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass36 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        java.lang.Class<?> wildcardClass36 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode46);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode6.insertRight(doublyLinkedListNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode57.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode57);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode63);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass11 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode35);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode71);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode86 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode86.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode88 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode88.insertRight(doublyLinkedListNode89);
        doublyLinkedListNode89.remove();
        doublyLinkedListNode86.insertRight(doublyLinkedListNode89);
        doublyLinkedListNode86.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode86);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode51.insertRight(doublyLinkedListNode86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        java.lang.Class<?> wildcardClass6 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode37);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        java.lang.Class<?> wildcardClass3 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        java.lang.Class<?> wildcardClass66 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        java.lang.Class<?> wildcardClass27 = doublyLinkedListNode16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass39 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        java.lang.Class<?> wildcardClass24 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode8);
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        java.lang.Class<?> wildcardClass38 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode51);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode26.insertRight(doublyLinkedListNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode41);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode6.insertRight(doublyLinkedListNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        java.lang.Class<?> wildcardClass54 = doublyLinkedListNode17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        java.lang.Class<?> wildcardClass21 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode26.insertRight(doublyLinkedListNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode34);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode35);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        java.lang.Class<?> wildcardClass25 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        java.lang.Class<?> wildcardClass68 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode41);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode45);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        java.lang.Class<?> wildcardClass35 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        java.lang.Class<?> wildcardClass67 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode45);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode20.insertRight(doublyLinkedListNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode67);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode64);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        java.lang.Class<?> wildcardClass27 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        java.lang.Class<?> wildcardClass42 = doublyLinkedListNode25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode27);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        java.lang.Class<?> wildcardClass44 = doublyLinkedListNode28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        java.lang.Class<?> wildcardClass20 = doublyLinkedListNode15.getClass();
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode7);
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode7.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode54.remove();
        doublyLinkedListNode54.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode41);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode48);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        java.lang.Class<?> wildcardClass26 = doublyLinkedListNode9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode26);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode11.insertRight(doublyLinkedListNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode57);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass6 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode31);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        java.lang.Class<?> wildcardClass18 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass37 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode67);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode64);
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode80.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode83.remove();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode83);
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode88 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode87.insertRight(doublyLinkedListNode88);
        doublyLinkedListNode88.remove();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode88);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode80.remove();
        doublyLinkedListNode80.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode80);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode3.insertRight(doublyLinkedListNode80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode27);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        java.lang.Class<?> wildcardClass24 = doublyLinkedListNode9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode4);
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode12);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode42);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode6.insertRight(doublyLinkedListNode42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass44 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass9 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode68);
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode65.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode65);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass9 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode70);
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode74.remove();
        doublyLinkedListNode74.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode74);
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode91 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode90.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode91.remove();
        doublyLinkedListNode91.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode70);
        java.lang.Class<?> wildcardClass98 = doublyLinkedListNode70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode51);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode11.insertRight(doublyLinkedListNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        java.lang.Class<?> wildcardClass36 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode45.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        doublyLinkedListNode60.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode60);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode3.insertRight(doublyLinkedListNode38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode10.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode15.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode15);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass25 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode51);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode69.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode79);
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode79.remove();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode76.remove();
        doublyLinkedListNode76.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode76);
        examples.DoublyLinkedListNode doublyLinkedListNode92 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode92.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode94 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode92.insertRight(doublyLinkedListNode94);
        doublyLinkedListNode94.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode94);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode9.insertRight(doublyLinkedListNode94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode65);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode20);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass5 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode73.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode81);
        examples.DoublyLinkedListNode doublyLinkedListNode85 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode85.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode85.insertRight(doublyLinkedListNode87);
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode89.insertRight(doublyLinkedListNode90);
        doublyLinkedListNode90.remove();
        doublyLinkedListNode87.insertRight(doublyLinkedListNode90);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode78);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode51.insertRight(doublyLinkedListNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        java.lang.Class<?> wildcardClass54 = doublyLinkedListNode25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode19.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode29);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode59);
        java.lang.Class<?> wildcardClass63 = doublyLinkedListNode59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode14.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        java.lang.Class<?> wildcardClass52 = doublyLinkedListNode17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        java.lang.Class<?> wildcardClass35 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode24);
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode24.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode45);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode79.remove();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode79.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode69);
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode87.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode89.insertRight(doublyLinkedListNode90);
        doublyLinkedListNode90.remove();
        doublyLinkedListNode87.insertRight(doublyLinkedListNode90);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode87);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode43);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode10.insertRight(doublyLinkedListNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        java.lang.Class<?> wildcardClass68 = doublyLinkedListNode45.getClass();
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode51);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode8.insertRight(doublyLinkedListNode51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass50 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass32 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode63);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode81);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass26 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode85 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode84.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode85.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode77.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode77);
        java.lang.Class<?> wildcardClass94 = doublyLinkedListNode4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode27);
        java.lang.Class<?> wildcardClass42 = doublyLinkedListNode27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass17 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass17 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        java.lang.Class<?> wildcardClass21 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass30 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode45);
        java.lang.Class<?> wildcardClass67 = doublyLinkedListNode45.getClass();
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass43 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        java.lang.Class<?> wildcardClass25 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode31);
        java.lang.Class<?> wildcardClass46 = doublyLinkedListNode31.getClass();
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode78);
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode78);
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode88 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode87.insertRight(doublyLinkedListNode88);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode87);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode51.insertRight(doublyLinkedListNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode51);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode67);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode20.insertRight(doublyLinkedListNode50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass70 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode40);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        java.lang.Class<?> wildcardClass43 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        java.lang.Class<?> wildcardClass29 = doublyLinkedListNode14.getClass();
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode22);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        java.lang.Class<?> wildcardClass36 = doublyLinkedListNode20.getClass();
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        java.lang.Class<?> wildcardClass69 = doublyLinkedListNode51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode58);
        java.lang.Class<?> wildcardClass69 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode44);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode85 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode84.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode85.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode77.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode77);
        java.lang.Class<?> wildcardClass94 = doublyLinkedListNode77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        java.lang.Class<?> wildcardClass91 = doublyLinkedListNode58.getClass();
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass17 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass46 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode13.remove();
        java.lang.Class<?> wildcardClass24 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode34);
        java.lang.Class<?> wildcardClass71 = doublyLinkedListNode34.getClass();
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode58);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode72);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode48.insertRight(doublyLinkedListNode68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode70);
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode81);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode30.insertRight(doublyLinkedListNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode30);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        java.lang.Class<?> wildcardClass47 = doublyLinkedListNode28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode59);
        java.lang.Class<?> wildcardClass63 = doublyLinkedListNode4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass33 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode55);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode75);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode75);
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode84.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode86 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode86.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode84.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode84.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode84.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode62);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode34);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode16.insertRight(doublyLinkedListNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode43);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode14.insertRight(doublyLinkedListNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode76);
        java.lang.Class<?> wildcardClass81 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode61.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode56);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass14 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        doublyLinkedListNode57.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode57);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode32);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode40.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode35.remove();
        doublyLinkedListNode35.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode35);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode14.insertRight(doublyLinkedListNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode39);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode71);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode68);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode3.insertRight(doublyLinkedListNode42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode89.insertRight(doublyLinkedListNode90);
        doublyLinkedListNode89.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode93 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode94 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode93.insertRight(doublyLinkedListNode94);
        doublyLinkedListNode94.remove();
        doublyLinkedListNode89.insertRight(doublyLinkedListNode94);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode34.insertRight(doublyLinkedListNode94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        java.lang.Class<?> wildcardClass53 = doublyLinkedListNode17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        doublyLinkedListNode4.remove();
        java.lang.Class<?> wildcardClass44 = doublyLinkedListNode4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode38);
        java.lang.Class<?> wildcardClass75 = doublyLinkedListNode25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass40 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode70.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode70);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode82);
        examples.DoublyLinkedListNode doublyLinkedListNode86 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode86.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode79.remove();
        doublyLinkedListNode79.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode79.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode79);
        java.lang.Class<?> wildcardClass96 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        java.lang.Class<?> wildcardClass67 = doublyLinkedListNode48.getClass();
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode31);
        java.lang.Class<?> wildcardClass37 = doublyLinkedListNode31.getClass();
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode26);
        java.lang.Class<?> wildcardClass46 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode27);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode80);
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode83.remove();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode77.remove();
        doublyLinkedListNode77.remove();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode93 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode93.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode95 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode93.insertRight(doublyLinkedListNode95);
        doublyLinkedListNode95.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode95);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode30.insertRight(doublyLinkedListNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode46);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode55.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode50);
        java.lang.Class<?> wildcardClass72 = doublyLinkedListNode50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode67);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode70);
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode74.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode74);
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode89.remove();
        doublyLinkedListNode89.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode89);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode41.insertRight(doublyLinkedListNode67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode65.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode75);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode60.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode60);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass39 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode11.remove();
        java.lang.Class<?> wildcardClass66 = doublyLinkedListNode11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode25);
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode57);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode43);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode59.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode4.remove();
        java.lang.Class<?> wildcardClass64 = doublyLinkedListNode4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode58);
        java.lang.Class<?> wildcardClass90 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode12.remove();
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode83.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode84.remove();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode81);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        java.lang.Class<?> wildcardClass21 = doublyLinkedListNode15.getClass();
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode72);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode62);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode50.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode61);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode61);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode72);
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode83);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode70.remove();
        doublyLinkedListNode70.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode70);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode62);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass10 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode51);
        java.lang.Class<?> wildcardClass59 = doublyLinkedListNode26.getClass();
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode54.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode54);
        java.lang.Class<?> wildcardClass67 = doublyLinkedListNode54.getClass();
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        doublyLinkedListNode58.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode58);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode17.insertRight(doublyLinkedListNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode64);
        java.lang.Class<?> wildcardClass70 = doublyLinkedListNode64.getClass();
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode67.remove();
        doublyLinkedListNode67.remove();
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode83.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode84.remove();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode84);
        examples.DoublyLinkedListNode doublyLinkedListNode88 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode89 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode88.insertRight(doublyLinkedListNode89);
        doublyLinkedListNode89.remove();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode89);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode81.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode81);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode31);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode5.remove();
        java.lang.Class<?> wildcardClass26 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode67);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode76);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode76);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode73);
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode85 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode84.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode85.remove();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode82.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass97 = doublyLinkedListNode14.getClass();
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass13 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass22 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode64.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode64);
        java.lang.Class<?> wildcardClass70 = doublyLinkedListNode9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        java.lang.Class<?> wildcardClass12 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode68.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode85 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode84.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode85.remove();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode85.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode85);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode63);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass6 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode36);
        java.lang.Class<?> wildcardClass53 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode1.remove();
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode43);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode64);
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode64);
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode76);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode76);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode73);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode68);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode78);
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode83.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode85 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode86 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode85.insertRight(doublyLinkedListNode86);
        doublyLinkedListNode86.remove();
        doublyLinkedListNode83.insertRight(doublyLinkedListNode86);
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode91 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode90.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode91.remove();
        doublyLinkedListNode83.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode83);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode11.insertRight(doublyLinkedListNode78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode76);
        java.lang.Class<?> wildcardClass81 = doublyLinkedListNode76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        java.lang.Class<?> wildcardClass33 = doublyLinkedListNode27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode49);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode56);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode53.remove();
        doublyLinkedListNode53.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode53.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode53);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode46);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        java.lang.Class<?> wildcardClass52 = doublyLinkedListNode32.getClass();
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode25);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode36);
        java.lang.Class<?> wildcardClass53 = doublyLinkedListNode36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode69);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode78.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode83.remove();
        doublyLinkedListNode83.remove();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode78.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode78);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode23.insertRight(doublyLinkedListNode78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode61);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode61);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode14);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode53);
        java.lang.Class<?> wildcardClass88 = doublyLinkedListNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        java.lang.Class<?> wildcardClass43 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        java.lang.Class<?> wildcardClass33 = doublyLinkedListNode20.getClass();
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode31);
        java.lang.Class<?> wildcardClass46 = doublyLinkedListNode27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode27);
        java.lang.Class<?> wildcardClass32 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode38);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode53.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode53);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode45);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode11.insertRight(doublyLinkedListNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        java.lang.Class<?> wildcardClass66 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass49 = doublyLinkedListNode6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode4.remove();
        doublyLinkedListNode4.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode4);
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode49);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode53.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode71.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode71);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode4.insertRight(doublyLinkedListNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode26);
        java.lang.Class<?> wildcardClass43 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode56);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode7.insertRight(doublyLinkedListNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode28);
        java.lang.Class<?> wildcardClass44 = doublyLinkedListNode28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode10.insertRight(doublyLinkedListNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode33);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode1.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode49.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode45);
        java.lang.Class<?> wildcardClass67 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode41);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode41);
        java.lang.Class<?> wildcardClass72 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode30.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode48);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass35 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode26.remove();
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode62.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode57.remove();
        doublyLinkedListNode57.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode57);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode12.remove();
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        java.lang.Class<?> wildcardClass55 = doublyLinkedListNode17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode69);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode69.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode69);
        java.lang.Class<?> wildcardClass81 = doublyLinkedListNode69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass30 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode49);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode27);
        java.lang.Class<?> wildcardClass37 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode27);
        java.lang.Class<?> wildcardClass44 = doublyLinkedListNode13.getClass();
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        java.lang.Class<?> wildcardClass37 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode71);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode68.remove();
        doublyLinkedListNode68.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode68);
        java.lang.Class<?> wildcardClass90 = doublyLinkedListNode68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        java.lang.Class<?> wildcardClass62 = doublyLinkedListNode48.getClass();
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode19);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass19 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode45);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode36);
        java.lang.Class<?> wildcardClass68 = doublyLinkedListNode36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode41);
        java.lang.Class<?> wildcardClass79 = doublyLinkedListNode41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        java.lang.Class<?> wildcardClass35 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        java.lang.Class<?> wildcardClass7 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode52);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode18.insertRight(doublyLinkedListNode22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        java.lang.Class<?> wildcardClass22 = doublyLinkedListNode14.getClass();
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode30.insertRight(doublyLinkedListNode69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode52);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode64.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode64);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode39);
        java.lang.Class<?> wildcardClass76 = doublyLinkedListNode39.getClass();
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode7);
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode21);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode27.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode27);
        java.lang.Class<?> wildcardClass44 = doublyLinkedListNode27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode63);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode70);
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode73.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode73);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode67.remove();
        doublyLinkedListNode67.remove();
        doublyLinkedListNode63.insertRight(doublyLinkedListNode67);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode63);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode7);
        doublyLinkedListNode7.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode7);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode56.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode71);
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode81.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode81);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode11.remove();
        java.lang.Class<?> wildcardClass19 = doublyLinkedListNode11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass65 = doublyLinkedListNode30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode21.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode26);
        java.lang.Class<?> wildcardClass49 = doublyLinkedListNode10.getClass();
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode31);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        java.lang.Class<?> wildcardClass46 = doublyLinkedListNode28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        java.lang.Class<?> wildcardClass58 = doublyLinkedListNode41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        java.lang.Class<?> wildcardClass10 = doublyLinkedListNode5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
        java.lang.Class<?> wildcardClass68 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode20.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode41);
        java.lang.Class<?> wildcardClass72 = doublyLinkedListNode41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass41 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode39.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode39);
        java.lang.Class<?> wildcardClass55 = doublyLinkedListNode39.getClass();
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode48);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        java.lang.Class<?> wildcardClass15 = doublyLinkedListNode6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode17);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode10.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass38 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode42.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass69 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode16);
        java.lang.Class<?> wildcardClass34 = doublyLinkedListNode16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode6.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode6);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode6.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode6.remove();
        java.lang.Class<?> wildcardClass21 = doublyLinkedListNode6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode67);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode67.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode67);
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode79.remove();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode79);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode76);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode41.insertRight(doublyLinkedListNode76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode44.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode68);
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode68);
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode84.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode86 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode87 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode86.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode84.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode87.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode87);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode77.remove();
        doublyLinkedListNode77.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode77);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode13.insertRight(doublyLinkedListNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode20);
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode22.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode11.remove();
        java.lang.Class<?> wildcardClass67 = doublyLinkedListNode11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        java.lang.Class<?> wildcardClass18 = doublyLinkedListNode11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode63 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode63);
        doublyLinkedListNode63.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode63);
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode60.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode60.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode60);
        java.lang.Class<?> wildcardClass78 = doublyLinkedListNode60.getClass();
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode48.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode48);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode65.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode74);
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode80);
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode83.remove();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode71.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode91 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode90.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode90.remove();
        doublyLinkedListNode90.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode90);
        doublyLinkedListNode90.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode90);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode30.insertRight(doublyLinkedListNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode29.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode29);
        java.lang.Class<?> wildcardClass35 = doublyLinkedListNode29.getClass();
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode18);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode23.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode38.remove();
        doublyLinkedListNode38.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode38);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode33);
        java.lang.Class<?> wildcardClass66 = doublyLinkedListNode33.getClass();
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode24);
        java.lang.Class<?> wildcardClass28 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode33.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode28.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode43);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode40);
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode58);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode58);
        java.lang.Class<?> wildcardClass69 = doublyLinkedListNode58.getClass();
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode24.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode24);
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode31.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode57);
        doublyLinkedListNode57.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode57);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode54.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode42.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode47);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode71);
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.remove();
        doublyLinkedListNode82.remove();
        doublyLinkedListNode82.remove();
        doublyLinkedListNode82.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode82);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode44);
        java.lang.Class<?> wildcardClass90 = doublyLinkedListNode44.getClass();
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode8.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode8);
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        java.lang.Class<?> wildcardClass33 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode1.remove();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode1.remove();
        java.lang.Class<?> wildcardClass16 = doublyLinkedListNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode32);
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode27.insertRight(doublyLinkedListNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode57 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode57.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode60);
        doublyLinkedListNode60.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode60);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode68.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode69.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode69);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode78.remove();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode78);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode57.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode88 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode53.insertRight(doublyLinkedListNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode54.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode54);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode32);
        java.lang.Class<?> wildcardClass73 = doublyLinkedListNode32.getClass();
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode16);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode19);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode16.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode37);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode43);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode54 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode54.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode55.remove();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode55);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode52.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode69 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode70 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode69.insertRight(doublyLinkedListNode70);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode70);
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode75.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode77.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode77.remove();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode77);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode74.remove();
        doublyLinkedListNode74.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode74);
        examples.DoublyLinkedListNode doublyLinkedListNode90 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode91 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode90.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode91.remove();
        doublyLinkedListNode91.remove();
        doublyLinkedListNode70.insertRight(doublyLinkedListNode91);
        doublyLinkedListNode70.remove();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode70);
        examples.DoublyLinkedListNode doublyLinkedListNode98 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode70.insertRight(doublyLinkedListNode98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass13 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode31.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode31);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode36.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode36);
        java.lang.Class<?> wildcardClass54 = doublyLinkedListNode36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode31 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode31.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode31.insertRight(doublyLinkedListNode34);
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode56.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode59.remove();
        doublyLinkedListNode56.insertRight(doublyLinkedListNode59);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode34.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode34);
        java.lang.Class<?> wildcardClass71 = doublyLinkedListNode27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode42 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode42.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode42);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode48);
        java.lang.Class<?> wildcardClass61 = doublyLinkedListNode14.getClass();
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode30);
        java.lang.Class<?> wildcardClass50 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode8);
        doublyLinkedListNode8.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode8);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode14);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode50);
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode52.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode53);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode61.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode66 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode66);
        doublyLinkedListNode66.remove();
        doublyLinkedListNode66.remove();
        doublyLinkedListNode61.insertRight(doublyLinkedListNode66);
        examples.DoublyLinkedListNode doublyLinkedListNode71 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode71.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode73 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode73.insertRight(doublyLinkedListNode74);
        doublyLinkedListNode74.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode74);
        examples.DoublyLinkedListNode doublyLinkedListNode78 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode78.insertRight(doublyLinkedListNode80);
        examples.DoublyLinkedListNode doublyLinkedListNode82 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode82.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode83.remove();
        doublyLinkedListNode80.insertRight(doublyLinkedListNode83);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode71.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode71.remove();
        doublyLinkedListNode66.insertRight(doublyLinkedListNode71);
        doublyLinkedListNode71.remove();
        doublyLinkedListNode71.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode71);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode25.insertRight(doublyLinkedListNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode41);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode52 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode52);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode51);
        examples.DoublyLinkedListNode doublyLinkedListNode59 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode62);
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode59.insertRight(doublyLinkedListNode62);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode26.insertRight(doublyLinkedListNode59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode34.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode35.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode35);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode25);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode13);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode29.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode27);
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode38 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode38.insertRight(doublyLinkedListNode39);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode46);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        java.lang.Class<?> wildcardClass58 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode24.remove();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode24);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode37.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode37.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode40.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode30);
        doublyLinkedListNode2.remove();
        java.lang.Class<?> wildcardClass51 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode24 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode24.insertRight(doublyLinkedListNode25);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode30 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode30.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode30.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode30);
        examples.DoublyLinkedListNode doublyLinkedListNode39 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode40);
        doublyLinkedListNode39.remove();
        doublyLinkedListNode30.insertRight(doublyLinkedListNode39);
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode44.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode47);
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode53 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode51.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode55 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode56 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode55.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode56.remove();
        doublyLinkedListNode53.insertRight(doublyLinkedListNode56);
        doublyLinkedListNode53.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode53);
        examples.DoublyLinkedListNode doublyLinkedListNode62 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode64 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode64.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode65.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode65);
        doublyLinkedListNode62.remove();
        doublyLinkedListNode44.insertRight(doublyLinkedListNode62);
        doublyLinkedListNode62.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode72 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode72.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode74 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode75 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode74.insertRight(doublyLinkedListNode75);
        doublyLinkedListNode75.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode75);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode80 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode80.remove();
        doublyLinkedListNode72.insertRight(doublyLinkedListNode80);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode62.insertRight(doublyLinkedListNode72);
        doublyLinkedListNode72.remove();
        doublyLinkedListNode72.remove();
        doublyLinkedListNode39.insertRight(doublyLinkedListNode72);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode2.insertRight(doublyLinkedListNode72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode20.remove();
        doublyLinkedListNode17.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode26);
        examples.DoublyLinkedListNode doublyLinkedListNode46 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode47);
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode51 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode50.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode51.remove();
        doublyLinkedListNode51.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode51);
        doublyLinkedListNode46.remove();
        doublyLinkedListNode46.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode58 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode58.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode60 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode61 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode60.insertRight(doublyLinkedListNode61);
        doublyLinkedListNode61.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode61);
        examples.DoublyLinkedListNode doublyLinkedListNode65 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode65.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode67 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode68 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode67.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode65.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode68.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode68);
        doublyLinkedListNode58.remove();
        doublyLinkedListNode46.insertRight(doublyLinkedListNode58);
        examples.DoublyLinkedListNode doublyLinkedListNode76 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode77 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode77);
        examples.DoublyLinkedListNode doublyLinkedListNode79 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode81 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode79.insertRight(doublyLinkedListNode81);
        examples.DoublyLinkedListNode doublyLinkedListNode83 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode84 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode83.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode84.remove();
        doublyLinkedListNode81.insertRight(doublyLinkedListNode84);
        doublyLinkedListNode81.remove();
        doublyLinkedListNode76.insertRight(doublyLinkedListNode81);
        doublyLinkedListNode76.remove();
        doublyLinkedListNode58.insertRight(doublyLinkedListNode76);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode26.insertRight(doublyLinkedListNode58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode18 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode21);
        doublyLinkedListNode21.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode21);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode18);
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        doublyLinkedListNode18.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode40 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode40.insertRight(doublyLinkedListNode41);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode45.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode48.remove();
        doublyLinkedListNode45.insertRight(doublyLinkedListNode48);
        doublyLinkedListNode45.remove();
        doublyLinkedListNode45.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode18.insertRight(doublyLinkedListNode41);
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode10);
        doublyLinkedListNode2.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode13.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode15.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode16.remove();
        doublyLinkedListNode13.insertRight(doublyLinkedListNode16);
        doublyLinkedListNode13.remove();
        doublyLinkedListNode13.remove();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode13);
        java.lang.Class<?> wildcardClass23 = doublyLinkedListNode2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode13 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode13);
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode17.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        doublyLinkedListNode12.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode29 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode28.insertRight(doublyLinkedListNode29);
        doublyLinkedListNode29.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode29);
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode34 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode34.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode34);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode45 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode45);
        doublyLinkedListNode43.remove();
        doublyLinkedListNode26.insertRight(doublyLinkedListNode43);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode3.insertRight(doublyLinkedListNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode1.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode6 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode6.remove();
        doublyLinkedListNode3.insertRight(doublyLinkedListNode6);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass18 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode16 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode17 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode16.insertRight(doublyLinkedListNode17);
        doublyLinkedListNode17.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode17);
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode22 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode22.remove();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode22);
        doublyLinkedListNode14.remove();
        doublyLinkedListNode14.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode14);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        java.lang.Class<?> wildcardClass31 = doublyLinkedListNode0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        doublyLinkedListNode3.remove();
        java.lang.Class<?> wildcardClass10 = doublyLinkedListNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode7.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode11.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode9);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode20);
        doublyLinkedListNode19.remove();
        doublyLinkedListNode19.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode19);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode28 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode27.insertRight(doublyLinkedListNode28);
        doublyLinkedListNode28.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode28);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode33.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode25.remove();
        doublyLinkedListNode19.insertRight(doublyLinkedListNode25);
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        examples.DoublyLinkedListNode doublyLinkedListNode48 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode48.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode49.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode49);
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode41.remove();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode41);
        java.lang.Class<?> wildcardClass57 = doublyLinkedListNode41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode26.remove();
        java.lang.Class<?> wildcardClass33 = doublyLinkedListNode26.getClass();
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode20 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode21 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode23 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode21.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode26 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode26.remove();
        doublyLinkedListNode23.insertRight(doublyLinkedListNode26);
        doublyLinkedListNode23.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode23);
        examples.DoublyLinkedListNode doublyLinkedListNode32 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode33);
        doublyLinkedListNode32.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode37 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode36.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode37.remove();
        doublyLinkedListNode37.remove();
        doublyLinkedListNode32.insertRight(doublyLinkedListNode37);
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode32.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode32);
        examples.DoublyLinkedListNode doublyLinkedListNode47 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode47.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode49 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode50 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode49.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode50.remove();
        doublyLinkedListNode47.insertRight(doublyLinkedListNode50);
        doublyLinkedListNode47.remove();
        doublyLinkedListNode47.remove();
        doublyLinkedListNode20.insertRight(doublyLinkedListNode47);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode0.insertRight(doublyLinkedListNode47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode4 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode4.insertRight(doublyLinkedListNode5);
        doublyLinkedListNode5.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode5);
        examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode12 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode12);
        examples.DoublyLinkedListNode doublyLinkedListNode14 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode15 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode14.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode15.remove();
        doublyLinkedListNode12.insertRight(doublyLinkedListNode15);
        doublyLinkedListNode12.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode12);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        doublyLinkedListNode5.insertRight(doublyLinkedListNode9);
        examples.DoublyLinkedListNode doublyLinkedListNode25 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode27 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode25.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode27.remove();
        doublyLinkedListNode9.insertRight(doublyLinkedListNode27);
        doublyLinkedListNode9.remove();
        doublyLinkedListNode9.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode33 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode35 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode36 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode35.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode36.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode36);
        doublyLinkedListNode33.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode41 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode41.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode43 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode44 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode43.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode41.insertRight(doublyLinkedListNode44);
        doublyLinkedListNode44.remove();
        doublyLinkedListNode33.insertRight(doublyLinkedListNode44);
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode9.insertRight(doublyLinkedListNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: parameter is not singleton");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode2 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode3 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode2.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode3.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode3);
        doublyLinkedListNode0.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode8 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode8.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
        examples.DoublyLinkedListNode doublyLinkedListNode11 = new examples.DoublyLinkedListNode();
        doublyLinkedListNode10.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode8.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode0.insertRight(doublyLinkedListNode11);
        doublyLinkedListNode11.remove();
        doublyLinkedListNode11.remove();
        examples.DoublyLinkedListNode doublyLinkedListNode19 = null;
        // The following exception was thrown during execution in test generation
        try {
            doublyLinkedListNode11.insertRight(doublyLinkedListNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: undefined for null parameter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }
}

