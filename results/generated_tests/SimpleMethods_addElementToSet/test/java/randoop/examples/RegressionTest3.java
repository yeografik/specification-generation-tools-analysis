package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-100));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods4.addElementToSet(intSet20, (int) (byte) 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods24.addElementToSet(intSet28, 10);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods24.addElementToSet(intSet31, (-4));
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 2);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods38.addElementToSet(intSet56, 2);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        simpleMethods38.addElementToSet(intSet73, 1);
        simpleMethods34.addElementToSet(intSet73, (int) '#');
        simpleMethods24.addElementToSet(intSet73, (-1));
        simpleMethods4.addElementToSet(intSet73, (int) '4');
        simpleMethods0.addElementToSet(intSet73, (-9));
        java.lang.Class<?> wildcardClass87 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods8.addElementToSet(intSet49, (int) (byte) -1);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods8.addElementToSet(intSet68, 1);
        simpleMethods4.addElementToSet(intSet68, 2);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, (-10));
        simpleMethods24.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        simpleMethods10.addElementToSet(intSet54, 8);
        simpleMethods0.addElementToSet(intSet54, 9);
        java.lang.Class<?> wildcardClass62 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods13.addElementToSet(intSet31, (-1));
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods13.addElementToSet(intSet34, 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods37.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods37.addElementToSet(intSet41, 10);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods37.addElementToSet(intSet44, (-4));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        simpleMethods37.addElementToSet(intSet67, (-1));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods73.addElementToSet(intSet89, (int) (byte) 10);
        simpleMethods37.addElementToSet(intSet89, (int) (byte) -1);
        simpleMethods13.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods7.addElementToSet(intSet89, (-1));
        simpleMethods0.addElementToSet(intSet89, (-3));
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 10);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-2));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods14.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods10.addElementToSet(intSet82, 3);
        simpleMethods0.addElementToSet(intSet82, (-8));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 5);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods13.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods17.addElementToSet(intSet31, 9);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods17.addElementToSet(intSet37, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods17.addElementToSet(intSet55, (-10));
        simpleMethods13.addElementToSet(intSet55, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods13.addElementToSet(intSet63, (int) '#');
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods66.addElementToSet(intSet82, (int) (byte) 10);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods66.addElementToSet(intSet90, 100);
        simpleMethods13.addElementToSet(intSet90, 3);
        simpleMethods0.addElementToSet(intSet90, 1);
        java.lang.Class<?> wildcardClass98 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 9);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        simpleMethods0.addElementToSet(intSet42, (-5));
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods0.addElementToSet(intSet59, (-3));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-100));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 5);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 5);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 6);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 3);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-6));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, 100);
        simpleMethods0.addElementToSet(intSet79, (-3));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (int) ' ');
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 9);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-8));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-7));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-3));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-4));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 2);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-2));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) '#');
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet60, (int) (byte) 100);
        java.lang.Class<?> wildcardClass66 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 3);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, (-100));
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods1.addElementToSet(intSet65, 9);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 4);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), (-9), (-10), (-2), (-100), (-5), (-2), (-4), 6, 3, 7, 1, 10, (-5), (-5), 3 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, (int) (short) -1);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods0.addElementToSet(intSet57, (-2));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods60.addElementToSet(intSet61, 2);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods60.addElementToSet(intSet89, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet89, 3);
        java.lang.Class<?> wildcardClass95 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 1);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 3);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) '#');
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (int) ' ');
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) 'a');
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods13.addElementToSet(intSet37, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods13.addElementToSet(intSet40, (int) '4');
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods13.addElementToSet(intSet63, 1);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.lang.Class<?> wildcardClass71 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods29.addElementToSet(intSet49, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods29.addElementToSet(intSet73, 8);
        simpleMethods11.addElementToSet(intSet73, 7);
        simpleMethods7.addElementToSet(intSet73, 100);
        simpleMethods0.addElementToSet(intSet73, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-8));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-1));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) (byte) 10);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods28.addElementToSet(intSet66, (-10));
        simpleMethods4.addElementToSet(intSet66, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet66, 0);
        java.lang.Class<?> wildcardClass76 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods22.addElementToSet(intSet60, (-10));
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods66.addElementToSet(intSet86, 0);
        simpleMethods22.addElementToSet(intSet86, (-1));
        simpleMethods18.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (-4));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-4));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) ' ');
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) (byte) -1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, (-3));
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-100));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 10);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-2));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods8.addElementToSet(intSet65, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet65, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods13.addElementToSet(intSet14, 0);
        java.util.HashSet<java.lang.Integer> intSet17 = null;
        simpleMethods13.addElementToSet(intSet17, 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 2);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods24.addElementToSet(intSet88, (-1));
        simpleMethods20.addElementToSet(intSet88, (int) (short) 0);
        simpleMethods13.addElementToSet(intSet88, 10);
        simpleMethods0.addElementToSet(intSet88, 2);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 7);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (int) (short) 100);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 4);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods74.addElementToSet(intSet90, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet90, (-5));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 7);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 100, 9, 7, (-5), 100, 0, (-5), (-7), 2 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods0.addElementToSet(intSet85, 8);
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, (-3));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 8);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods25.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (short) 10);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) '#');
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods4.addElementToSet(intSet89, (-7));
        simpleMethods0.addElementToSet(intSet89, 4);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods14.addElementToSet(intSet30, (int) (byte) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods34.addElementToSet(intSet38, 10);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods34.addElementToSet(intSet41, (-4));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) '#');
        simpleMethods34.addElementToSet(intSet83, (-1));
        simpleMethods14.addElementToSet(intSet83, (int) '4');
        simpleMethods10.addElementToSet(intSet83, (-9));
        simpleMethods0.addElementToSet(intSet83, (-8));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, (-1));
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods7.addElementToSet(intSet28, 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods31.addElementToSet(intSet35, 10);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods31.addElementToSet(intSet38, (-4));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods31.addElementToSet(intSet61, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods31.addElementToSet(intSet83, (int) (byte) -1);
        simpleMethods7.addElementToSet(intSet83, 1);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-2));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) -1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, (-100));
        simpleMethods0.addElementToSet(intSet55, (-8));
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods0.addElementToSet(intSet63, 100);
        java.lang.Class<?> wildcardClass66 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) 'a');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods4.addElementToSet(intSet28, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods31.addElementToSet(intSet35, 10);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods38.addElementToSet(intSet39, 0);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods38.addElementToSet(intSet42, 10);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-2));
        simpleMethods38.addElementToSet(intSet83, (-9));
        simpleMethods31.addElementToSet(intSet83, (-10));
        simpleMethods4.addElementToSet(intSet83, (-5));
        simpleMethods0.addElementToSet(intSet83, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-3));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods44.addElementToSet(intSet86, 0);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods0.addElementToSet(intSet48, (-1));
        java.lang.Class<?> wildcardClass51 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        simpleMethods0.addElementToSet(intSet45, (-9));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods53.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 5);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods4.addElementToSet(intSet28, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods31.addElementToSet(intSet35, 10);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods38.addElementToSet(intSet39, 0);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods38.addElementToSet(intSet42, 10);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-2));
        simpleMethods38.addElementToSet(intSet83, (-9));
        simpleMethods31.addElementToSet(intSet83, (-10));
        simpleMethods4.addElementToSet(intSet83, (-5));
        simpleMethods0.addElementToSet(intSet83, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) '#');
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods4.addElementToSet(intSet89, (-7));
        simpleMethods0.addElementToSet(intSet89, 4);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, (-1));
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods22.addElementToSet(intSet38, (int) (byte) 10);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.util.HashSet<java.lang.Integer> intSet60 = null;
        simpleMethods42.addElementToSet(intSet60, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods63.addElementToSet(intSet77, 9);
        simpleMethods42.addElementToSet(intSet77, 1);
        simpleMethods22.addElementToSet(intSet77, 1);
        simpleMethods1.addElementToSet(intSet77, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet77, (int) (short) 0);
        java.lang.Class<?> wildcardClass89 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 10);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, (-4));
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods35.addElementToSet(intSet74, (int) '#');
        simpleMethods25.addElementToSet(intSet74, (-1));
        simpleMethods21.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (-8));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) 'a');
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods4.addElementToSet(intSet28, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods31.addElementToSet(intSet35, 10);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods38.addElementToSet(intSet39, 0);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods38.addElementToSet(intSet42, 10);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-2));
        simpleMethods38.addElementToSet(intSet83, (-9));
        simpleMethods31.addElementToSet(intSet83, (-10));
        simpleMethods4.addElementToSet(intSet83, (-5));
        simpleMethods0.addElementToSet(intSet83, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods1.addElementToSet(intSet58, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods1.addElementToSet(intSet62, (-4));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods1.addElementToSet(intSet65, 3);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods68.addElementToSet(intSet84, (int) (byte) 10);
        simpleMethods1.addElementToSet(intSet84, (int) 'a');
        simpleMethods0.addElementToSet(intSet84, (-6));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (int) (short) 100);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, (int) (byte) 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods25.addElementToSet(intSet78, (-100));
        simpleMethods4.addElementToSet(intSet78, (-1));
        simpleMethods0.addElementToSet(intSet78, (int) '#');
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 100);
        simpleMethods26.addElementToSet(intSet62, (int) (byte) -1);
        simpleMethods25.addElementToSet(intSet62, 8);
        simpleMethods21.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 1);
        java.lang.Class<?> wildcardClass76 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods8.addElementToSet(intSet9, 0);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods8.addElementToSet(intSet12, 10);
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods8.addElementToSet(intSet15, (-4));
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-10));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (-1));
        simpleMethods8.addElementToSet(intSet82, (int) '#');
        simpleMethods7.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 4);
        java.lang.Class<?> wildcardClass94 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-9));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods4.addElementToSet(intSet85, 4);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 100);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods33.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods33.addElementToSet(intSet68, 100);
        simpleMethods32.addElementToSet(intSet68, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-8));
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) (short) 10);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods25.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-100));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, (-1));
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods22.addElementToSet(intSet38, (int) (byte) 10);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.util.HashSet<java.lang.Integer> intSet60 = null;
        simpleMethods42.addElementToSet(intSet60, 2);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods63.addElementToSet(intSet77, 9);
        simpleMethods42.addElementToSet(intSet77, 1);
        simpleMethods22.addElementToSet(intSet77, 1);
        simpleMethods1.addElementToSet(intSet77, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet77, (int) (short) 0);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 1);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods47.addElementToSet(intSet86, (int) '#');
        simpleMethods0.addElementToSet(intSet86, (-2));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-10), (-3), 0, (-6), 3 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods0.addElementToSet(intSet76, (-8));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-3));
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 5);
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        simpleMethods10.addElementToSet(intSet54, 8);
        simpleMethods0.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 4);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods10.addElementToSet(intSet34, (int) (short) 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, (-2));
        simpleMethods10.addElementToSet(intSet75, 3);
        simpleMethods0.addElementToSet(intSet75, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 100, 9, 7, (-5), 100, 0, (-5), (-7), 2 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods0.addElementToSet(intSet85, 8);
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, (-5));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-5));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 4);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, 6);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods38.addElementToSet(intSet58, 0);
        simpleMethods14.addElementToSet(intSet58, 8);
        simpleMethods4.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (-8));
        java.lang.Class<?> wildcardClass68 = intSet58.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 10);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods0.addElementToSet(intSet48, (-1));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods52.addElementToSet(intSet70, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods52.addElementToSet(intSet87, 100);
        simpleMethods51.addElementToSet(intSet87, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-7));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-6));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-100));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 100);
        simpleMethods49.addElementToSet(intSet85, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet85, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-6));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 9);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods27.addElementToSet(intSet43, (int) (byte) 10);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods27.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (-6));
        java.lang.Class<?> wildcardClass92 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods33.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods33.addElementToSet(intSet68, 100);
        simpleMethods32.addElementToSet(intSet68, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-8));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (-100));
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, 10);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods4.addElementToSet(intSet62, 10);
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (byte) 10);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods20.addElementToSet(intSet40, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods20.addElementToSet(intSet85, (-3));
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 2, 10, 6, 10, 4, (-1), 8, (-7), (-6), 0, (-9), (-4), (-5), 0, (-6), (-6), 5, (-5), 3, 1, (-2), 2, 7, 2, (-1), 1 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods0.addElementToSet(intSet68, (-7));
        java.lang.Class<?> wildcardClass72 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 9);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 100);
        simpleMethods49.addElementToSet(intSet85, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet85, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 7);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 100);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods7.addElementToSet(intSet89, (-1));
        simpleMethods0.addElementToSet(intSet89, (-3));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 2, 10, 6, 10, 4, (-1), 8, (-7), (-6), 0, (-9), (-4), (-5), 0, (-6), (-6), 5, (-5), 3, 1, (-2), 2, 7, 2, (-1), 1 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods0.addElementToSet(intSet68, (-7));
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 3);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (short) 1);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods0.addElementToSet(intSet48, (-1));
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods0.addElementToSet(intSet51, 0);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet13 = null;
        simpleMethods0.addElementToSet(intSet13, 0);
        java.lang.Class<?> wildcardClass16 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-2));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-3));
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods0.addElementToSet(intSet69, 100);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods5.addElementToSet(intSet6, 10);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods9.addElementToSet(intSet23, 9);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods9.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods9.addElementToSet(intSet47, (-2));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods9.addElementToSet(intSet73, (int) (short) -1);
        simpleMethods5.addElementToSet(intSet73, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet73, 9);
        simpleMethods0.addElementToSet(intSet73, 4);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods31.addElementToSet(intSet51, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods31.addElementToSet(intSet75, 0);
        simpleMethods0.addElementToSet(intSet75, 5);
        java.lang.Class<?> wildcardClass83 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods23.addElementToSet(intSet41, 2);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods23.addElementToSet(intSet58, 100);
        simpleMethods22.addElementToSet(intSet58, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet58, (int) (byte) 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods4.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 100);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-100), 1, 100, (-5) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods0.addElementToSet(intSet88, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods2.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 1);
        simpleMethods2.addElementToSet(intSet61, (-1));
        simpleMethods1.addElementToSet(intSet61, (-5));
        simpleMethods0.addElementToSet(intSet61, (-2));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 7);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods22.addElementToSet(intSet60, (-10));
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods66.addElementToSet(intSet86, 0);
        simpleMethods22.addElementToSet(intSet86, (-1));
        simpleMethods18.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-2));
        simpleMethods47.addElementToSet(intSet89, (-5));
        simpleMethods0.addElementToSet(intSet89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-6));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 0);
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods1.addElementToSet(intSet5, 10);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods1.addElementToSet(intSet8, (-4));
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (-1));
        simpleMethods1.addElementToSet(intSet75, (int) '#');
        simpleMethods0.addElementToSet(intSet75, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 100);
        simpleMethods39.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet75, (-8));
        simpleMethods0.addElementToSet(intSet75, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods34.addElementToSet(intSet58, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods34.addElementToSet(intSet61, (int) '4');
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods34.addElementToSet(intSet84, 1);
        simpleMethods0.addElementToSet(intSet84, 1);
        java.lang.Class<?> wildcardClass92 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (short) 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods14.addElementToSet(intSet30, (int) (byte) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods34.addElementToSet(intSet38, 10);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods34.addElementToSet(intSet41, (-4));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) '#');
        simpleMethods34.addElementToSet(intSet83, (-1));
        simpleMethods14.addElementToSet(intSet83, (int) '4');
        simpleMethods10.addElementToSet(intSet83, (-9));
        simpleMethods0.addElementToSet(intSet83, (-8));
        java.lang.Class<?> wildcardClass99 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods0.addElementToSet(intSet77, 100);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (int) '#');
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, (int) (byte) 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods25.addElementToSet(intSet78, (-100));
        simpleMethods4.addElementToSet(intSet78, (-1));
        simpleMethods0.addElementToSet(intSet78, (int) '#');
        java.lang.Class<?> wildcardClass86 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods21.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, (-9));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-5));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, 100);
        simpleMethods0.addElementToSet(intSet79, (-3));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 8, 0, 8, (-100), 8, (-5), 1, 9, (-4), (-100), (-6), 8, (-2) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (-2));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods18.addElementToSet(intSet68, (-2));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 100, (-3), (-6), 8, 0, (-8), (-1), 7, 3, 8, (-100), 2, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods18.addElementToSet(intSet87, 1);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 0);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-4));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 4);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods53.addElementToSet(intSet54, 2);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods53.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-2));
        simpleMethods47.addElementToSet(intSet89, (-5));
        simpleMethods0.addElementToSet(intSet89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods31.addElementToSet(intSet35, 10);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods31.addElementToSet(intSet38, (-4));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods31.addElementToSet(intSet61, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods31.addElementToSet(intSet83, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) -1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, (int) (byte) 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods28.addElementToSet(intSet66, (-2));
        simpleMethods7.addElementToSet(intSet66, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet66, 0);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) (short) 1);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 100);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods5.addElementToSet(intSet69, 9);
        simpleMethods4.addElementToSet(intSet69, 0);
        simpleMethods0.addElementToSet(intSet69, (int) (short) 1);
        java.lang.Class<?> wildcardClass77 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods4.addElementToSet(intSet67, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet67, (int) (short) 10);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods29.addElementToSet(intSet49, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods29.addElementToSet(intSet73, 8);
        simpleMethods11.addElementToSet(intSet73, 7);
        simpleMethods7.addElementToSet(intSet73, 100);
        simpleMethods0.addElementToSet(intSet73, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-2));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, 10);
        java.lang.Class<?> wildcardClass27 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (int) (short) 10);
        java.lang.Class<?> wildcardClass34 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods13.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods13.addElementToSet(intSet48, (-100));
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods13.addElementToSet(intSet54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods57.addElementToSet(intSet58, 2);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods57.addElementToSet(intSet86, (int) (short) -1);
        simpleMethods13.addElementToSet(intSet86, 100);
        simpleMethods0.addElementToSet(intSet86, (-6));
        java.lang.Class<?> wildcardClass94 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods21.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 4);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-10));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (int) 'a');
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-3));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods0.addElementToSet(intSet48, (int) (byte) 0);
        java.lang.Class<?> wildcardClass54 = intSet48.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods23.addElementToSet(intSet64, (int) (short) 0);
        simpleMethods5.addElementToSet(intSet64, 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods5.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods4.addElementToSet(intSet84, (-1));
        simpleMethods0.addElementToSet(intSet84, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 2);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods21.addElementToSet(intSet79, 4);
        simpleMethods0.addElementToSet(intSet79, 3);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods10.addElementToSet(intSet34, (int) (short) 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, (-2));
        simpleMethods10.addElementToSet(intSet75, 3);
        simpleMethods0.addElementToSet(intSet75, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods31.addElementToSet(intSet72, (int) (short) 0);
        simpleMethods13.addElementToSet(intSet72, 1);
        simpleMethods0.addElementToSet(intSet72, 10);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 1);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (-6));
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 1);
        simpleMethods0.addElementToSet(intSet62, 4);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods37.addElementToSet(intSet81, 0);
        simpleMethods33.addElementToSet(intSet81, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods8.addElementToSet(intSet49, (int) (byte) -1);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods8.addElementToSet(intSet68, 1);
        simpleMethods4.addElementToSet(intSet68, 2);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-7));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 10);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        simpleMethods4.addElementToSet(intSet48, 0);
        simpleMethods0.addElementToSet(intSet48, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 2);
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.util.HashSet<java.lang.Integer> intSet30 = null;
        simpleMethods12.addElementToSet(intSet30, 2);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods12.addElementToSet(intSet47, 100);
        simpleMethods11.addElementToSet(intSet47, (int) (byte) -1);
        simpleMethods10.addElementToSet(intSet47, 8);
        simpleMethods0.addElementToSet(intSet47, 10);
        java.lang.Class<?> wildcardClass59 = intSet47.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (-6));
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 1);
        simpleMethods0.addElementToSet(intSet62, 4);
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-7));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (int) (byte) -1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (short) -1);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods44.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 5);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-8));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods0.addElementToSet(intSet64, (-8));
        java.lang.Class<?> wildcardClass70 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 2);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, (-100));
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods24.addElementToSet(intSet88, 9);
        simpleMethods20.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-2));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods14.addElementToSet(intSet55, (int) (short) 0);
        simpleMethods13.addElementToSet(intSet55, 7);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods13.addElementToSet(intSet81, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.lang.Class<?> wildcardClass89 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods8.addElementToSet(intSet61, (-100));
        simpleMethods4.addElementToSet(intSet61, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet61, (-5));
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 5);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (int) (short) 0);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods14.addElementToSet(intSet55, (int) (short) 0);
        simpleMethods13.addElementToSet(intSet55, 7);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods13.addElementToSet(intSet81, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods27.addElementToSet(intSet69, 7);
        simpleMethods0.addElementToSet(intSet69, 0);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-7));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 100);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-1));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, (int) (byte) 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-2));
        simpleMethods4.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 1);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (-100));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (short) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods51.addElementToSet(intSet92, (int) (short) 0);
        simpleMethods44.addElementToSet(intSet92, 5);
        simpleMethods0.addElementToSet(intSet92, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-7));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        simpleMethods0.addElementToSet(intSet67, 1);
        java.lang.Class<?> wildcardClass73 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods11.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods11.addElementToSet(intSet46, 1);
        simpleMethods7.addElementToSet(intSet46, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods7.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 9);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-4));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods45.addElementToSet(intSet46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods49.addElementToSet(intSet87, (-10));
        simpleMethods45.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods41.addElementToSet(intSet87, (int) ' ');
        simpleMethods0.addElementToSet(intSet87, 3);
        java.lang.Class<?> wildcardClass99 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-6));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 7);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 4);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods10.addElementToSet(intSet86, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet86, 10);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 1);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 2);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) (short) -1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods30.addElementToSet(intSet54, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods30.addElementToSet(intSet57, (int) '4');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods30.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 100);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-5));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (-1));
        java.lang.Class<?> wildcardClass34 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods1.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 4);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 10);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods0.addElementToSet(intSet57, 100);
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods52.addElementToSet(intSet70, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods52.addElementToSet(intSet87, 100);
        simpleMethods51.addElementToSet(intSet87, (int) (byte) -1);
        simpleMethods50.addElementToSet(intSet87, 8);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.lang.Class<?> wildcardClass99 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods21.addElementToSet(intSet79, 4);
        simpleMethods0.addElementToSet(intSet79, 3);
        java.lang.Class<?> wildcardClass87 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 2);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, (-100));
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods24.addElementToSet(intSet88, 9);
        simpleMethods20.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (int) (short) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 2);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods38.addElementToSet(intSet79, (int) (short) 0);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods38.addElementToSet(intSet91, (-100));
        simpleMethods34.addElementToSet(intSet91, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet91, 6);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-7));
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods24.addElementToSet(intSet48, (int) (short) 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods24.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 3);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 0);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods10.addElementToSet(intSet86, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet86, (int) (byte) 10);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, 100);
        simpleMethods4.addElementToSet(intSet40, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods4.addElementToSet(intSet48, (-3));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods4.addElementToSet(intSet86, (-3));
        simpleMethods0.addElementToSet(intSet86, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-8));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 5);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods10.addElementToSet(intSet14, 10);
        java.util.HashSet<java.lang.Integer> intSet17 = null;
        simpleMethods10.addElementToSet(intSet17, (-4));
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods20.addElementToSet(intSet36, (int) (byte) 10);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 1);
        simpleMethods20.addElementToSet(intSet75, 1);
        simpleMethods10.addElementToSet(intSet75, (-9));
        simpleMethods0.addElementToSet(intSet75, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, (-3));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, (-4));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (short) 100);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, 4);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-4));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 100);
        simpleMethods36.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods35.addElementToSet(intSet72, 8);
        simpleMethods31.addElementToSet(intSet72, 8);
        simpleMethods10.addElementToSet(intSet72, 1);
        simpleMethods0.addElementToSet(intSet72, 1);
        java.lang.Class<?> wildcardClass88 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods31.addElementToSet(intSet66, 100);
        simpleMethods30.addElementToSet(intSet66, (int) (byte) -1);
        simpleMethods29.addElementToSet(intSet66, 8);
        simpleMethods25.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 1);
        simpleMethods0.addElementToSet(intSet66, (-10));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-10));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods64.addElementToSet(intSet65, 2);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods64.addElementToSet(intSet93, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet93, 10);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) 10);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-10));
        simpleMethods4.addElementToSet(intSet46, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods4.addElementToSet(intSet54, (int) '#');
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods57.addElementToSet(intSet73, (int) (byte) 10);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods57.addElementToSet(intSet81, 100);
        simpleMethods4.addElementToSet(intSet81, 3);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-10));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods64.addElementToSet(intSet65, 2);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods64.addElementToSet(intSet93, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet93, 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods21.addElementToSet(intSet83, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 10);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-2));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (int) (short) -1);
        simpleMethods7.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet75, (-9));
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 3);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 9);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods7.addElementToSet(intSet67, (-5));
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 100);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods5.addElementToSet(intSet69, 9);
        simpleMethods4.addElementToSet(intSet69, 0);
        simpleMethods0.addElementToSet(intSet69, (int) (short) 1);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 1);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 10);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-5));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) 'a');
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 4);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 8);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) '4');
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 7);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, 10);
        java.lang.Class<?> wildcardClass34 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 6);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-2));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods33.addElementToSet(intSet74, (int) (short) 0);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods78.addElementToSet(intSet92, 9);
        simpleMethods33.addElementToSet(intSet92, (-3));
        simpleMethods0.addElementToSet(intSet92, 7);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods31.addElementToSet(intSet66, 100);
        simpleMethods30.addElementToSet(intSet66, (int) (byte) -1);
        simpleMethods29.addElementToSet(intSet66, 8);
        simpleMethods25.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 1);
        simpleMethods0.addElementToSet(intSet66, (-10));
        java.lang.Class<?> wildcardClass82 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 3);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods0.addElementToSet(intSet64, (-8));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 7);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 9);
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 4);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods10.addElementToSet(intSet54, (-10));
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods57.addElementToSet(intSet73, (int) (byte) 10);
        simpleMethods10.addElementToSet(intSet73, (int) ' ');
        simpleMethods0.addElementToSet(intSet73, 0);
        java.lang.Class<?> wildcardClass81 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods8.addElementToSet(intSet61, (-100));
        simpleMethods4.addElementToSet(intSet61, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet61, (-5));
        java.lang.Class<?> wildcardClass69 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-8));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-4));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, 0);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 9);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, 9);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) '#');
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods0.addElementToSet(intSet48, (int) (byte) 0);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods1.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods73.addElementToSet(intSet89, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet89, (-100));
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods18.addElementToSet(intSet68, (-2));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 100, (-3), (-6), 8, 0, (-8), (-1), 7, 3, 8, (-100), 2, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods18.addElementToSet(intSet87, 1);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, (-5));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-9));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods65.addElementToSet(intSet81, (int) (byte) 10);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods65.addElementToSet(intSet89, 100);
        simpleMethods0.addElementToSet(intSet89, (-5));
        java.lang.Class<?> wildcardClass95 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods7.addElementToSet(intSet23, (int) (byte) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods27.addElementToSet(intSet68, 5);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods27.addElementToSet(intSet85, 4);
        simpleMethods7.addElementToSet(intSet85, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, (int) (short) -1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods7.addElementToSet(intSet23, (int) (byte) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods27.addElementToSet(intSet68, 5);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods27.addElementToSet(intSet85, 4);
        simpleMethods7.addElementToSet(intSet85, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-5));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-100));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-2));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 3);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods1.addElementToSet(intSet58, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods1.addElementToSet(intSet62, (-4));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods1.addElementToSet(intSet65, 3);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods68.addElementToSet(intSet84, (int) (byte) 10);
        simpleMethods1.addElementToSet(intSet84, (int) 'a');
        simpleMethods0.addElementToSet(intSet84, (-6));
        java.lang.Class<?> wildcardClass92 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 100);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 7);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) '4');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 7);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-5));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods27.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods1.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods73.addElementToSet(intSet89, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet89, (-100));
        java.lang.Class<?> wildcardClass95 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods8.addElementToSet(intSet69, 8);
        simpleMethods4.addElementToSet(intSet69, 9);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods4.addElementToSet(intSet91, (int) ' ');
        simpleMethods0.addElementToSet(intSet91, 100);
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-8));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, (-10));
        simpleMethods24.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 8);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 4);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, (-3));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 6);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods21.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 4);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods22.addElementToSet(intSet60, (-10));
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods66.addElementToSet(intSet86, 0);
        simpleMethods22.addElementToSet(intSet86, (-1));
        simpleMethods18.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods68.addElementToSet(intSet84, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet84, 7);
        java.lang.Class<?> wildcardClass90 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 1);
        simpleMethods2.addElementToSet(intSet82, 0);
        simpleMethods1.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 7);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 100);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods10.addElementToSet(intSet86, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet86, (int) (byte) 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) '4');
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, 0);
        simpleMethods18.addElementToSet(intSet80, 6);
        simpleMethods0.addElementToSet(intSet80, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-1));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 100);
        simpleMethods39.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet75, (-8));
        simpleMethods0.addElementToSet(intSet75, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-9));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) 100);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, 10);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.util.HashSet<java.lang.Integer> intSet30 = null;
        simpleMethods12.addElementToSet(intSet30, 2);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods12.addElementToSet(intSet47, 100);
        simpleMethods11.addElementToSet(intSet47, (int) (byte) -1);
        simpleMethods10.addElementToSet(intSet47, 8);
        simpleMethods0.addElementToSet(intSet47, 10);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 7);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 100);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods73.addElementToSet(intSet93, 0);
        simpleMethods0.addElementToSet(intSet93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (short) 0);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 6);
        java.lang.Class<?> wildcardClass13 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, 100);
        simpleMethods4.addElementToSet(intSet40, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods4.addElementToSet(intSet48, (-3));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods4.addElementToSet(intSet86, (-3));
        simpleMethods0.addElementToSet(intSet86, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, 6);
        java.util.HashSet<java.lang.Integer> intSet92 = null;
        simpleMethods0.addElementToSet(intSet92, (-1));
        java.util.HashSet<java.lang.Integer> intSet95 = null;
        simpleMethods0.addElementToSet(intSet95, 8);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 7);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 2);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 10);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods40.addElementToSet(intSet76, (int) (byte) -1);
        simpleMethods39.addElementToSet(intSet76, 8);
        simpleMethods35.addElementToSet(intSet76, 8);
        simpleMethods31.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods14.addElementToSet(intSet38, (int) (short) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods14.addElementToSet(intSet79, 3);
        simpleMethods4.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, 7);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) -1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) ' ');
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 3);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (short) 10);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, 6);
        java.util.HashSet<java.lang.Integer> intSet92 = null;
        simpleMethods0.addElementToSet(intSet92, (-1));
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        simpleMethods10.addElementToSet(intSet54, 8);
        simpleMethods0.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) '4');
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-5));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods13.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods13.addElementToSet(intSet48, 100);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods13.addElementToSet(intSet68, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 1);
        simpleMethods4.addElementToSet(intSet87, (int) 'a');
        simpleMethods0.addElementToSet(intSet87, 2);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-100));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-2));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods25.addElementToSet(intSet89, 9);
        simpleMethods21.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-10));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods25.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-6));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 9);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 10);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 0);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods14.addElementToSet(intSet18, 10);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods14.addElementToSet(intSet21, (-4));
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods24.addElementToSet(intSet63, (int) '#');
        simpleMethods14.addElementToSet(intSet63, (-1));
        simpleMethods10.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, 8);
        java.lang.Class<?> wildcardClass77 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods0.addElementToSet(intSet69, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods0.addElementToSet(intSet72, 3);
        java.util.HashSet<java.lang.Integer> intSet75 = null;
        simpleMethods0.addElementToSet(intSet75, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods68.addElementToSet(intSet84, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet84, 7);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods30.addElementToSet(intSet54, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods30.addElementToSet(intSet57, (int) '4');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods30.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 100);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 100);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (-1));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-6));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods65.addElementToSet(intSet81, (int) (byte) 10);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods65.addElementToSet(intSet89, 100);
        simpleMethods0.addElementToSet(intSet89, (-5));
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 0);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods14.addElementToSet(intSet18, 10);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods14.addElementToSet(intSet21, (-4));
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods24.addElementToSet(intSet63, (int) '#');
        simpleMethods14.addElementToSet(intSet63, (-1));
        simpleMethods10.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, 8);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 10);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, (-100));
        simpleMethods22.addElementToSet(intSet78, (-1));
        simpleMethods18.addElementToSet(intSet78, (-9));
        simpleMethods0.addElementToSet(intSet78, (-3));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-5));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods34.addElementToSet(intSet58, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods34.addElementToSet(intSet61, (int) '4');
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods34.addElementToSet(intSet84, 1);
        simpleMethods0.addElementToSet(intSet84, 1);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 100);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods76.addElementToSet(intSet92, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet92, (-9));
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 100);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-100), 1, 100, (-5) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods0.addElementToSet(intSet88, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (int) (short) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 2);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods38.addElementToSet(intSet79, (int) (short) 0);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods38.addElementToSet(intSet91, (-100));
        simpleMethods34.addElementToSet(intSet91, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet91, 6);
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 2);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 4);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, 100);
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (int) '#');
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods7.addElementToSet(intSet89, (-7));
        simpleMethods0.addElementToSet(intSet89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods14.addElementToSet(intSet38, (int) (short) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods14.addElementToSet(intSet79, 3);
        simpleMethods4.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, 7);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-9));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods4.addElementToSet(intSet51, (-9));
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods4.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) (byte) 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) 'a');
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 2);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods48.addElementToSet(intSet89, (int) (short) 0);
        simpleMethods24.addElementToSet(intSet89, (-3));
        simpleMethods20.addElementToSet(intSet89, 10);
        simpleMethods0.addElementToSet(intSet89, (int) '4');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-10));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 6);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 2);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-7));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 1);
        simpleMethods13.addElementToSet(intSet72, (-1));
        simpleMethods12.addElementToSet(intSet72, (-5));
        simpleMethods11.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 5);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, (-100));
        java.util.HashSet<java.lang.Integer> intSet75 = null;
        simpleMethods34.addElementToSet(intSet75, (int) (byte) -1);
        java.lang.Integer[] intArray93 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet94 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet94, intArray93);
        simpleMethods34.addElementToSet(intSet94, 1);
        simpleMethods0.addElementToSet(intSet94, 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-2));
        simpleMethods4.addElementToSet(intSet89, (-10));
        simpleMethods0.addElementToSet(intSet89, (-9));
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-2));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet85, 6);
        java.lang.Class<?> wildcardClass97 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 10);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 3);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet85, 6);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 10);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 3);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 100);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-4));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods8.addElementToSet(intSet9, 0);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods8.addElementToSet(intSet12, 10);
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods8.addElementToSet(intSet15, (-4));
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-10));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (-1));
        simpleMethods8.addElementToSet(intSet82, (int) '#');
        simpleMethods7.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 4);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 2);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-5));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (-8));
        java.util.HashSet<java.lang.Integer> intSet86 = null;
        simpleMethods0.addElementToSet(intSet86, (int) 'a');
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 9);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-7));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 4);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 10);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (-6));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, 4);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (short) 0);
        java.lang.Integer[] intArray94 = new java.lang.Integer[] { 5, 10, (-1), (-7), 2, (-5), (-100), 9, (-5), 0, 6, 1, 5, 5, (-6), (-3), (-8), (-7), (-4), (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet95 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet95, intArray94);
        simpleMethods0.addElementToSet(intSet95, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 4);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 7);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-3));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 8);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, 0);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods10.addElementToSet(intSet54, (-10));
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods57.addElementToSet(intSet73, (int) (byte) 10);
        simpleMethods10.addElementToSet(intSet73, (int) ' ');
        simpleMethods0.addElementToSet(intSet73, 0);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 10);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-5));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-6));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, (-3));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, (-4));
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 2);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods48.addElementToSet(intSet89, (int) (short) 0);
        simpleMethods24.addElementToSet(intSet89, (-3));
        simpleMethods20.addElementToSet(intSet89, 10);
        simpleMethods0.addElementToSet(intSet89, (int) '4');
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-5));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 3);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 2);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 4);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, 6);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods35.addElementToSet(intSet55, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods35.addElementToSet(intSet79, 8);
        simpleMethods25.addElementToSet(intSet79, 9);
        simpleMethods21.addElementToSet(intSet79, (-8));
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.lang.Class<?> wildcardClass91 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 2);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 2);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 4);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, 6);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods35.addElementToSet(intSet55, 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods35.addElementToSet(intSet79, 8);
        simpleMethods25.addElementToSet(intSet79, 9);
        simpleMethods21.addElementToSet(intSet79, (-8));
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods4.addElementToSet(intSet83, (-4));
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) ' ');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 1);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 5);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, 6);
        java.util.HashSet<java.lang.Integer> intSet92 = null;
        simpleMethods0.addElementToSet(intSet92, (-1));
        java.util.HashSet<java.lang.Integer> intSet95 = null;
        simpleMethods0.addElementToSet(intSet95, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet85, 6);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-10));
        simpleMethods4.addElementToSet(intSet46, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods4.addElementToSet(intSet54, (int) '#');
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods57.addElementToSet(intSet73, (int) (byte) 10);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods57.addElementToSet(intSet81, 100);
        simpleMethods4.addElementToSet(intSet81, 3);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.lang.Class<?> wildcardClass89 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, 0);
        java.lang.Class<?> wildcardClass79 = intSet71.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-10));
        simpleMethods4.addElementToSet(intSet46, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods4.addElementToSet(intSet54, (int) '#');
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods57.addElementToSet(intSet73, (int) (byte) 10);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods57.addElementToSet(intSet81, 100);
        simpleMethods4.addElementToSet(intSet81, 3);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, (-1));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods7.addElementToSet(intSet67, (-5));
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-3));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods8.addElementToSet(intSet73, (-3));
        simpleMethods4.addElementToSet(intSet73, 0);
        simpleMethods0.addElementToSet(intSet73, (-2));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (-8));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods14.addElementToSet(intSet38, (int) (short) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods14.addElementToSet(intSet79, 3);
        simpleMethods4.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, 7);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) 'a');
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods22.addElementToSet(intSet75, (-100));
        simpleMethods18.addElementToSet(intSet75, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet75, 5);
        java.lang.Class<?> wildcardClass83 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 1);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, 100);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 10);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods62.addElementToSet(intSet78, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet78, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 5);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 1);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods21.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, (-9));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) '#');
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-2));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) -1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods76.addElementToSet(intSet92, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet92, 8);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) ' ');
        java.lang.Class<?> wildcardClass21 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, 0);
        simpleMethods21.addElementToSet(intSet63, (-4));
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 0, 3, (-10), (-1), 1, (-1), 7, (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods21.addElementToSet(intSet80, 6);
        simpleMethods0.addElementToSet(intSet80, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-2));
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods52.addElementToSet(intSet72, 0);
        simpleMethods8.addElementToSet(intSet72, (int) (short) -1);
        simpleMethods4.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet72, 3);
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 2);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 10);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (-7));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet43, 2);
        java.lang.Class<?> wildcardClass53 = intSet43.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, (int) (short) 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet30 = null;
        simpleMethods29.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, 100);
        simpleMethods34.addElementToSet(intSet70, (int) (byte) -1);
        simpleMethods33.addElementToSet(intSet70, 8);
        simpleMethods29.addElementToSet(intSet70, 8);
        simpleMethods8.addElementToSet(intSet70, 1);
        simpleMethods4.addElementToSet(intSet70, (-10));
        simpleMethods0.addElementToSet(intSet70, 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.util.HashSet<java.lang.Integer> intSet30 = null;
        simpleMethods12.addElementToSet(intSet30, 2);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods12.addElementToSet(intSet47, 100);
        simpleMethods11.addElementToSet(intSet47, (int) (byte) -1);
        simpleMethods10.addElementToSet(intSet47, 8);
        simpleMethods0.addElementToSet(intSet47, 10);
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-5));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 5);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 0);
        java.lang.Class<?> wildcardClass13 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods5.addElementToSet(intSet6, 10);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods9.addElementToSet(intSet23, 9);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods9.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods9.addElementToSet(intSet47, (-2));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods9.addElementToSet(intSet73, (int) (short) -1);
        simpleMethods5.addElementToSet(intSet73, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet73, 9);
        simpleMethods0.addElementToSet(intSet73, 4);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-6));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 100);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-1));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) '4');
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 10);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        simpleMethods22.addElementToSet(intSet57, 100);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods63.addElementToSet(intSet77, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods63.addElementToSet(intSet83, 0);
        simpleMethods22.addElementToSet(intSet83, 8);
        simpleMethods18.addElementToSet(intSet83, 9);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-10));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 10);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods40.addElementToSet(intSet76, (int) (byte) -1);
        simpleMethods39.addElementToSet(intSet76, 8);
        simpleMethods35.addElementToSet(intSet76, 8);
        simpleMethods31.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 10);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-5));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-2));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 0);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods7.addElementToSet(intSet89, (-7));
        simpleMethods0.addElementToSet(intSet89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 10);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-6));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 6);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods8.addElementToSet(intSet69, 8);
        simpleMethods4.addElementToSet(intSet69, 9);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods4.addElementToSet(intSet91, (int) ' ');
        simpleMethods0.addElementToSet(intSet91, 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 10);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-2));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (int) (short) -1);
        simpleMethods7.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet75, (-9));
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods8.addElementToSet(intSet61, (-100));
        simpleMethods4.addElementToSet(intSet61, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet61, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods0.addElementToSet(intSet69, 9);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 2);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, (-100));
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods24.addElementToSet(intSet88, 9);
        simpleMethods20.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 100);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, (-100));
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods33.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods33.addElementToSet(intSet68, 100);
        simpleMethods32.addElementToSet(intSet68, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 1);
        simpleMethods2.addElementToSet(intSet82, 0);
        simpleMethods1.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods13.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods13.addElementToSet(intSet48, 100);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods13.addElementToSet(intSet68, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 10);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 100);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods73.addElementToSet(intSet93, 0);
        simpleMethods0.addElementToSet(intSet93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods21.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 4);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 3);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods18.addElementToSet(intSet71, (-100));
        simpleMethods0.addElementToSet(intSet71, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet43, 2);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (byte) 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods56.addElementToSet(intSet72, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet72, 100);
        java.lang.Class<?> wildcardClass78 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 1);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods36.addElementToSet(intSet50, 9);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods36.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods36.addElementToSet(intSet80, 8);
        simpleMethods0.addElementToSet(intSet80, 8);
        java.lang.Class<?> wildcardClass88 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 10);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 100);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods18.addElementToSet(intSet79, 8);
        simpleMethods14.addElementToSet(intSet79, 9);
        simpleMethods10.addElementToSet(intSet79, (-1));
        simpleMethods0.addElementToSet(intSet79, (-6));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 6);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-2));
        simpleMethods0.addElementToSet(intSet59, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 0);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods38.addElementToSet(intSet56, 2);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        simpleMethods38.addElementToSet(intSet73, 1);
        simpleMethods14.addElementToSet(intSet73, (-1));
        simpleMethods13.addElementToSet(intSet73, (-5));
        simpleMethods0.addElementToSet(intSet73, 0);
        java.lang.Class<?> wildcardClass85 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, (int) (byte) -1);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods4.addElementToSet(intSet64, 1);
        simpleMethods0.addElementToSet(intSet64, 2);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 6);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) 'a');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods14.addElementToSet(intSet38, (int) (short) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods14.addElementToSet(intSet79, 3);
        simpleMethods4.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, 7);
        java.lang.Class<?> wildcardClass91 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods50.addElementToSet(intSet91, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet91, 10);
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods50.addElementToSet(intSet91, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet91, 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 2);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods4.addElementToSet(intSet20, (int) (byte) 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-2));
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods24.addElementToSet(intSet88, 9);
        simpleMethods4.addElementToSet(intSet88, 2);
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 100);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, (-100));
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 1);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods36.addElementToSet(intSet50, 9);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods36.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods36.addElementToSet(intSet80, 8);
        simpleMethods0.addElementToSet(intSet80, 8);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-2));
        simpleMethods4.addElementToSet(intSet89, (-10));
        simpleMethods0.addElementToSet(intSet89, (-9));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 5);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-2));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 10);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods40.addElementToSet(intSet76, (int) (byte) -1);
        simpleMethods39.addElementToSet(intSet76, 8);
        simpleMethods35.addElementToSet(intSet76, 8);
        simpleMethods31.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet92 = null;
        simpleMethods0.addElementToSet(intSet92, (-8));
        java.util.HashSet<java.lang.Integer> intSet95 = null;
        simpleMethods0.addElementToSet(intSet95, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 8, 0, 8, (-100), 8, (-5), 1, 9, (-4), (-100), (-6), 8, (-2) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (-2));
        java.lang.Class<?> wildcardClass97 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods33.addElementToSet(intSet37, 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods33.addElementToSet(intSet40, (-4));
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods33.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) '4');
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-5));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-4));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (-7));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 6);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods8.addElementToSet(intSet9, 0);
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods38.addElementToSet(intSet56, 2);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        simpleMethods38.addElementToSet(intSet73, 1);
        simpleMethods14.addElementToSet(intSet73, (-1));
        simpleMethods13.addElementToSet(intSet73, (-5));
        simpleMethods12.addElementToSet(intSet73, (-2));
        simpleMethods8.addElementToSet(intSet73, (int) (byte) 0);
        simpleMethods4.addElementToSet(intSet73, (int) ' ');
        simpleMethods0.addElementToSet(intSet73, (-100));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 100);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, 0);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet13 = null;
        simpleMethods0.addElementToSet(intSet13, 0);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods16.addElementToSet(intSet30, 9);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods16.addElementToSet(intSet34, 2);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        simpleMethods16.addElementToSet(intSet51, 100);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods16.addElementToSet(intSet57, 5);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods16.addElementToSet(intSet74, 4);
        simpleMethods0.addElementToSet(intSet74, (int) (short) -1);
        java.lang.Class<?> wildcardClass82 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods22.addElementToSet(intSet75, (-100));
        simpleMethods18.addElementToSet(intSet75, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet75, 5);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (short) 0);
        java.lang.Integer[] intArray94 = new java.lang.Integer[] { 5, 10, (-1), (-7), 2, (-5), (-100), 9, (-5), 0, 6, 1, 5, 5, (-6), (-3), (-8), (-7), (-4), (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet95 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet95, intArray94);
        simpleMethods0.addElementToSet(intSet95, 1);
        java.lang.Class<?> wildcardClass99 = intSet95.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-4));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) '#');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 10);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods40.addElementToSet(intSet76, (int) (byte) -1);
        simpleMethods39.addElementToSet(intSet76, 8);
        simpleMethods35.addElementToSet(intSet76, 8);
        simpleMethods31.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet92 = null;
        simpleMethods0.addElementToSet(intSet92, (-8));
        java.util.HashSet<java.lang.Integer> intSet95 = null;
        simpleMethods0.addElementToSet(intSet95, 3);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (-1));
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), (-5), 1, 3, (-2), (-100), 7, (-2), 10, 9, 7, 0, (-2), (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods0.addElementToSet(intSet49, (-10));
        java.lang.Class<?> wildcardClass53 = intSet49.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-3));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-9));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 3);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, (int) (short) -1);
        java.lang.Class<?> wildcardClass90 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, (int) (byte) 100);
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-100));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 100);
        simpleMethods39.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet75, (-8));
        simpleMethods0.addElementToSet(intSet75, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-7));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '#');
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, 100);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods20.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, (-100));
        java.lang.Class<?> wildcardClass89 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, (-1));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, (-100));
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, (int) (byte) 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods25.addElementToSet(intSet78, (-100));
        simpleMethods4.addElementToSet(intSet78, (-1));
        simpleMethods0.addElementToSet(intSet78, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet86 = null;
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods10.addElementToSet(intSet63, 5);
        simpleMethods0.addElementToSet(intSet63, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods41.addElementToSet(intSet45, 10);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods41.addElementToSet(intSet48, (-4));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods41.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 9);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 7);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 2);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-2));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, 7);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3), 8, (-9), 7, 0, 100, (-1), (-8), 5, 6, 8, (-1), 0, 10, (-10) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-100));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods4.addElementToSet(intSet83, (-4));
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 3);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 0);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods47.addElementToSet(intSet51, 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods47.addElementToSet(intSet54, (-4));
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods57.addElementToSet(intSet71, 9);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods57.addElementToSet(intSet77, 0);
        simpleMethods47.addElementToSet(intSet77, (-1));
        simpleMethods0.addElementToSet(intSet77, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-6));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 6);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) ' ');
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 0, 100, (-3), (-6), 8, 0, (-8), (-1), 7, 3, 8, (-100), 2, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods0.addElementToSet(intSet69, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-2));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 10);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods4.addElementToSet(intSet20, (int) (byte) 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 100);
        simpleMethods33.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods32.addElementToSet(intSet69, 8);
        simpleMethods28.addElementToSet(intSet69, 8);
        simpleMethods24.addElementToSet(intSet69, (-100));
        simpleMethods4.addElementToSet(intSet69, (-2));
        simpleMethods0.addElementToSet(intSet69, 0);
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (int) (short) 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }
}

