package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 5);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-8));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) 100);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 2);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods73.addElementToSet(intSet93, 0);
        simpleMethods0.addElementToSet(intSet93, 6);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) 10);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass94 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods25.addElementToSet(intSet89, 9);
        simpleMethods21.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods73.addElementToSet(intSet93, 0);
        simpleMethods0.addElementToSet(intSet93, 6);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (-1));
        simpleMethods7.addElementToSet(intSet75, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet75, 10);
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.lang.Class<?> wildcardClass67 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 4);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-1));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 0);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (-6));
        java.lang.Class<?> wildcardClass27 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods61.addElementToSet(intSet77, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet77, 9);
        java.lang.Class<?> wildcardClass83 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 10);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, (-100));
        simpleMethods22.addElementToSet(intSet78, (-1));
        simpleMethods18.addElementToSet(intSet78, (-9));
        simpleMethods0.addElementToSet(intSet78, (-3));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, (-5));
        java.lang.Class<?> wildcardClass48 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, (-100));
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods1.addElementToSet(intSet65, 9);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.lang.Class<?> wildcardClass71 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods21.addElementToSet(intSet37, (int) (byte) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods21.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet86 = null;
        simpleMethods0.addElementToSet(intSet86, (-1));
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 100);
        simpleMethods46.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods45.addElementToSet(intSet82, 8);
        simpleMethods41.addElementToSet(intSet82, 8);
        simpleMethods0.addElementToSet(intSet82, (int) '#');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods44.addElementToSet(intSet86, 0);
        simpleMethods0.addElementToSet(intSet86, 100);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-6));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-3));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods8.addElementToSet(intSet61, (-100));
        simpleMethods4.addElementToSet(intSet61, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet61, (int) (short) 1);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods44.addElementToSet(intSet86, 0);
        simpleMethods0.addElementToSet(intSet86, 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 10);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods32.addElementToSet(intSet89, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet89, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet89, (-7));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 7);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, (-9));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods30.addElementToSet(intSet84, (-8));
        simpleMethods0.addElementToSet(intSet84, (-2));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.lang.Class<?> wildcardClass61 = intSet57.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods2.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 1);
        simpleMethods2.addElementToSet(intSet61, (-1));
        simpleMethods1.addElementToSet(intSet61, (-5));
        simpleMethods0.addElementToSet(intSet61, (-2));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 10);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods31.addElementToSet(intSet66, 100);
        simpleMethods30.addElementToSet(intSet66, (int) (byte) -1);
        simpleMethods29.addElementToSet(intSet66, 8);
        simpleMethods25.addElementToSet(intSet66, 8);
        simpleMethods21.addElementToSet(intSet66, 6);
        simpleMethods0.addElementToSet(intSet66, (int) (byte) 10);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods52.addElementToSet(intSet70, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods52.addElementToSet(intSet87, 100);
        simpleMethods51.addElementToSet(intSet87, (int) (byte) -1);
        simpleMethods50.addElementToSet(intSet87, 8);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 1);
        java.lang.Class<?> wildcardClass24 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 2);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods41.addElementToSet(intSet45, 4);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 100);
        simpleMethods41.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 10);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods32.addElementToSet(intSet89, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet89, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet89, (-7));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) 'a');
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        simpleMethods7.addElementToSet(intSet49, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods7.addElementToSet(intSet57, (int) '#');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods60.addElementToSet(intSet76, (int) (byte) 10);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods60.addElementToSet(intSet84, 100);
        simpleMethods7.addElementToSet(intSet84, 3);
        simpleMethods0.addElementToSet(intSet84, (-10));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, (int) (byte) -1);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods4.addElementToSet(intSet64, 1);
        simpleMethods0.addElementToSet(intSet64, 2);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) ' ');
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 10);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, (-4));
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods35.addElementToSet(intSet74, (int) '#');
        simpleMethods25.addElementToSet(intSet74, (-1));
        simpleMethods21.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, 0);
        java.lang.Class<?> wildcardClass88 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 6);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (int) '4');
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods50.addElementToSet(intSet54, 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods50.addElementToSet(intSet57, (-4));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods50.addElementToSet(intSet80, (-1));
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, 100);
        simpleMethods0.addElementToSet(intSet79, (-3));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        java.lang.Class<?> wildcardClass13 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet17 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet17, intArray16);
        simpleMethods1.addElementToSet(intSet17, (int) (byte) 10);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods1.addElementToSet(intSet25, 100);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods1.addElementToSet(intSet29, 9);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods1.addElementToSet(intSet67, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet67, (-2));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet17 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet17, intArray16);
        simpleMethods1.addElementToSet(intSet17, (int) (byte) 10);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods1.addElementToSet(intSet25, 100);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods1.addElementToSet(intSet29, 9);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods1.addElementToSet(intSet67, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet67, (-2));
        java.lang.Class<?> wildcardClass77 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods47.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods4.addElementToSet(intSet62, 10);
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-1));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-4));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 9);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods30.addElementToSet(intSet54, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods30.addElementToSet(intSet57, (int) '4');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods30.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods37.addElementToSet(intSet81, 0);
        simpleMethods33.addElementToSet(intSet81, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 100);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-8));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-1));
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 1);
        simpleMethods13.addElementToSet(intSet72, (-1));
        simpleMethods12.addElementToSet(intSet72, (-5));
        simpleMethods11.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods18.addElementToSet(intSet34, (int) (byte) 10);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods18.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods18.addElementToSet(intSet46, 9);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 1);
        simpleMethods18.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet84, (-5));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-9), (-2), (-1), 2, 3, 100, (-2) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 1);
        simpleMethods13.addElementToSet(intSet72, (-1));
        simpleMethods12.addElementToSet(intSet72, (-5));
        simpleMethods11.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods11.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods11.addElementToSet(intSet46, 1);
        simpleMethods7.addElementToSet(intSet46, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods7.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) (short) -1);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.util.HashSet<java.lang.Integer> intSet75 = null;
        simpleMethods0.addElementToSet(intSet75, (int) '#');
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 10);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 10);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods5.addElementToSet(intSet69, 9);
        simpleMethods4.addElementToSet(intSet69, 0);
        simpleMethods0.addElementToSet(intSet69, (-9));
        java.lang.Class<?> wildcardClass77 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods25.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-2));
        simpleMethods0.addElementToSet(intSet62, 100);
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 5);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods37.addElementToSet(intSet81, 0);
        simpleMethods33.addElementToSet(intSet81, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (-1));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 3);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 100);
        simpleMethods46.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet82, (-8));
        simpleMethods0.addElementToSet(intSet82, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) (short) 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (byte) 0);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods31.addElementToSet(intSet66, 100);
        simpleMethods30.addElementToSet(intSet66, (int) (byte) -1);
        simpleMethods29.addElementToSet(intSet66, 8);
        simpleMethods25.addElementToSet(intSet66, 8);
        simpleMethods21.addElementToSet(intSet66, 6);
        simpleMethods0.addElementToSet(intSet66, (int) (byte) 10);
        java.lang.Class<?> wildcardClass82 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.lang.Class<?> wildcardClass10 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (-1));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 9);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-2));
        simpleMethods0.addElementToSet(intSet62, 100);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 2);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods41.addElementToSet(intSet45, 4);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 100);
        simpleMethods41.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 1);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 10);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 8);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 8);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods27.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods27.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet84, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-2));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 3);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, 1);
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass97 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 3);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods31.addElementToSet(intSet66, 1);
        simpleMethods0.addElementToSet(intSet66, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.lang.Class<?> wildcardClass65 = intSet53.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods10.addElementToSet(intSet14, 10);
        java.util.HashSet<java.lang.Integer> intSet17 = null;
        simpleMethods10.addElementToSet(intSet17, (-4));
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods20.addElementToSet(intSet40, 0);
        simpleMethods10.addElementToSet(intSet40, (-1));
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods46.addElementToSet(intSet62, (int) (byte) 10);
        simpleMethods10.addElementToSet(intSet62, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet62, (-3));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, 1);
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 4);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (-7));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods8.addElementToSet(intSet72, (-1));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods8.addElementToSet(intSet89, 9);
        simpleMethods4.addElementToSet(intSet89, (-3));
        simpleMethods0.addElementToSet(intSet89, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) '#');
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-8));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-1));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 100, 9, 7, (-5), 100, 0, (-5), (-7), 2 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods0.addElementToSet(intSet85, 8);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) ' ');
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (byte) 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 4);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, (-3));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods20.addElementToSet(intSet27, (-4));
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods20.addElementToSet(intSet50, (-1));
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods56.addElementToSet(intSet72, (int) (byte) 10);
        simpleMethods20.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet72, 8);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-8));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 1);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods24.addElementToSet(intSet28, 10);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods24.addElementToSet(intSet31, (-4));
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        simpleMethods24.addElementToSet(intSet54, (-1));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods60.addElementToSet(intSet76, (int) (byte) 10);
        simpleMethods24.addElementToSet(intSet76, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet76, 1);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 2);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-1));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 1);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods24.addElementToSet(intSet28, 10);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods24.addElementToSet(intSet31, (-4));
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        simpleMethods24.addElementToSet(intSet54, (-1));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods60.addElementToSet(intSet76, (int) (byte) 10);
        simpleMethods24.addElementToSet(intSet76, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet76, 1);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 100);
        simpleMethods46.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet82, (-8));
        simpleMethods0.addElementToSet(intSet82, (int) ' ');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods4.addElementToSet(intSet51, (-9));
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods4.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) '#');
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 5);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods36.addElementToSet(intSet37, 0);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods36.addElementToSet(intSet40, 10);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods36.addElementToSet(intSet43, (-4));
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods46.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 1);
        simpleMethods46.addElementToSet(intSet85, (int) '#');
        simpleMethods36.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-9), (-2), (-1), 2, 3, 100, (-2) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        simpleMethods7.addElementToSet(intSet49, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods7.addElementToSet(intSet57, (int) '#');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods60.addElementToSet(intSet76, (int) (byte) 10);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods60.addElementToSet(intSet84, 100);
        simpleMethods7.addElementToSet(intSet84, 3);
        simpleMethods0.addElementToSet(intSet84, (-10));
        java.lang.Class<?> wildcardClass92 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-6));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 0);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods4.addElementToSet(intSet83, (-4));
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) 'a');
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods25.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 6);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods50.addElementToSet(intSet54, 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods50.addElementToSet(intSet57, (-4));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods50.addElementToSet(intSet80, (-1));
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, (-100));
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods70.addElementToSet(intSet86, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 0);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods53.addElementToSet(intSet54, 2);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods53.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.lang.Class<?> wildcardClass88 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 4);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (-7));
        java.lang.Class<?> wildcardClass92 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-8));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 10);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods32.addElementToSet(intSet89, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet89, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet89, (-7));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-100));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-2));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 8);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-8));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        java.lang.Class<?> wildcardClass24 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-100));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods10.addElementToSet(intSet34, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods10.addElementToSet(intSet37, (int) '4');
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods40.addElementToSet(intSet60, 0);
        simpleMethods10.addElementToSet(intSet60, 1);
        simpleMethods0.addElementToSet(intSet60, (-4));
        java.lang.Class<?> wildcardClass68 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 10);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 100);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods18.addElementToSet(intSet79, 8);
        simpleMethods14.addElementToSet(intSet79, 9);
        simpleMethods10.addElementToSet(intSet79, (-1));
        simpleMethods0.addElementToSet(intSet79, (-6));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 1);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-2));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (int) 'a');
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 4);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) -1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-4));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 100);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (-4));
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods4.addElementToSet(intSet51, (-9));
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods4.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) '#');
        java.lang.Class<?> wildcardClass67 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 10);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods44.addElementToSet(intSet51, (-4));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods44.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) (byte) 100);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods5.addElementToSet(intSet69, 9);
        simpleMethods4.addElementToSet(intSet69, 0);
        simpleMethods0.addElementToSet(intSet69, (-9));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 5);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods36.addElementToSet(intSet37, 0);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods36.addElementToSet(intSet40, 10);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods36.addElementToSet(intSet43, (-4));
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods46.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 1);
        simpleMethods46.addElementToSet(intSet85, (int) '#');
        simpleMethods36.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 9);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods50.addElementToSet(intSet89, (int) '#');
        simpleMethods0.addElementToSet(intSet89, (int) '#');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods50.addElementToSet(intSet89, (int) '#');
        simpleMethods0.addElementToSet(intSet89, (int) '#');
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 10);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods44.addElementToSet(intSet51, (-4));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods44.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) (byte) 100);
        java.lang.Class<?> wildcardClass82 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods6.addElementToSet(intSet7, 0);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods6.addElementToSet(intSet10, 10);
        java.util.HashSet<java.lang.Integer> intSet13 = null;
        simpleMethods6.addElementToSet(intSet13, (-4));
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods16.addElementToSet(intSet30, 9);
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods16.addElementToSet(intSet36, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods16.addElementToSet(intSet54, (-10));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods16.addElementToSet(intSet80, (-1));
        simpleMethods6.addElementToSet(intSet80, (int) '#');
        simpleMethods5.addElementToSet(intSet80, (int) (short) 1);
        simpleMethods4.addElementToSet(intSet80, (-5));
        simpleMethods0.addElementToSet(intSet80, 10);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 3);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 5);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (-6));
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.lang.Class<?> wildcardClass69 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        java.lang.Class<?> wildcardClass31 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods18.addElementToSet(intSet34, (int) (byte) 10);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods18.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods18.addElementToSet(intSet46, 9);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 1);
        simpleMethods18.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet84, (-5));
        java.lang.Class<?> wildcardClass94 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods7.addElementToSet(intSet48, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet48, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, (int) '#');
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods44.addElementToSet(intSet73, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet73, 100);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-2));
        simpleMethods0.addElementToSet(intSet59, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 10);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        simpleMethods0.addElementToSet(intSet30, (-1));
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods36.addElementToSet(intSet52, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet52, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 8);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods44.addElementToSet(intSet86, 0);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 100);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods7.addElementToSet(intSet31, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods7.addElementToSet(intSet34, (int) '4');
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        simpleMethods7.addElementToSet(intSet57, 1);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.lang.Class<?> wildcardClass65 = intSet57.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 9);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) '4');
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-2), 3, (-4) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods0.addElementToSet(intSet78, (-5));
        java.lang.Class<?> wildcardClass82 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods5.addElementToSet(intSet6, 0);
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods5.addElementToSet(intSet9, 10);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods5.addElementToSet(intSet12, (-4));
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods15.addElementToSet(intSet29, 9);
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods15.addElementToSet(intSet35, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods15.addElementToSet(intSet53, (-10));
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods15.addElementToSet(intSet79, (-1));
        simpleMethods5.addElementToSet(intSet79, (int) '#');
        simpleMethods4.addElementToSet(intSet79, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet79, (-10));
        java.lang.Class<?> wildcardClass91 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 4);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods47.addElementToSet(intSet84, 8);
        simpleMethods0.addElementToSet(intSet84, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-6));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, (-100));
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods61.addElementToSet(intSet77, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet77, 9);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) ' ');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 10);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, (-4));
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods35.addElementToSet(intSet74, (int) '#');
        simpleMethods25.addElementToSet(intSet74, (-1));
        simpleMethods21.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (-8));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 7);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 100);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 2);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods14.addElementToSet(intSet53, (int) '#');
        simpleMethods4.addElementToSet(intSet53, (-1));
        simpleMethods0.addElementToSet(intSet53, (-1));
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 2);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 6);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 2);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods10.addElementToSet(intSet63, 5);
        simpleMethods0.addElementToSet(intSet63, (int) ' ');
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) 'a');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) 'a');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 7);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 0);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods35.addElementToSet(intSet39, 10);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods35.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods45.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 1);
        simpleMethods45.addElementToSet(intSet84, (int) '#');
        simpleMethods35.addElementToSet(intSet84, (-1));
        simpleMethods31.addElementToSet(intSet84, (-1));
        simpleMethods10.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 10);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, (-100));
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods28.addElementToSet(intSet92, 9);
        simpleMethods24.addElementToSet(intSet92, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet92, (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) 'a');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-9));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-5));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (-8));
        java.util.HashSet<java.lang.Integer> intSet86 = null;
        simpleMethods0.addElementToSet(intSet86, (-6));
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods20.addElementToSet(intSet27, (-4));
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods20.addElementToSet(intSet50, (-1));
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods56.addElementToSet(intSet72, (int) (byte) 10);
        simpleMethods20.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet72, 8);
        java.lang.Class<?> wildcardClass80 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-8));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods24.addElementToSet(intSet63, (int) (short) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods24.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods7.addElementToSet(intSet48, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet48, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods10.addElementToSet(intSet14, 10);
        java.util.HashSet<java.lang.Integer> intSet17 = null;
        simpleMethods10.addElementToSet(intSet17, (-4));
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods20.addElementToSet(intSet40, 0);
        simpleMethods10.addElementToSet(intSet40, (-1));
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods46.addElementToSet(intSet62, (int) (byte) 10);
        simpleMethods10.addElementToSet(intSet62, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet62, (-3));
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) (short) 1);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods6.addElementToSet(intSet7, 0);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods6.addElementToSet(intSet10, 10);
        java.util.HashSet<java.lang.Integer> intSet13 = null;
        simpleMethods6.addElementToSet(intSet13, (-4));
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods16.addElementToSet(intSet30, 9);
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods16.addElementToSet(intSet36, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods16.addElementToSet(intSet54, (-10));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods16.addElementToSet(intSet80, (-1));
        simpleMethods6.addElementToSet(intSet80, (int) '#');
        simpleMethods5.addElementToSet(intSet80, (int) (short) 1);
        simpleMethods4.addElementToSet(intSet80, (-5));
        simpleMethods0.addElementToSet(intSet80, 10);
        java.lang.Class<?> wildcardClass94 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods21.addElementToSet(intSet83, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods40.addElementToSet(intSet60, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods40.addElementToSet(intSet84, 8);
        simpleMethods22.addElementToSet(intSet84, 7);
        simpleMethods18.addElementToSet(intSet84, 100);
        simpleMethods0.addElementToSet(intSet84, 7);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-3));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods48.addElementToSet(intSet89, (int) (short) 0);
        simpleMethods24.addElementToSet(intSet89, (-3));
        simpleMethods20.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 100);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) 'a');
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods18.addElementToSet(intSet34, (int) (byte) 10);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods18.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods18.addElementToSet(intSet46, 9);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 1);
        simpleMethods18.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet84, (-5));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 10);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods0.addElementToSet(intSet61, (-100));
        java.lang.Class<?> wildcardClass67 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods21.addElementToSet(intSet45, (int) (short) 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods21.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods4.addElementToSet(intSet86, 9);
        simpleMethods0.addElementToSet(intSet86, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods0.addElementToSet(intSet57, (-2));
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-2));
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods52.addElementToSet(intSet72, 0);
        simpleMethods8.addElementToSet(intSet72, 9);
        simpleMethods4.addElementToSet(intSet72, 10);
        simpleMethods0.addElementToSet(intSet72, (int) ' ');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 1);
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods10.addElementToSet(intSet63, 5);
        simpleMethods0.addElementToSet(intSet63, (int) ' ');
        java.lang.Class<?> wildcardClass73 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 8);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 3);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 10);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, (-4));
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods35.addElementToSet(intSet74, (int) '#');
        simpleMethods25.addElementToSet(intSet74, (-1));
        simpleMethods21.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (-8));
        java.lang.Class<?> wildcardClass88 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods10.addElementToSet(intSet34, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods10.addElementToSet(intSet37, (int) '4');
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods40.addElementToSet(intSet60, 0);
        simpleMethods10.addElementToSet(intSet60, 1);
        simpleMethods0.addElementToSet(intSet60, (-4));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods30.addElementToSet(intSet54, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods30.addElementToSet(intSet57, (int) '4');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods30.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 100);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-5));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods21.addElementToSet(intSet83, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods0.addElementToSet(intSet63, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) '4');
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) '#');
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods70.addElementToSet(intSet86, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass92 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        java.lang.Class<?> wildcardClass4 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods51.addElementToSet(intSet92, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet92, 1);
        simpleMethods0.addElementToSet(intSet92, 4);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 5);
        simpleMethods27.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 3);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-5));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (-8));
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods8.addElementToSet(intSet9, 0);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods8.addElementToSet(intSet12, 10);
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods8.addElementToSet(intSet15, (-4));
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-10));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (-1));
        simpleMethods8.addElementToSet(intSet82, (int) '#');
        simpleMethods7.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 4);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods21.addElementToSet(intSet45, (int) (short) 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods21.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 0);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods47.addElementToSet(intSet51, 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods47.addElementToSet(intSet54, (-4));
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods57.addElementToSet(intSet71, 9);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods57.addElementToSet(intSet77, 0);
        simpleMethods47.addElementToSet(intSet77, (-1));
        simpleMethods0.addElementToSet(intSet77, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 3);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-10));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 5);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-3));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods48.addElementToSet(intSet89, (int) (short) 0);
        simpleMethods24.addElementToSet(intSet89, (-3));
        simpleMethods20.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet30 = null;
        simpleMethods0.addElementToSet(intSet30, 1);
        java.lang.Class<?> wildcardClass33 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods10.addElementToSet(intSet14, 10);
        java.util.HashSet<java.lang.Integer> intSet17 = null;
        simpleMethods10.addElementToSet(intSet17, (-4));
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods20.addElementToSet(intSet36, (int) (byte) 10);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 1);
        simpleMethods20.addElementToSet(intSet75, 1);
        simpleMethods10.addElementToSet(intSet75, (-9));
        simpleMethods0.addElementToSet(intSet75, 1);
        java.lang.Class<?> wildcardClass87 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods7.addElementToSet(intSet48, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet48, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, (int) '#');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 8);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (byte) 10);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 8);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (-8));
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, 100);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods21.addElementToSet(intSet82, (int) ' ');
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods4.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 9);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, (int) ' ');
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, 100);
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, 10);
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 10);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 5);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-8));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) '4');
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-2), 3, (-4) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods0.addElementToSet(intSet78, (-5));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 8);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods4.addElementToSet(intSet51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods4.addElementToSet(intSet89, (-2));
        simpleMethods0.addElementToSet(intSet89, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, (-100));
        simpleMethods28.addElementToSet(intSet84, (-1));
        simpleMethods0.addElementToSet(intSet84, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods37.addElementToSet(intSet78, (int) (short) 0);
        simpleMethods19.addElementToSet(intSet78, 5);
        simpleMethods18.addElementToSet(intSet78, 0);
        simpleMethods0.addElementToSet(intSet78, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods11.addElementToSet(intSet52, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet52, 7);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods58.addElementToSet(intSet78, 0);
        simpleMethods10.addElementToSet(intSet78, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet78, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { 8, (-2), 1, 3, (-1), (-8), (-6), 4, (-1), 10, 100, 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods0.addElementToSet(intSet75, (-5));
        java.lang.Class<?> wildcardClass79 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods44.addElementToSet(intSet73, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet73, 100);
        java.lang.Class<?> wildcardClass79 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods4.addElementToSet(intSet51, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods54.addElementToSet(intSet72, 2);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods54.addElementToSet(intSet89, 1);
        simpleMethods4.addElementToSet(intSet89, (-2));
        simpleMethods0.addElementToSet(intSet89, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 100);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 6);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        java.lang.Integer[] intArray93 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet94 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet94, intArray93);
        simpleMethods41.addElementToSet(intSet94, (-100));
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (-6));
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods13.addElementToSet(intSet31, (-1));
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods13.addElementToSet(intSet34, 1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods37.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods37.addElementToSet(intSet41, 10);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods37.addElementToSet(intSet44, (-4));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        simpleMethods37.addElementToSet(intSet67, (-1));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods73.addElementToSet(intSet89, (int) (byte) 10);
        simpleMethods37.addElementToSet(intSet89, (int) (byte) -1);
        simpleMethods13.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) 'a');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, (-100));
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods28.addElementToSet(intSet92, 9);
        simpleMethods7.addElementToSet(intSet92, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet92, 5);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods20.addElementToSet(intSet40, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods20.addElementToSet(intSet85, (-3));
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 1);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, (-1));
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods7.addElementToSet(intSet28, 1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods31.addElementToSet(intSet35, 10);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods31.addElementToSet(intSet38, (-4));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods31.addElementToSet(intSet61, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods31.addElementToSet(intSet83, (int) (byte) -1);
        simpleMethods7.addElementToSet(intSet83, 1);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 100);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) 'a');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 3);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-3));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods11.addElementToSet(intSet52, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet52, 7);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods58.addElementToSet(intSet78, 0);
        simpleMethods10.addElementToSet(intSet78, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet78, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-8));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, (-100));
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods1.addElementToSet(intSet65, 9);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 4);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 4);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (byte) 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, (-100));
        simpleMethods28.addElementToSet(intSet84, (-1));
        simpleMethods0.addElementToSet(intSet84, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 10);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 100);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods18.addElementToSet(intSet79, 8);
        simpleMethods14.addElementToSet(intSet79, 9);
        simpleMethods10.addElementToSet(intSet79, (-1));
        simpleMethods0.addElementToSet(intSet79, (-6));
        java.lang.Class<?> wildcardClass91 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 5);
        simpleMethods27.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods25.addElementToSet(intSet66, (int) (short) 0);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods25.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 6);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 100);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) '#');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.util.HashSet<java.lang.Integer> intSet75 = null;
        simpleMethods0.addElementToSet(intSet75, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet78 = null;
        simpleMethods0.addElementToSet(intSet78, (-2));
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-4));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 100);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-2));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-9));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-5), 1, (-3) };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods0.addElementToSet(intSet92, 7);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) 'a');
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-8));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods10.addElementToSet(intSet34, (int) (short) 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, (-2));
        simpleMethods10.addElementToSet(intSet75, 3);
        simpleMethods0.addElementToSet(intSet75, (int) (byte) -1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods7.addElementToSet(intSet31, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods7.addElementToSet(intSet34, (int) '4');
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        simpleMethods7.addElementToSet(intSet57, 1);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods10.addElementToSet(intSet14, 4);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods17.addElementToSet(intSet18, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods23.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods23.addElementToSet(intSet82, (-1));
        simpleMethods22.addElementToSet(intSet82, (-5));
        simpleMethods21.addElementToSet(intSet82, (-2));
        simpleMethods17.addElementToSet(intSet82, (int) (byte) 0);
        simpleMethods10.addElementToSet(intSet82, (-1));
        simpleMethods0.addElementToSet(intSet82, 2);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods10.addElementToSet(intSet86, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet86, 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (byte) 10);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods32.addElementToSet(intSet85, (-100));
        simpleMethods28.addElementToSet(intSet85, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet85, (-5));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 9);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 10);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-4));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 10);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-3));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 10);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 10);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods0.addElementToSet(intSet61, (-100));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 100);
        simpleMethods36.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods35.addElementToSet(intSet72, 8);
        simpleMethods31.addElementToSet(intSet72, 8);
        simpleMethods27.addElementToSet(intSet72, (-100));
        simpleMethods0.addElementToSet(intSet72, 100);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 4, (-7), 5, (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 5);
        java.lang.Class<?> wildcardClass94 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, (-100));
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods1.addElementToSet(intSet65, 9);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 4);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), (-9), (-10), (-2), (-100), (-5), (-2), (-4), 6, 3, 7, 1, 10, (-5), (-5), 3 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.lang.Class<?> wildcardClass95 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-10));
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods24.addElementToSet(intSet63, (int) (short) 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods24.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods76.addElementToSet(intSet90, 9);
        simpleMethods0.addElementToSet(intSet90, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 1);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (int) 'a');
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods4.addElementToSet(intSet33, (int) (short) -1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods37.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods37.addElementToSet(intSet41, 10);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods37.addElementToSet(intSet44, (-4));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        simpleMethods37.addElementToSet(intSet67, (-1));
        simpleMethods4.addElementToSet(intSet67, (int) '4');
        simpleMethods0.addElementToSet(intSet67, (-1));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods31.addElementToSet(intSet51, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods31.addElementToSet(intSet75, 0);
        simpleMethods0.addElementToSet(intSet75, 5);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 6);
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, 2);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 3);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 2);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) ' ');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) (byte) -1);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, (-3));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods25.addElementToSet(intSet26, 0);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods25.addElementToSet(intSet29, 10);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods25.addElementToSet(intSet32, (-4));
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods35.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods35.addElementToSet(intSet74, (int) '#');
        simpleMethods25.addElementToSet(intSet74, (-1));
        simpleMethods21.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, 0);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods4.addElementToSet(intSet33, (int) (short) -1);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods37.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods37.addElementToSet(intSet41, 10);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods37.addElementToSet(intSet44, (-4));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        simpleMethods37.addElementToSet(intSet67, (-1));
        simpleMethods4.addElementToSet(intSet67, (int) '4');
        simpleMethods0.addElementToSet(intSet67, (-1));
        java.lang.Class<?> wildcardClass77 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods8.addElementToSet(intSet65, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet65, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods7.addElementToSet(intSet83, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet83, 1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (byte) -1);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods45.addElementToSet(intSet46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods49.addElementToSet(intSet87, (-10));
        simpleMethods45.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods41.addElementToSet(intSet87, (int) ' ');
        simpleMethods0.addElementToSet(intSet87, (int) '#');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods5.addElementToSet(intSet6, 0);
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods5.addElementToSet(intSet9, 10);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods5.addElementToSet(intSet12, (-4));
        examples.SimpleMethods simpleMethods15 = new examples.SimpleMethods();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods15.addElementToSet(intSet29, 9);
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods15.addElementToSet(intSet35, 0);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods15.addElementToSet(intSet53, (-10));
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods59.addElementToSet(intSet79, 0);
        simpleMethods15.addElementToSet(intSet79, (-1));
        simpleMethods5.addElementToSet(intSet79, (int) '#');
        simpleMethods4.addElementToSet(intSet79, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet79, (-10));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods22.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 100);
        simpleMethods27.addElementToSet(intSet63, (int) (byte) -1);
        simpleMethods26.addElementToSet(intSet63, 8);
        simpleMethods22.addElementToSet(intSet63, 8);
        simpleMethods18.addElementToSet(intSet63, 6);
        simpleMethods0.addElementToSet(intSet63, (int) 'a');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-9), (-2), (-1), 2, 3, 100, (-2) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 6);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods53.addElementToSet(intSet69, (int) (byte) 10);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods53.addElementToSet(intSet77, 100);
        simpleMethods0.addElementToSet(intSet77, 8);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods4.addElementToSet(intSet62, 10);
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods8.addElementToSet(intSet49, (int) (byte) -1);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods8.addElementToSet(intSet68, 1);
        simpleMethods4.addElementToSet(intSet68, 2);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-3));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 2);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 4);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods44.addElementToSet(intSet86, 0);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 4);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, 0);
        simpleMethods13.addElementToSet(intSet75, 6);
        simpleMethods0.addElementToSet(intSet75, (-100));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-5), 1, (-3) };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods0.addElementToSet(intSet92, 7);
        java.lang.Class<?> wildcardClass96 = intSet92.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-2));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods31.addElementToSet(intSet72, (int) (short) 0);
        simpleMethods13.addElementToSet(intSet72, 1);
        simpleMethods0.addElementToSet(intSet72, 10);
        java.lang.Class<?> wildcardClass80 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods31.addElementToSet(intSet72, (int) (short) 0);
        simpleMethods13.addElementToSet(intSet72, 1);
        simpleMethods0.addElementToSet(intSet72, 10);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (int) ' ');
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-5));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, 8);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods45.addElementToSet(intSet46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods49.addElementToSet(intSet87, (-10));
        simpleMethods45.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods41.addElementToSet(intSet87, (int) ' ');
        simpleMethods0.addElementToSet(intSet87, (int) '#');
        java.lang.Class<?> wildcardClass99 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods0.addElementToSet(intSet63, (-10));
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods0.addElementToSet(intSet66, 3);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 0);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods22.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 100);
        simpleMethods27.addElementToSet(intSet63, (int) (byte) -1);
        simpleMethods26.addElementToSet(intSet63, 8);
        simpleMethods22.addElementToSet(intSet63, 8);
        simpleMethods18.addElementToSet(intSet63, 6);
        simpleMethods0.addElementToSet(intSet63, (int) 'a');
        java.lang.Class<?> wildcardClass79 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, 0);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) '#');
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods33.addElementToSet(intSet37, 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods33.addElementToSet(intSet40, (-4));
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods33.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) '4');
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-5));
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods4.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 9);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, (int) ' ');
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 8);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 1, (-7), 10, 0, 2, 3, 5, 0, (-6), (-8), 7, 4, (-100), (-3), 10, (-100), 8, (-7), (-8), (-5), (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods10.addElementToSet(intSet34, (int) (short) 10);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods37.addElementToSet(intSet57, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods37.addElementToSet(intSet75, (-2));
        simpleMethods10.addElementToSet(intSet75, 3);
        simpleMethods0.addElementToSet(intSet75, (int) (byte) -1);
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-9));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods27.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods27.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet84, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-2));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 1, (-7), 10, 0, 2, 3, 5, 0, (-6), (-8), 7, 4, (-100), (-3), 10, (-100), 8, (-7), (-8), (-5), (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 0);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) ' ');
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) 'a');
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-8));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (-7));
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) (short) -1);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 1);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 4, 8, (-9), 2, (-5), 1, 100, 8, (-1), 100, 9, 1, 6, 6, (-4), (-5), 4, 7, (-1), 8, (-7) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods32.addElementToSet(intSet85, (-100));
        simpleMethods28.addElementToSet(intSet85, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet85, (-5));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        simpleMethods10.addElementToSet(intSet54, 8);
        simpleMethods0.addElementToSet(intSet54, 9);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (-6));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-1));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods20.addElementToSet(intSet27, (-4));
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods30.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 1);
        simpleMethods30.addElementToSet(intSet69, (int) '#');
        simpleMethods20.addElementToSet(intSet69, (-1));
        simpleMethods0.addElementToSet(intSet69, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 4);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods31.addElementToSet(intSet52, 0);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods55.addElementToSet(intSet73, 2);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods76.addElementToSet(intSet90, 9);
        simpleMethods55.addElementToSet(intSet90, 100);
        simpleMethods31.addElementToSet(intSet90, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet90, (int) '#');
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, (-1));
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        simpleMethods0.addElementToSet(intSet45, (-9));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods53.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods41.addElementToSet(intSet83, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 8);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-8));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-5));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) ' ');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, (-1));
        java.lang.Class<?> wildcardClass74 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 1);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 5);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods53.addElementToSet(intSet69, (int) (byte) 10);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods53.addElementToSet(intSet77, 100);
        simpleMethods0.addElementToSet(intSet77, 8);
        java.lang.Class<?> wildcardClass83 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods40.addElementToSet(intSet60, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods40.addElementToSet(intSet84, 8);
        simpleMethods22.addElementToSet(intSet84, 7);
        simpleMethods18.addElementToSet(intSet84, 100);
        simpleMethods0.addElementToSet(intSet84, 7);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 1);
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 4);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, 6);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods38.addElementToSet(intSet58, 0);
        simpleMethods14.addElementToSet(intSet58, 8);
        simpleMethods4.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (-8));
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, 0);
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods8.addElementToSet(intSet49, (int) (byte) -1);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods8.addElementToSet(intSet68, 1);
        simpleMethods4.addElementToSet(intSet68, 2);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-7));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        simpleMethods0.addElementToSet(intSet41, 8);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods21.addElementToSet(intSet45, (int) (short) 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods21.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 10);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 0);
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods1.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 1);
        simpleMethods8.addElementToSet(intSet84, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet84, 1);
        simpleMethods0.addElementToSet(intSet84, (-10));
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-7));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 100);
        simpleMethods0.addElementToSet(intSet59, (int) (short) -1);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods0.addElementToSet(intSet69, (int) (byte) 100);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 4);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 3);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 2);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 1);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, 100);
        simpleMethods0.addElementToSet(intSet79, 1);
        java.lang.Class<?> wildcardClass87 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods0.addElementToSet(intSet63, (-10));
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods0.addElementToSet(intSet66, (int) (short) 1);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-10), (-3), 0, (-6), 3 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods0.addElementToSet(intSet76, (-8));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 4);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        java.lang.Class<?> wildcardClass13 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (int) 'a');
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 0);
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 0);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods33.addElementToSet(intSet37, 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods33.addElementToSet(intSet40, (-4));
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods33.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) '4');
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-5));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, 100);
        simpleMethods0.addElementToSet(intSet79, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) '#');
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-7));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, 0);
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (int) (short) -1);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods0.addElementToSet(intSet69, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods0.addElementToSet(intSet72, 3);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods24.addElementToSet(intSet48, (int) (short) 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods24.addElementToSet(intSet89, 1);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods4.addElementToSet(intSet20, (int) (byte) 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods24.addElementToSet(intSet28, 10);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods24.addElementToSet(intSet31, (-4));
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 2);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods38.addElementToSet(intSet56, 2);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods59.addElementToSet(intSet73, 9);
        simpleMethods38.addElementToSet(intSet73, 1);
        simpleMethods34.addElementToSet(intSet73, (int) '#');
        simpleMethods24.addElementToSet(intSet73, (-1));
        simpleMethods4.addElementToSet(intSet73, (int) '4');
        simpleMethods0.addElementToSet(intSet73, (-9));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-2));
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods52.addElementToSet(intSet72, 0);
        simpleMethods8.addElementToSet(intSet72, 9);
        simpleMethods4.addElementToSet(intSet72, 10);
        simpleMethods0.addElementToSet(intSet72, (int) ' ');
        java.lang.Class<?> wildcardClass82 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (-1));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 9);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-1));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods11.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods11.addElementToSet(intSet46, 1);
        simpleMethods7.addElementToSet(intSet46, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods7.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) '4');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 9);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-2));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { 8, (-2), 1, 3, (-1), (-8), (-6), 4, (-1), 10, 100, 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods0.addElementToSet(intSet75, (-5));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, (int) (short) 100);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods13.addElementToSet(intSet37, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods13.addElementToSet(intSet40, (int) '4');
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods13.addElementToSet(intSet63, 1);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-2));
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, (-100));
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods27.addElementToSet(intSet91, 9);
        simpleMethods20.addElementToSet(intSet91, (-100));
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods33.addElementToSet(intSet37, 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods33.addElementToSet(intSet40, (-4));
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods33.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) '4');
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-5));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-2));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 7);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-10));
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods21.addElementToSet(intSet85, (-1));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-6));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet33 = null;
        simpleMethods0.addElementToSet(intSet33, 0);
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) (byte) -1);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) '4');
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods27.addElementToSet(intSet86, 1);
        simpleMethods6.addElementToSet(intSet86, 0);
        simpleMethods5.addElementToSet(intSet86, (int) (short) 1);
        simpleMethods4.addElementToSet(intSet86, 0);
        simpleMethods0.addElementToSet(intSet86, (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods0.addElementToSet(intSet57, (-2));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods60.addElementToSet(intSet61, 2);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods60.addElementToSet(intSet89, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet89, 3);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods47.addElementToSet(intSet86, (int) '#');
        simpleMethods0.addElementToSet(intSet86, (-2));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods11.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods11.addElementToSet(intSet46, 1);
        simpleMethods7.addElementToSet(intSet46, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods7.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 9);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, (-100));
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods27.addElementToSet(intSet91, 9);
        simpleMethods20.addElementToSet(intSet91, (-100));
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 1);
        simpleMethods13.addElementToSet(intSet72, (-1));
        simpleMethods12.addElementToSet(intSet72, (-5));
        simpleMethods11.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 5);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods47.addElementToSet(intSet86, (int) '#');
        simpleMethods0.addElementToSet(intSet86, (-2));
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 5);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, 100);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods21.addElementToSet(intSet82, (int) ' ');
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) '#');
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet60, (int) (byte) 100);
        java.lang.Class<?> wildcardClass66 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 4, 8, (-9), 2, (-5), 1, 100, 8, (-1), 100, 9, 1, 6, 6, (-4), (-5), 4, 7, (-1), 8, (-7) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-100));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet14 = null;
        simpleMethods13.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods17.addElementToSet(intSet31, 9);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods17.addElementToSet(intSet37, 0);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods17.addElementToSet(intSet55, (-10));
        simpleMethods13.addElementToSet(intSet55, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods13.addElementToSet(intSet63, (int) '#');
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods66.addElementToSet(intSet82, (int) (byte) 10);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods66.addElementToSet(intSet90, 100);
        simpleMethods13.addElementToSet(intSet90, 3);
        simpleMethods0.addElementToSet(intSet90, 1);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods0.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 100);
        simpleMethods0.addElementToSet(intSet59, (int) (short) -1);
        java.lang.Class<?> wildcardClass67 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 7);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 9);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 100);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 7);
        java.util.HashSet<java.lang.Integer> intSet10 = null;
        simpleMethods0.addElementToSet(intSet10, 1);
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods13.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods13.addElementToSet(intSet48, (-100));
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods13.addElementToSet(intSet54, (int) (byte) 1);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods57.addElementToSet(intSet58, 2);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods57.addElementToSet(intSet86, (int) (short) -1);
        simpleMethods13.addElementToSet(intSet86, 100);
        simpleMethods0.addElementToSet(intSet86, (-6));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-7));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-9));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods27.addElementToSet(intSet45, 2);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods27.addElementToSet(intSet62, 100);
        simpleMethods26.addElementToSet(intSet62, (int) (byte) -1);
        simpleMethods25.addElementToSet(intSet62, 8);
        simpleMethods21.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods27.addElementToSet(intSet43, (int) (byte) 10);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods27.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (-6));
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-6));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-3));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 2);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-7));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 3);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        simpleMethods0.addElementToSet(intSet42, (-5));
        java.lang.Class<?> wildcardClass50 = intSet42.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 7);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, 0);
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods28.addElementToSet(intSet66, (-10));
        simpleMethods4.addElementToSet(intSet66, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet66, 0);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods0.addElementToSet(intSet48, (-1));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods52.addElementToSet(intSet70, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods52.addElementToSet(intSet87, 100);
        simpleMethods51.addElementToSet(intSet87, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods41.addElementToSet(intSet83, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, (int) (short) 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, (int) (byte) 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-2));
        simpleMethods4.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 0);
        java.lang.Class<?> wildcardClass73 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods4.addElementToSet(intSet67, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet67, (int) (short) 10);
        java.lang.Class<?> wildcardClass79 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 6);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-5));
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }
}

