package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods8.addElementToSet(intSet9, 0);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods8.addElementToSet(intSet12, 10);
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods8.addElementToSet(intSet15, (-4));
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-10));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (-1));
        simpleMethods8.addElementToSet(intSet82, (int) '#');
        simpleMethods7.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 8);
        java.lang.Class<?> wildcardClass94 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, (-10));
        simpleMethods44.addElementToSet(intSet86, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet86, (int) 'a');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 9);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods8.addElementToSet(intSet49, (int) (byte) -1);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods8.addElementToSet(intSet68, 1);
        simpleMethods4.addElementToSet(intSet68, 2);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-6));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods50.addElementToSet(intSet66, (int) (byte) 10);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods50.addElementToSet(intSet74, 100);
        simpleMethods0.addElementToSet(intSet74, 100);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods29.addElementToSet(intSet49, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods29.addElementToSet(intSet73, 8);
        simpleMethods11.addElementToSet(intSet73, 7);
        simpleMethods7.addElementToSet(intSet73, 100);
        simpleMethods0.addElementToSet(intSet73, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (-7));
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.lang.Class<?> wildcardClass7 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods21.addElementToSet(intSet60, (int) '#');
        simpleMethods0.addElementToSet(intSet60, 1);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, (-100));
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods8.addElementToSet(intSet49, (int) (byte) -1);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods8.addElementToSet(intSet68, 1);
        simpleMethods4.addElementToSet(intSet68, 2);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        java.lang.Class<?> wildcardClass48 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods4.addElementToSet(intSet89, 4);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods27.addElementToSet(intSet69, 7);
        simpleMethods0.addElementToSet(intSet69, 0);
        java.lang.Class<?> wildcardClass77 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (int) (byte) -1);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 1);
        simpleMethods2.addElementToSet(intSet82, 0);
        simpleMethods1.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 0);
        java.lang.Class<?> wildcardClass94 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, 4);
        java.lang.Class<?> wildcardClass89 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods45.addElementToSet(intSet46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods49.addElementToSet(intSet87, (-10));
        simpleMethods45.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.lang.Class<?> wildcardClass94 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, 1);
        simpleMethods0.addElementToSet(intSet55, 1);
        java.lang.Class<?> wildcardClass63 = intSet55.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) 'a');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods0.addElementToSet(intSet63, 1);
        java.lang.Class<?> wildcardClass67 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.lang.Class<?> wildcardClass90 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, 4);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 1);
        simpleMethods4.addElementToSet(intSet87, (int) 'a');
        simpleMethods0.addElementToSet(intSet87, 2);
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-1));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods69.addElementToSet(intSet89, 0);
        simpleMethods45.addElementToSet(intSet89, 8);
        simpleMethods4.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-2));
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.lang.Class<?> wildcardClass80 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods70.addElementToSet(intSet86, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-5));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 10);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods4.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-10));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        java.lang.Class<?> wildcardClass48 = intSet42.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods44.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, 100);
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, 10);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods12.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods36.addElementToSet(intSet50, 9);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods36.addElementToSet(intSet54, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods57.addElementToSet(intSet71, 9);
        simpleMethods36.addElementToSet(intSet71, 1);
        simpleMethods12.addElementToSet(intSet71, (-1));
        simpleMethods11.addElementToSet(intSet71, (-5));
        simpleMethods4.addElementToSet(intSet71, 100);
        simpleMethods0.addElementToSet(intSet71, 8);
        java.lang.Class<?> wildcardClass85 = intSet71.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods49.addElementToSet(intSet90, (int) (short) 0);
        simpleMethods25.addElementToSet(intSet90, (-3));
        simpleMethods21.addElementToSet(intSet90, (-5));
        simpleMethods0.addElementToSet(intSet90, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 1);
        simpleMethods10.addElementToSet(intSet69, (-1));
        simpleMethods9.addElementToSet(intSet69, (-5));
        simpleMethods8.addElementToSet(intSet69, (-2));
        simpleMethods4.addElementToSet(intSet69, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet69, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods70.addElementToSet(intSet86, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass92 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods27.addElementToSet(intSet69, 7);
        simpleMethods0.addElementToSet(intSet69, 0);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-3));
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-10));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) '#');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        java.lang.Class<?> wildcardClass73 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        simpleMethods4.addElementToSet(intSet48, 0);
        simpleMethods0.addElementToSet(intSet48, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.lang.Class<?> wildcardClass33 = intSet29.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 4);
        java.lang.Class<?> wildcardClass81 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, (-10));
        simpleMethods44.addElementToSet(intSet86, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet86, (int) 'a');
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        java.lang.Class<?> wildcardClass56 = intSet50.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods7.addElementToSet(intSet31, (int) (short) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods34.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, 3);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 8);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods7.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, (-8));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-9));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) 'a');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-3));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-6));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, (int) ' ');
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, (-100));
        simpleMethods25.addElementToSet(intSet81, (-1));
        simpleMethods21.addElementToSet(intSet81, (-9));
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, (-100));
        simpleMethods0.addElementToSet(intSet55, (-8));
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods7.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, 8);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-5));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet69, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods10.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 5);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-4));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-5));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, (int) '4');
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 10);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, (-100));
        simpleMethods25.addElementToSet(intSet81, (-1));
        simpleMethods21.addElementToSet(intSet81, (-9));
        simpleMethods0.addElementToSet(intSet81, (-1));
        java.lang.Class<?> wildcardClass93 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods21.addElementToSet(intSet60, (int) '#');
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-2));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods45.addElementToSet(intSet46, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods49.addElementToSet(intSet87, (-10));
        simpleMethods45.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        java.lang.Class<?> wildcardClass33 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods4.addElementToSet(intSet89, 4);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 7);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods21.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, (-9));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods20.addElementToSet(intSet40, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods20.addElementToSet(intSet58, (-2));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods20.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, 2);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, 4);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, 0);
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, 1);
        simpleMethods0.addElementToSet(intSet55, 1);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (-8));
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet71, (int) '#');
        java.lang.Class<?> wildcardClass79 = intSet71.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, (int) (byte) 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods28.addElementToSet(intSet66, (-2));
        simpleMethods7.addElementToSet(intSet66, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet66, 0);
        java.lang.Class<?> wildcardClass76 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-5));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) ' ');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods21.addElementToSet(intSet37, (int) (byte) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods21.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 10);
        java.lang.Class<?> wildcardClass86 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods4.addElementToSet(intSet83, (-4));
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) 10);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        java.lang.Class<?> wildcardClass21 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, 4);
        java.lang.Class<?> wildcardClass64 = intSet58.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 8);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 100);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, (int) '4');
        java.lang.Class<?> wildcardClass74 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 2);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods21.addElementToSet(intSet37, (int) (byte) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods21.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 10);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, 10);
        java.lang.Class<?> wildcardClass64 = intSet58.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods20.addElementToSet(intSet40, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods20.addElementToSet(intSet58, (-2));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods20.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, 2);
        java.lang.Class<?> wildcardClass92 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-5));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 5);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 4);
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, 100);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 5);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        java.lang.Class<?> wildcardClass21 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 8);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods49.addElementToSet(intSet90, (int) (short) 0);
        simpleMethods25.addElementToSet(intSet90, (-3));
        simpleMethods7.addElementToSet(intSet90, (-2));
        simpleMethods0.addElementToSet(intSet90, 100);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, 100);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-3));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods4.addElementToSet(intSet28, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet73, 7);
        simpleMethods4.addElementToSet(intSet73, 0);
        simpleMethods0.addElementToSet(intSet73, (-6));
        java.lang.Class<?> wildcardClass83 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods46.addElementToSet(intSet84, (-10));
        simpleMethods22.addElementToSet(intSet84, (int) (byte) 100);
        simpleMethods21.addElementToSet(intSet84, 100);
        simpleMethods0.addElementToSet(intSet84, 3);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, 10);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 2);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 5);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, 9);
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-4));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) ' ');
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, (-100));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 100);
        simpleMethods49.addElementToSet(intSet85, (int) (byte) -1);
        simpleMethods48.addElementToSet(intSet85, 8);
        simpleMethods44.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 9);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 0, 100, (-3), (-6), 8, 0, (-8), (-1), 7, 3, 8, (-100), 2, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods0.addElementToSet(intSet69, 1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods46.addElementToSet(intSet84, (-10));
        simpleMethods22.addElementToSet(intSet84, (int) (byte) 100);
        simpleMethods21.addElementToSet(intSet84, 100);
        simpleMethods0.addElementToSet(intSet84, 3);
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-6));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods5.addElementToSet(intSet6, 10);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods9.addElementToSet(intSet23, 9);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods9.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods9.addElementToSet(intSet47, (-2));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods9.addElementToSet(intSet73, (int) (short) -1);
        simpleMethods5.addElementToSet(intSet73, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet73, 9);
        simpleMethods0.addElementToSet(intSet73, 4);
        java.lang.Class<?> wildcardClass85 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods21.addElementToSet(intSet74, 5);
        simpleMethods0.addElementToSet(intSet74, 1);
        java.lang.Class<?> wildcardClass84 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, (-5));
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, 2);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods50.addElementToSet(intSet66, (int) (byte) 10);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods50.addElementToSet(intSet74, 100);
        simpleMethods0.addElementToSet(intSet74, 100);
        java.lang.Class<?> wildcardClass80 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods67.addElementToSet(intSet91, 100);
        simpleMethods0.addElementToSet(intSet91, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) 10);
        java.lang.Class<?> wildcardClass74 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods4.addElementToSet(intSet87, 4);
        simpleMethods0.addElementToSet(intSet87, (-5));
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, 9);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) (byte) -1);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-2));
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods4.addElementToSet(intSet20, (int) (byte) 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 100);
        simpleMethods33.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods32.addElementToSet(intSet69, 8);
        simpleMethods28.addElementToSet(intSet69, 8);
        simpleMethods24.addElementToSet(intSet69, (-100));
        simpleMethods4.addElementToSet(intSet69, (-2));
        simpleMethods0.addElementToSet(intSet69, 0);
        java.lang.Class<?> wildcardClass87 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-8));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods1.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-5));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-9));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (int) (short) 100);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 8);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods51.addElementToSet(intSet92, (int) (short) 0);
        simpleMethods44.addElementToSet(intSet92, 5);
        simpleMethods0.addElementToSet(intSet92, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 5);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-6));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) 'a');
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-9));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods4.addElementToSet(intSet85, 4);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Class<?> wildcardClass76 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods48.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods52.addElementToSet(intSet70, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods52.addElementToSet(intSet87, 1);
        simpleMethods48.addElementToSet(intSet87, (int) '#');
        simpleMethods0.addElementToSet(intSet87, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods23.addElementToSet(intSet41, 2);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods23.addElementToSet(intSet58, 100);
        simpleMethods22.addElementToSet(intSet58, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet58, (int) (byte) 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods4.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) 'a');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods7.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, 8);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-2));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-10));
        simpleMethods27.addElementToSet(intSet89, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, 100);
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) (byte) 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-2));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods7.addElementToSet(intSet67, (-5));
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.lang.Class<?> wildcardClass79 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet71, (int) '#');
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods7.addElementToSet(intSet67, (-5));
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods61.addElementToSet(intSet62, 0);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods61.addElementToSet(intSet65, 10);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods61.addElementToSet(intSet68, (-4));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods61.addElementToSet(intSet91, (-1));
        simpleMethods0.addElementToSet(intSet91, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-10));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods40.addElementToSet(intSet60, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods40.addElementToSet(intSet84, 8);
        simpleMethods22.addElementToSet(intSet84, 7);
        simpleMethods18.addElementToSet(intSet84, 100);
        simpleMethods0.addElementToSet(intSet84, 7);
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, (-10));
        simpleMethods44.addElementToSet(intSet86, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet86, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-7));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 1);
        simpleMethods4.addElementToSet(intSet87, (int) 'a');
        simpleMethods0.addElementToSet(intSet87, 2);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods7.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, (-8));
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 0);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods53.addElementToSet(intSet71, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods53.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods0.addElementToSet(intSet78, (-8));
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (-1));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        simpleMethods0.addElementToSet(intSet30, (-1));
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods36.addElementToSet(intSet52, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet52, (int) (byte) -1);
        java.lang.Class<?> wildcardClass58 = intSet52.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.lang.Class<?> wildcardClass79 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        simpleMethods0.addElementToSet(intSet30, (-1));
        java.lang.Class<?> wildcardClass36 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods5.addElementToSet(intSet46, (int) (byte) -1);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods5.addElementToSet(intSet65, 1);
        simpleMethods1.addElementToSet(intSet65, 2);
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        simpleMethods0.addElementToSet(intSet30, (-1));
        java.lang.Class<?> wildcardClass36 = intSet30.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods4.addElementToSet(intSet28, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet73, 7);
        simpleMethods4.addElementToSet(intSet73, 0);
        simpleMethods0.addElementToSet(intSet73, (-6));
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods48.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods52.addElementToSet(intSet70, 2);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods52.addElementToSet(intSet87, 1);
        simpleMethods48.addElementToSet(intSet87, (int) '#');
        simpleMethods0.addElementToSet(intSet87, 1);
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-2));
        simpleMethods4.addElementToSet(intSet89, (-10));
        simpleMethods0.addElementToSet(intSet89, (-10));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods61.addElementToSet(intSet62, 0);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods61.addElementToSet(intSet65, 10);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods61.addElementToSet(intSet68, (-4));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods61.addElementToSet(intSet91, (-1));
        simpleMethods0.addElementToSet(intSet91, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-100));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 2);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods4.addElementToSet(intSet87, 4);
        simpleMethods0.addElementToSet(intSet87, (-5));
        java.lang.Class<?> wildcardClass95 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 100);
        simpleMethods49.addElementToSet(intSet85, (int) (byte) -1);
        simpleMethods48.addElementToSet(intSet85, 8);
        simpleMethods44.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 9);
        java.lang.Class<?> wildcardClass99 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        java.lang.Class<?> wildcardClass31 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, (int) (byte) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods20.addElementToSet(intSet79, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet79, 100);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (-3));
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods4.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) (short) -1);
        java.lang.Class<?> wildcardClass73 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-2));
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 0, 100, (-3), (-6), 8, 0, (-8), (-1), 7, 3, 8, (-100), 2, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods0.addElementToSet(intSet69, 1);
        java.lang.Class<?> wildcardClass73 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-5));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods4.addElementToSet(intSet83, (-4));
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods23.addElementToSet(intSet41, 2);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods23.addElementToSet(intSet58, 100);
        simpleMethods22.addElementToSet(intSet58, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet58, (int) (byte) 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods4.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (int) 'a');
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass93 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-9));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 10);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods4.addElementToSet(intSet89, 4);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 5);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 100);
        simpleMethods29.addElementToSet(intSet65, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet65, 8);
        simpleMethods24.addElementToSet(intSet65, 8);
        simpleMethods20.addElementToSet(intSet65, (-100));
        simpleMethods0.addElementToSet(intSet65, (-2));
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods67.addElementToSet(intSet91, 100);
        simpleMethods0.addElementToSet(intSet91, 1);
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods0.addElementToSet(intSet59, (-3));
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods28.addElementToSet(intSet46, 2);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods28.addElementToSet(intSet63, 1);
        simpleMethods4.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) (short) -1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods20.addElementToSet(intSet27, (-4));
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods30.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 1);
        simpleMethods30.addElementToSet(intSet69, (int) '#');
        simpleMethods20.addElementToSet(intSet69, (-1));
        simpleMethods0.addElementToSet(intSet69, (int) '4');
        java.lang.Class<?> wildcardClass81 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods20.addElementToSet(intSet24, 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods20.addElementToSet(intSet27, (-4));
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods30.addElementToSet(intSet31, 2);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 1);
        simpleMethods30.addElementToSet(intSet69, (int) '#');
        simpleMethods20.addElementToSet(intSet69, (-1));
        simpleMethods0.addElementToSet(intSet69, (int) '4');
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 100);
        simpleMethods36.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods35.addElementToSet(intSet72, 8);
        simpleMethods31.addElementToSet(intSet72, 8);
        simpleMethods27.addElementToSet(intSet72, (-100));
        simpleMethods0.addElementToSet(intSet72, 100);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 4, (-7), 5, (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.lang.Class<?> wildcardClass97 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-2));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass93 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-3));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 10);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, 6);
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 1);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) '4');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods46.addElementToSet(intSet84, (-10));
        simpleMethods22.addElementToSet(intSet84, (int) (byte) 100);
        simpleMethods4.addElementToSet(intSet84, 10);
        simpleMethods0.addElementToSet(intSet84, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, (-10));
        simpleMethods44.addElementToSet(intSet86, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet86, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 6);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, 1);
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods56.addElementToSet(intSet74, 2);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods56.addElementToSet(intSet91, 100);
        simpleMethods0.addElementToSet(intSet91, (-10));
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 100);
        simpleMethods36.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods35.addElementToSet(intSet72, 8);
        simpleMethods31.addElementToSet(intSet72, 8);
        simpleMethods27.addElementToSet(intSet72, (-100));
        simpleMethods0.addElementToSet(intSet72, 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-1));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-7));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods40.addElementToSet(intSet60, 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods40.addElementToSet(intSet84, 8);
        simpleMethods22.addElementToSet(intSet84, 7);
        simpleMethods18.addElementToSet(intSet84, 100);
        simpleMethods0.addElementToSet(intSet84, 7);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet3 = null;
        simpleMethods2.addElementToSet(intSet3, 0);
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods2.addElementToSet(intSet6, 10);
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods2.addElementToSet(intSet9, (-4));
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods12.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods36.addElementToSet(intSet50, 9);
        simpleMethods12.addElementToSet(intSet50, (-10));
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods56.addElementToSet(intSet76, 0);
        simpleMethods12.addElementToSet(intSet76, (-1));
        simpleMethods2.addElementToSet(intSet76, (int) '#');
        simpleMethods1.addElementToSet(intSet76, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet76, (-5));
        java.lang.Class<?> wildcardClass88 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, (int) (byte) 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods20.addElementToSet(intSet79, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet79, 100);
        java.lang.Class<?> wildcardClass89 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-8));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-6));
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-9));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-2));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods10.addElementToSet(intSet68, 10);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) 10);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.lang.Class<?> wildcardClass75 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 4);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) '#');
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        java.lang.Class<?> wildcardClass50 = intSet42.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods39.addElementToSet(intSet57, 2);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        simpleMethods39.addElementToSet(intSet74, 1);
        simpleMethods21.addElementToSet(intSet74, 5);
        simpleMethods0.addElementToSet(intSet74, 1);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 100);
        simpleMethods29.addElementToSet(intSet65, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet65, 8);
        simpleMethods24.addElementToSet(intSet65, 8);
        simpleMethods20.addElementToSet(intSet65, (-100));
        simpleMethods0.addElementToSet(intSet65, (-2));
        java.lang.Class<?> wildcardClass81 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 2);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 100);
        simpleMethods49.addElementToSet(intSet85, (int) (byte) -1);
        simpleMethods5.addElementToSet(intSet85, (int) ' ');
        simpleMethods1.addElementToSet(intSet85, (int) ' ');
        simpleMethods0.addElementToSet(intSet85, 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods46.addElementToSet(intSet84, (-10));
        simpleMethods22.addElementToSet(intSet84, (int) (byte) 100);
        simpleMethods4.addElementToSet(intSet84, 10);
        simpleMethods0.addElementToSet(intSet84, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods14.addElementToSet(intSet49, 1);
        simpleMethods10.addElementToSet(intSet49, (int) '#');
        simpleMethods0.addElementToSet(intSet49, (-1));
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods5.addElementToSet(intSet6, 10);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods9.addElementToSet(intSet23, 9);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods9.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        simpleMethods9.addElementToSet(intSet47, (-2));
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods9.addElementToSet(intSet73, (int) (short) -1);
        simpleMethods5.addElementToSet(intSet73, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet73, 9);
        simpleMethods0.addElementToSet(intSet73, 4);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) (byte) -1);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods50.addElementToSet(intSet54, 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods50.addElementToSet(intSet57, (-4));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods50.addElementToSet(intSet80, (-1));
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.lang.Class<?> wildcardClass88 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 100);
        simpleMethods39.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet75, (-8));
        simpleMethods0.addElementToSet(intSet75, (-4));
        java.lang.Class<?> wildcardClass87 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods0.addElementToSet(intSet78, (-4));
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.lang.Class<?> wildcardClass90 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 100);
        simpleMethods25.addElementToSet(intSet61, (int) (byte) -1);
        simpleMethods7.addElementToSet(intSet61, (-8));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods7.addElementToSet(intSet85, (-8));
        simpleMethods0.addElementToSet(intSet85, (-6));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (-3));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        java.lang.Class<?> wildcardClass10 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        java.lang.Class<?> wildcardClass48 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 1);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) '4');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods24.addElementToSet(intSet78, (-8));
        simpleMethods0.addElementToSet(intSet78, 6);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 7);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods44.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods51.addElementToSet(intSet92, (int) (short) 0);
        simpleMethods44.addElementToSet(intSet92, 5);
        simpleMethods0.addElementToSet(intSet92, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods8.addElementToSet(intSet72, (-1));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods8.addElementToSet(intSet89, 9);
        simpleMethods4.addElementToSet(intSet89, (-3));
        simpleMethods0.addElementToSet(intSet89, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 1);
        simpleMethods10.addElementToSet(intSet69, (-1));
        simpleMethods9.addElementToSet(intSet69, (-5));
        simpleMethods8.addElementToSet(intSet69, (-2));
        simpleMethods4.addElementToSet(intSet69, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet69, (int) ' ');
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 100);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, (-10));
        simpleMethods0.addElementToSet(intSet88, 9);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 9);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 0);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 9);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods1.addElementToSet(intSet42, 5);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods1.addElementToSet(intSet83, 1);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 0);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods48.addElementToSet(intSet49, 10);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods52.addElementToSet(intSet72, 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods76.addElementToSet(intSet90, 9);
        simpleMethods52.addElementToSet(intSet90, 0);
        simpleMethods48.addElementToSet(intSet90, (-4));
        simpleMethods0.addElementToSet(intSet90, (-5));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-10));
        simpleMethods0.addElementToSet(intSet82, 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, (int) (byte) -1);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods4.addElementToSet(intSet64, 1);
        simpleMethods0.addElementToSet(intSet64, 2);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 6);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods5.addElementToSet(intSet46, (int) (byte) -1);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods5.addElementToSet(intSet65, 1);
        simpleMethods1.addElementToSet(intSet65, 2);
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-3));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-4));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 2);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods14.addElementToSet(intSet49, 1);
        simpleMethods10.addElementToSet(intSet49, (int) '#');
        simpleMethods0.addElementToSet(intSet49, (-1));
        java.lang.Class<?> wildcardClass59 = intSet49.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-10));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        simpleMethods0.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, (-10));
        simpleMethods0.addElementToSet(intSet88, 9);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods50.addElementToSet(intSet91, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-2));
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 100);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods10.addElementToSet(intSet26, (int) (byte) 10);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods10.addElementToSet(intSet65, 1);
        simpleMethods0.addElementToSet(intSet65, (-9));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 100, 9, 7, (-5), 100, 0, (-5), (-7), 2 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods0.addElementToSet(intSet85, 8);
        java.lang.Class<?> wildcardClass89 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods0.addElementToSet(intSet59, (-3));
        java.lang.Class<?> wildcardClass65 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, 1);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-2));
        simpleMethods4.addElementToSet(intSet89, (-10));
        simpleMethods0.addElementToSet(intSet89, (-10));
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods25.addElementToSet(intSet89, 9);
        simpleMethods21.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, (-4));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 3);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods0.addElementToSet(intSet57, (int) ' ');
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods8.addElementToSet(intSet73, (-3));
        simpleMethods4.addElementToSet(intSet73, 0);
        simpleMethods0.addElementToSet(intSet73, (-2));
        java.util.HashSet<java.lang.Integer> intSet83 = null;
        simpleMethods0.addElementToSet(intSet83, (int) '#');
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) 'a');
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, 0);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 9);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods2.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 1);
        simpleMethods2.addElementToSet(intSet61, (-1));
        simpleMethods1.addElementToSet(intSet61, (-5));
        simpleMethods0.addElementToSet(intSet61, (-2));
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 10);
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods56.addElementToSet(intSet74, 2);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods77.addElementToSet(intSet91, 9);
        simpleMethods56.addElementToSet(intSet91, 100);
        simpleMethods0.addElementToSet(intSet91, (-10));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods33.addElementToSet(intSet37, 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods33.addElementToSet(intSet40, (-4));
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods33.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) '4');
        java.lang.Class<?> wildcardClass71 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-2));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods10.addElementToSet(intSet68, 10);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) 10);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-7));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.lang.Class<?> wildcardClass91 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 100);
        simpleMethods25.addElementToSet(intSet61, (int) (byte) -1);
        simpleMethods7.addElementToSet(intSet61, (-8));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods7.addElementToSet(intSet85, (-8));
        simpleMethods0.addElementToSet(intSet85, (-6));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, 100);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods20.addElementToSet(intSet61, 5);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods20.addElementToSet(intSet78, 4);
        simpleMethods0.addElementToSet(intSet78, (int) (byte) 10);
        java.lang.Class<?> wildcardClass86 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-2));
        simpleMethods0.addElementToSet(intSet59, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-5));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 2);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, 100);
        simpleMethods49.addElementToSet(intSet85, (int) (byte) -1);
        simpleMethods5.addElementToSet(intSet85, (int) ' ');
        simpleMethods1.addElementToSet(intSet85, (int) ' ');
        simpleMethods0.addElementToSet(intSet85, 1);
        java.lang.Class<?> wildcardClass99 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods30.addElementToSet(intSet84, (-8));
        simpleMethods0.addElementToSet(intSet84, (-2));
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 4, 8, (-9), 2, (-5), 1, 100, 8, (-1), 100, 9, 1, 6, 6, (-4), (-5), 4, 7, (-1), 8, (-7) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 5);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods51.addElementToSet(intSet92, (int) (short) 0);
        simpleMethods7.addElementToSet(intSet92, (-3));
        simpleMethods0.addElementToSet(intSet92, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (int) (short) 100);
        examples.SimpleMethods simpleMethods79 = new examples.SimpleMethods();
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods79.addElementToSet(intSet93, 9);
        simpleMethods0.addElementToSet(intSet93, 8);
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods50.addElementToSet(intSet66, (int) (byte) 10);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods50.addElementToSet(intSet74, 100);
        simpleMethods0.addElementToSet(intSet74, 0);
        java.lang.Class<?> wildcardClass80 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, 6);
        java.lang.Class<?> wildcardClass59 = intSet45.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (-1));
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods25.addElementToSet(intSet89, 9);
        simpleMethods21.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods4.addElementToSet(intSet20, (int) (byte) 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.util.HashSet<java.lang.Integer> intSet52 = null;
        simpleMethods34.addElementToSet(intSet52, 2);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        simpleMethods34.addElementToSet(intSet69, 100);
        simpleMethods33.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods32.addElementToSet(intSet69, 8);
        simpleMethods28.addElementToSet(intSet69, 8);
        simpleMethods24.addElementToSet(intSet69, (-100));
        simpleMethods4.addElementToSet(intSet69, (-2));
        simpleMethods0.addElementToSet(intSet69, 0);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 10);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-2));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods14.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods10.addElementToSet(intSet82, 3);
        simpleMethods0.addElementToSet(intSet82, (-8));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods63.addElementToSet(intSet79, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet79, (-2));
        java.lang.Class<?> wildcardClass85 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods18.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, 1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods25.addElementToSet(intSet89, 9);
        simpleMethods21.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, (-4));
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-9));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods4.addElementToSet(intSet85, 4);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 100);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 3);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods18.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, 1);
        java.lang.Class<?> wildcardClass87 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-3));
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-4));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-1));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 0);
        java.lang.Class<?> wildcardClass90 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 1, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods4.addElementToSet(intSet93, 0);
        simpleMethods0.addElementToSet(intSet93, (-10));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 9);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 10);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, 0);
        simpleMethods7.addElementToSet(intSet49, (-4));
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 0, 3, (-10), (-1), 1, (-1), 7, (-6) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods7.addElementToSet(intSet66, 6);
        simpleMethods0.addElementToSet(intSet66, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods21.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet63, 4);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 3);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet3 = null;
        simpleMethods2.addElementToSet(intSet3, 0);
        java.util.HashSet<java.lang.Integer> intSet6 = null;
        simpleMethods2.addElementToSet(intSet6, 10);
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods2.addElementToSet(intSet9, (-4));
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods12.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods36.addElementToSet(intSet50, 9);
        simpleMethods12.addElementToSet(intSet50, (-10));
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods56.addElementToSet(intSet76, 0);
        simpleMethods12.addElementToSet(intSet76, (-1));
        simpleMethods2.addElementToSet(intSet76, (int) '#');
        simpleMethods1.addElementToSet(intSet76, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet76, (-5));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods7.addElementToSet(intSet83, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet83, 1);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) ' ');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods74.addElementToSet(intSet90, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet90, (-5));
        java.lang.Class<?> wildcardClass96 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods1.addElementToSet(intSet42, 5);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods1.addElementToSet(intSet83, 1);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, 100);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods20.addElementToSet(intSet61, 5);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods20.addElementToSet(intSet78, 4);
        simpleMethods0.addElementToSet(intSet78, (int) (byte) 10);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 0);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods47.addElementToSet(intSet51, 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods47.addElementToSet(intSet54, (-4));
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods57.addElementToSet(intSet71, 9);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods57.addElementToSet(intSet77, 0);
        simpleMethods47.addElementToSet(intSet77, (-1));
        simpleMethods0.addElementToSet(intSet77, (int) (short) 10);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet29 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet29, intArray28);
        simpleMethods0.addElementToSet(intSet29, (int) (short) -1);
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet34 = null;
        simpleMethods33.addElementToSet(intSet34, 0);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods33.addElementToSet(intSet37, 10);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods33.addElementToSet(intSet40, (-4));
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods43.addElementToSet(intSet63, 0);
        simpleMethods33.addElementToSet(intSet63, (-1));
        simpleMethods0.addElementToSet(intSet63, (int) '4');
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods65.addElementToSet(intSet81, (int) (byte) 10);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods65.addElementToSet(intSet89, 100);
        simpleMethods21.addElementToSet(intSet89, (int) '4');
        simpleMethods0.addElementToSet(intSet89, (-5));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        simpleMethods0.addElementToSet(intSet30, (-1));
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods36.addElementToSet(intSet52, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet52, (int) (byte) -1);
        java.lang.Class<?> wildcardClass58 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-9));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) ' ');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-9));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods0.addElementToSet(intSet63, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, 5);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 3);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) ' ');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 10);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, (-100));
        simpleMethods22.addElementToSet(intSet78, (-1));
        simpleMethods18.addElementToSet(intSet78, (-9));
        simpleMethods0.addElementToSet(intSet78, (-3));
        java.lang.Class<?> wildcardClass90 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-3));
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-10));
        simpleMethods4.addElementToSet(intSet46, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet46, (int) ' ');
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        simpleMethods5.addElementToSet(intSet40, (-100));
        java.util.HashSet<java.lang.Integer> intSet46 = null;
        simpleMethods5.addElementToSet(intSet46, (int) (byte) -1);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods5.addElementToSet(intSet65, 1);
        simpleMethods1.addElementToSet(intSet65, 2);
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-4));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods0.addElementToSet(intSet55, (int) (short) 0);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (-8));
        java.lang.Class<?> wildcardClass63 = intSet57.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods40.addElementToSet(intSet58, 2);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods40.addElementToSet(intSet75, 100);
        simpleMethods39.addElementToSet(intSet75, (int) (byte) -1);
        simpleMethods21.addElementToSet(intSet75, (-8));
        simpleMethods0.addElementToSet(intSet75, (-4));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 7);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods65.addElementToSet(intSet81, (int) (byte) 10);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods65.addElementToSet(intSet89, 100);
        simpleMethods21.addElementToSet(intSet89, (int) '4');
        simpleMethods0.addElementToSet(intSet89, (-5));
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        simpleMethods0.addElementToSet(intSet58, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intSet58.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods18.addElementToSet(intSet71, (-100));
        simpleMethods0.addElementToSet(intSet71, (int) '4');
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods67.addElementToSet(intSet83, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet89 = null;
        simpleMethods0.addElementToSet(intSet89, 6);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods18.addElementToSet(intSet71, (-100));
        simpleMethods0.addElementToSet(intSet71, (int) '4');
        java.lang.Class<?> wildcardClass77 = intSet71.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 10);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods62.addElementToSet(intSet78, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet78, (int) 'a');
        java.lang.Class<?> wildcardClass84 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, 6);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, 0);
        simpleMethods10.addElementToSet(intSet52, (-4));
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods60.addElementToSet(intSet61, 0);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods60.addElementToSet(intSet64, 10);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods60.addElementToSet(intSet67, (-4));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods60.addElementToSet(intSet90, (-1));
        simpleMethods10.addElementToSet(intSet90, (-1));
        simpleMethods0.addElementToSet(intSet90, (-3));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 10);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 4, 8, (-9), 2, (-5), 1, 100, 8, (-1), 100, 9, 1, 6, 6, (-4), (-5), 4, 7, (-1), 8, (-7) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods0.addElementToSet(intSet89, 0);
        java.lang.Class<?> wildcardClass93 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) 10);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-100));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 10);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (-4));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        java.lang.Integer[] intArray93 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet94 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet94, intArray93);
        simpleMethods41.addElementToSet(intSet94, (-100));
        simpleMethods0.addElementToSet(intSet94, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-2), 100, 2, 1, (-7), (-1) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, 0);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3), 8, (-9), 7, 0, 100, (-1), (-8), 5, 6, 8, (-1), 0, 10, (-10) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-100));
        java.lang.Class<?> wildcardClass91 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 100);
        simpleMethods36.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods35.addElementToSet(intSet72, 8);
        simpleMethods31.addElementToSet(intSet72, 8);
        simpleMethods27.addElementToSet(intSet72, (-100));
        simpleMethods0.addElementToSet(intSet72, 100);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 4, (-7), 5, (-3) };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods0.addElementToSet(intSet93, (-3));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-6));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 6);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 9);
        java.util.HashSet<java.lang.Integer> intSet74 = null;
        simpleMethods0.addElementToSet(intSet74, 100);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-10));
        simpleMethods4.addElementToSet(intSet46, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet46, (int) ' ');
        java.lang.Class<?> wildcardClass56 = intSet46.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 10);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, 0);
        simpleMethods7.addElementToSet(intSet49, (-4));
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 0, 3, (-10), (-1), 1, (-1), 7, (-6) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods7.addElementToSet(intSet66, 6);
        simpleMethods0.addElementToSet(intSet66, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, 0);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 0);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods14.addElementToSet(intSet15, 10);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-2));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods14.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods10.addElementToSet(intSet82, 3);
        simpleMethods0.addElementToSet(intSet82, (-8));
        java.lang.Class<?> wildcardClass94 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-7));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-10));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-5));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, 0);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.lang.Class<?> wildcardClass53 = intSet45.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 0);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 1);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-8));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-3));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-2));
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 100);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods29.addElementToSet(intSet49, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods29.addElementToSet(intSet73, 8);
        simpleMethods11.addElementToSet(intSet73, 7);
        simpleMethods7.addElementToSet(intSet73, 100);
        simpleMethods0.addElementToSet(intSet73, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods13 = new examples.SimpleMethods();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods13.addElementToSet(intSet27, 9);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods13.addElementToSet(intSet33, 0);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 1);
        simpleMethods13.addElementToSet(intSet72, (-1));
        simpleMethods12.addElementToSet(intSet72, (-5));
        simpleMethods11.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.lang.Class<?> wildcardClass88 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet21 = null;
        simpleMethods20.addElementToSet(intSet21, 10);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods24.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 100);
        simpleMethods29.addElementToSet(intSet65, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet65, 8);
        simpleMethods24.addElementToSet(intSet65, 8);
        simpleMethods20.addElementToSet(intSet65, (-100));
        simpleMethods0.addElementToSet(intSet65, (-2));
        java.util.HashSet<java.lang.Integer> intSet81 = null;
        simpleMethods0.addElementToSet(intSet81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 2);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods50.addElementToSet(intSet79, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 2);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) '4');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 10);
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods27.addElementToSet(intSet69, 7);
        simpleMethods0.addElementToSet(intSet69, 0);
        java.util.HashSet<java.lang.Integer> intSet77 = null;
        simpleMethods0.addElementToSet(intSet77, (-3));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet72 = null;
        simpleMethods8.addElementToSet(intSet72, (-1));
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods8.addElementToSet(intSet89, 9);
        simpleMethods4.addElementToSet(intSet89, (-3));
        simpleMethods0.addElementToSet(intSet89, (-1));
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { 1, 10, 7 };
        java.util.HashSet<java.lang.Integer> intSet93 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet93, intArray92);
        simpleMethods4.addElementToSet(intSet93, 0);
        simpleMethods0.addElementToSet(intSet93, (-10));
        java.lang.Class<?> wildcardClass99 = intSet93.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) 'a');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods47.addElementToSet(intSet84, 8);
        simpleMethods0.addElementToSet(intSet84, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3), 8, (-9), 7, 0, 100, (-1), (-8), 5, 6, 8, (-1), 0, 10, (-10) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-100));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods0.addElementToSet(intSet55, (int) (short) 0);
        java.lang.Class<?> wildcardClass61 = intSet55.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods28.addElementToSet(intSet29, 10);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods32.addElementToSet(intSet89, (int) (byte) -1);
        simpleMethods28.addElementToSet(intSet89, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet89, (-7));
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods50.addElementToSet(intSet51, 2);
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 0, 3, (-2), 0, 100, (-10), 8, 0, (-1), (-4), 100, 4, 1, (-3), (-3), 3, 10, (-5), 0, 1, 9, (-5), (-5), 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods50.addElementToSet(intSet79, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-8));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (-1));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (short) -1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods50.addElementToSet(intSet66, (int) (byte) 10);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods50.addElementToSet(intSet74, 100);
        simpleMethods0.addElementToSet(intSet74, 0);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods33.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods33.addElementToSet(intSet68, 100);
        simpleMethods32.addElementToSet(intSet68, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-5));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 4);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, (-3));
        java.lang.Class<?> wildcardClass96 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-1));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 8);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, 100);
        simpleMethods0.addElementToSet(intSet79, (-3));
        java.lang.Class<?> wildcardClass87 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 6);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods74.addElementToSet(intSet90, (int) (byte) 10);
        simpleMethods4.addElementToSet(intSet90, 8);
        simpleMethods0.addElementToSet(intSet90, 5);
        java.lang.Class<?> wildcardClass98 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 7);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, (-9));
        java.lang.Class<?> wildcardClass96 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods0.addElementToSet(intSet78, (-4));
        java.lang.Class<?> wildcardClass84 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-6));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods0.addElementToSet(intSet59, 10);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods62.addElementToSet(intSet78, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet78, (int) 'a');
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods74.addElementToSet(intSet90, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet90, (-5));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods41.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 100);
        simpleMethods46.addElementToSet(intSet82, (int) (byte) -1);
        simpleMethods45.addElementToSet(intSet82, 8);
        simpleMethods41.addElementToSet(intSet82, 8);
        simpleMethods0.addElementToSet(intSet82, (int) '#');
        java.lang.Class<?> wildcardClass96 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 2);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-1));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, 7);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (-4));
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, 7);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods47.addElementToSet(intSet65, 2);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods47.addElementToSet(intSet82, 1);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (-9));
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (-100));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        simpleMethods0.addElementToSet(intSet50, 1);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, (-3));
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, (-100));
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods1.addElementToSet(intSet65, 9);
        simpleMethods0.addElementToSet(intSet65, 0);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods33 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods33.addElementToSet(intSet47, 9);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods33.addElementToSet(intSet51, 2);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods33.addElementToSet(intSet68, 100);
        simpleMethods32.addElementToSet(intSet68, (int) (byte) -1);
        simpleMethods31.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Class<?> wildcardClass80 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, (int) (byte) 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods28.addElementToSet(intSet66, (-2));
        simpleMethods7.addElementToSet(intSet66, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet66, 0);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 8);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 100);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, 7);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) 10);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods1.addElementToSet(intSet42, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet42, 7);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods72.addElementToSet(intSet92, 0);
        simpleMethods48.addElementToSet(intSet92, 8);
        simpleMethods0.addElementToSet(intSet92, (int) 'a');
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, 2);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods68.addElementToSet(intSet84, (int) (byte) 10);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods68.addElementToSet(intSet92, 100);
        simpleMethods18.addElementToSet(intSet92, 0);
        simpleMethods0.addElementToSet(intSet92, 7);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-3));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods47.addElementToSet(intSet48, 0);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods47.addElementToSet(intSet51, 10);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods47.addElementToSet(intSet54, (-4));
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods57.addElementToSet(intSet71, 9);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods57.addElementToSet(intSet77, 0);
        simpleMethods47.addElementToSet(intSet77, (-1));
        simpleMethods0.addElementToSet(intSet77, (int) (short) 10);
        java.lang.Class<?> wildcardClass85 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) 'a');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) '#');
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-9));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods45.addElementToSet(intSet83, (-10));
        simpleMethods21.addElementToSet(intSet83, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, 0);
        simpleMethods18.addElementToSet(intSet80, 6);
        simpleMethods0.addElementToSet(intSet80, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) '#');
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, (-100));
        simpleMethods0.addElementToSet(intSet83, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods47.addElementToSet(intSet91, 0);
        simpleMethods0.addElementToSet(intSet91, (-100));
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods0.addElementToSet(intSet28, 9);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        java.util.HashSet<java.lang.Integer> intSet49 = null;
        simpleMethods31.addElementToSet(intSet49, 2);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods31.addElementToSet(intSet66, 1);
        simpleMethods0.addElementToSet(intSet66, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods0.addElementToSet(intSet63, (-10));
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods0.addElementToSet(intSet66, 1);
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 2);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods8.addElementToSet(intSet49, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods8.addElementToSet(intSet61, (-100));
        simpleMethods4.addElementToSet(intSet61, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet61, (int) (short) 1);
        java.lang.Class<?> wildcardClass69 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods29.addElementToSet(intSet47, 2);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        simpleMethods29.addElementToSet(intSet64, (-100));
        simpleMethods8.addElementToSet(intSet64, (-1));
        simpleMethods4.addElementToSet(intSet64, (-9));
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods74.addElementToSet(intSet90, (int) (byte) 10);
        simpleMethods4.addElementToSet(intSet90, 8);
        simpleMethods0.addElementToSet(intSet90, 5);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods4.addElementToSet(intSet87, 4);
        simpleMethods0.addElementToSet(intSet87, (-5));
        java.util.HashSet<java.lang.Integer> intSet95 = null;
        simpleMethods0.addElementToSet(intSet95, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 4);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.util.HashSet<java.lang.Integer> intSet29 = null;
        simpleMethods11.addElementToSet(intSet29, 2);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods11.addElementToSet(intSet46, 1);
        simpleMethods7.addElementToSet(intSet46, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        simpleMethods7.addElementToSet(intSet68, 8);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods0.addElementToSet(intSet63, (-10));
        java.lang.Class<?> wildcardClass66 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods29.addElementToSet(intSet49, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods29.addElementToSet(intSet73, 8);
        simpleMethods11.addElementToSet(intSet73, 7);
        simpleMethods7.addElementToSet(intSet73, 100);
        simpleMethods0.addElementToSet(intSet73, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) -1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 8);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods0.addElementToSet(intSet63, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-4));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-4));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-6));
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (-1));
        simpleMethods7.addElementToSet(intSet75, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet75, 10);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods30.addElementToSet(intSet50, 0);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods30.addElementToSet(intSet54, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet57 = null;
        simpleMethods30.addElementToSet(intSet57, (int) '4');
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods60.addElementToSet(intSet74, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods60.addElementToSet(intSet80, 0);
        simpleMethods30.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 100);
        java.lang.Class<?> wildcardClass88 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }
}

