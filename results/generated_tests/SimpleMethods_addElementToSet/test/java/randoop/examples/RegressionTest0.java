package examples;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Class<?> wildcardClass1 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Class<?> wildcardClass45 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Class<?> wildcardClass45 = intSet41.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Class<?> wildcardClass18 = intSet14.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.lang.Class<?> wildcardClass24 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Class<?> wildcardClass18 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.lang.Class<?> wildcardClass24 = intSet20.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        java.lang.Class<?> wildcardClass65 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 4);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.lang.Class<?> wildcardClass44 = intSet38.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.lang.Class<?> wildcardClass50 = intSet44.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-100));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Class<?> wildcardClass41 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        java.lang.Class<?> wildcardClass21 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.lang.Class<?> wildcardClass41 = intSet35.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.lang.Class<?> wildcardClass41 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.lang.Class<?> wildcardClass41 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.lang.Class<?> wildcardClass61 = intSet53.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.lang.Class<?> wildcardClass71 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.lang.Class<?> wildcardClass65 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.lang.Class<?> wildcardClass41 = intSet35.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Class<?> wildcardClass41 = intSet35.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.lang.Class<?> wildcardClass64 = intSet56.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, 100);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.lang.Class<?> wildcardClass87 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        java.lang.Class<?> wildcardClass61 = intSet57.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 0);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.lang.Class<?> wildcardClass96 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.lang.Class<?> wildcardClass88 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.lang.Class<?> wildcardClass68 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 4);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 1);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, 0);
        simpleMethods18.addElementToSet(intSet80, 6);
        simpleMethods0.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.lang.Class<?> wildcardClass85 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, (-100));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        java.lang.Class<?> wildcardClass44 = intSet36.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (-1));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-100));
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.lang.Class<?> wildcardClass88 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 0);
        java.lang.Class<?> wildcardClass64 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods50.addElementToSet(intSet68, 2);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods50.addElementToSet(intSet85, (-100));
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, (-10));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods0.addElementToSet(intSet57, (int) (byte) -1);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 1);
        java.lang.Class<?> wildcardClass81 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.lang.Class<?> wildcardClass67 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.lang.Class<?> wildcardClass85 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods61.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 10);
        java.lang.Class<?> wildcardClass87 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, (-10));
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods24.addElementToSet(intSet83, 1);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, 0);
        simpleMethods18.addElementToSet(intSet80, 6);
        simpleMethods0.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 1);
        java.lang.Class<?> wildcardClass91 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods24.addElementToSet(intSet83, 1);
        simpleMethods0.addElementToSet(intSet83, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (-1));
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, 0);
        simpleMethods1.addElementToSet(intSet63, 6);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods1.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, 0);
        simpleMethods1.addElementToSet(intSet63, 6);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods1.addElementToSet(intSet91, 9);
        simpleMethods0.addElementToSet(intSet91, 100);
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        java.lang.Class<?> wildcardClass44 = intSet38.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, 9);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Class<?> wildcardClass64 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass88 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (-6));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, 100);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 0);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.lang.Class<?> wildcardClass64 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        java.lang.Class<?> wildcardClass4 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.lang.Class<?> wildcardClass44 = intSet38.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 3);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, 9);
        java.lang.Class<?> wildcardClass85 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, (-10));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-1));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods37.addElementToSet(intSet78, (int) (short) 0);
        simpleMethods19.addElementToSet(intSet78, 5);
        simpleMethods18.addElementToSet(intSet78, 0);
        simpleMethods0.addElementToSet(intSet78, (int) (short) -1);
        java.lang.Class<?> wildcardClass88 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (int) (byte) 100);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 10);
        java.lang.Class<?> wildcardClass77 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, 3);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.lang.Class<?> wildcardClass67 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods0.addElementToSet(intSet78, (-8));
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (-9));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-10));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.lang.Class<?> wildcardClass47 = intSet37.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods0.addElementToSet(intSet78, (-8));
        java.lang.Class<?> wildcardClass84 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-7));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods37.addElementToSet(intSet78, (int) (short) 0);
        simpleMethods19.addElementToSet(intSet78, 5);
        simpleMethods18.addElementToSet(intSet78, 0);
        simpleMethods0.addElementToSet(intSet78, (int) (short) -1);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (int) ' ');
        java.lang.Class<?> wildcardClass90 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-8));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods49.addElementToSet(intSet90, (int) (short) 0);
        simpleMethods25.addElementToSet(intSet90, (-3));
        simpleMethods21.addElementToSet(intSet90, 10);
        simpleMethods0.addElementToSet(intSet90, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, (-100));
        simpleMethods0.addElementToSet(intSet76, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.util.HashSet<java.lang.Integer> intSet63 = null;
        simpleMethods45.addElementToSet(intSet63, 2);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods45.addElementToSet(intSet80, 100);
        simpleMethods44.addElementToSet(intSet80, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet80, (int) ' ');
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        java.lang.Class<?> wildcardClass4 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.lang.Class<?> wildcardClass91 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 5);
        simpleMethods0.addElementToSet(intSet60, 0);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods4.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 9);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 10);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 8);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.lang.Class<?> wildcardClass27 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.lang.Class<?> wildcardClass47 = intSet39.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.lang.Class<?> wildcardClass70 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods4.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 9);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 100);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, 9);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-3));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods0.addElementToSet(intSet77, 100);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.lang.Class<?> wildcardClass4 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 5);
        simpleMethods0.addElementToSet(intSet60, 0);
        java.lang.Class<?> wildcardClass68 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods50.addElementToSet(intSet91, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.lang.Class<?> wildcardClass97 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.lang.Class<?> wildcardClass85 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.util.HashSet<java.lang.Integer> intSet42 = null;
        simpleMethods24.addElementToSet(intSet42, 2);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods24.addElementToSet(intSet59, 1);
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, 2);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.lang.Class<?> wildcardClass90 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods27.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray91 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet92 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet92, intArray91);
        simpleMethods51.addElementToSet(intSet92, (int) (short) 0);
        simpleMethods27.addElementToSet(intSet92, (-3));
        simpleMethods0.addElementToSet(intSet92, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 0);
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods23.addElementToSet(intSet64, (int) (short) 0);
        simpleMethods5.addElementToSet(intSet64, 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods5.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods4.addElementToSet(intSet84, (-1));
        simpleMethods0.addElementToSet(intSet84, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass97 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.lang.Class<?> wildcardClass74 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet84, (int) ' ');
        simpleMethods0.addElementToSet(intSet84, (int) ' ');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.util.HashSet<java.lang.Integer> intSet23 = null;
        simpleMethods5.addElementToSet(intSet23, 2);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods26.addElementToSet(intSet85, 1);
        simpleMethods5.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods1.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-5));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (-9));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods42.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet83, (-3));
        simpleMethods0.addElementToSet(intSet83, (-2));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 100);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 1);
        simpleMethods27.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods23.addElementToSet(intSet64, (int) (short) 0);
        simpleMethods5.addElementToSet(intSet64, 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods5.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods4.addElementToSet(intSet84, (-1));
        simpleMethods0.addElementToSet(intSet84, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, (int) (byte) -1);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods4.addElementToSet(intSet64, 1);
        simpleMethods0.addElementToSet(intSet64, 2);
        java.lang.Class<?> wildcardClass70 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 8);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods4.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 9);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 6);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods49.addElementToSet(intSet90, (int) (short) 0);
        simpleMethods25.addElementToSet(intSet90, (-3));
        simpleMethods21.addElementToSet(intSet90, 10);
        simpleMethods0.addElementToSet(intSet90, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        simpleMethods4.addElementToSet(intSet65, 8);
        simpleMethods0.addElementToSet(intSet65, 9);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods73.addElementToSet(intSet87, 9);
        simpleMethods0.addElementToSet(intSet87, 6);
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (-9));
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.lang.Class<?> wildcardClass50 = intSet42.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.lang.Class<?> wildcardClass70 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods0.addElementToSet(intSet81, 4);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-7));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 0);
        java.lang.Class<?> wildcardClass50 = intSet44.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods4.addElementToSet(intSet89, (-1));
        simpleMethods0.addElementToSet(intSet89, (int) '4');
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        simpleMethods0.addElementToSet(intSet68, 0);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.lang.Class<?> wildcardClass79 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-5));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet84, (int) ' ');
        simpleMethods0.addElementToSet(intSet84, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass94 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.lang.Class<?> wildcardClass7 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods19.addElementToSet(intSet60, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet60, 1);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods1.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet80, (-1));
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 8);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, (int) (byte) -1);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods4.addElementToSet(intSet64, 1);
        simpleMethods0.addElementToSet(intSet64, 2);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet87, (-3));
        simpleMethods4.addElementToSet(intSet87, (-2));
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-7));
        java.lang.Class<?> wildcardClass87 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 5);
        simpleMethods22.addElementToSet(intSet82, 0);
        simpleMethods4.addElementToSet(intSet82, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet82, 1);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (int) (byte) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods67.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, 100);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (-5));
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 1);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, 6);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, 0);
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods0.addElementToSet(intSet81, 4);
        java.lang.Class<?> wildcardClass87 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        simpleMethods0.addElementToSet(intSet45, (-9));
        java.lang.Class<?> wildcardClass53 = intSet45.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, 100);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, (-5));
        java.lang.Class<?> wildcardClass77 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-100));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods0.addElementToSet(intSet82, 9);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-7));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (-5));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods47.addElementToSet(intSet84, 8);
        simpleMethods0.addElementToSet(intSet84, (int) '4');
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods50.addElementToSet(intSet91, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (int) ' ');
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.lang.Class<?> wildcardClass57 = intSet53.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-2));
        simpleMethods0.addElementToSet(intSet45, (-9));
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet87, (-3));
        simpleMethods4.addElementToSet(intSet87, (-2));
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods8.addElementToSet(intSet73, (-3));
        simpleMethods4.addElementToSet(intSet73, 0);
        simpleMethods0.addElementToSet(intSet73, (-2));
        java.lang.Class<?> wildcardClass83 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods0.addElementToSet(intSet53, (-100));
        java.lang.Class<?> wildcardClass57 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods7.addElementToSet(intSet67, (-5));
        simpleMethods0.addElementToSet(intSet67, 100);
        java.lang.Class<?> wildcardClass79 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods0.addElementToSet(intSet79, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 8);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods50.addElementToSet(intSet91, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet91, (-4));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods4.addElementToSet(intSet61, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet61, (int) (short) 1);
        java.lang.Class<?> wildcardClass67 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (int) '4');
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet87 = null;
        simpleMethods0.addElementToSet(intSet87, (-10));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, (int) (byte) -1);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods4.addElementToSet(intSet61, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet61, (int) (short) 1);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, 0);
        java.lang.Class<?> wildcardClass77 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 10);
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods5.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods5.addElementToSet(intSet43, (-2));
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods5.addElementToSet(intSet69, (int) (short) -1);
        simpleMethods1.addElementToSet(intSet69, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, (int) '4');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods0.addElementToSet(intSet64, 9);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods0.addElementToSet(intSet82, 9);
        java.lang.Class<?> wildcardClass88 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 5);
        simpleMethods27.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (int) (byte) 100);
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.lang.Class<?> wildcardClass71 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods1.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-5));
        java.lang.Class<?> wildcardClass70 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        simpleMethods0.addElementToSet(intSet44, 0);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.lang.Class<?> wildcardClass87 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (-8));
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 100, (-2), (-8), (-2), 0, (-1), 10, (-7), 0, 4, (-100), (-10), 5, (-100), 0, (-1) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods0.addElementToSet(intSet81, (-10));
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 1);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, 10);
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods70.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, 9);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (-1));
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods32.addElementToSet(intSet50, 2);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        simpleMethods32.addElementToSet(intSet67, 1);
        simpleMethods8.addElementToSet(intSet67, (-1));
        simpleMethods7.addElementToSet(intSet67, (-5));
        simpleMethods0.addElementToSet(intSet67, 100);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.lang.Class<?> wildcardClass90 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (-1));
        simpleMethods0.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, 0);
        simpleMethods0.addElementToSet(intSet62, 6);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods0.addElementToSet(intSet84, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        java.lang.Class<?> wildcardClass21 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 10);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 1);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 10);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 5);
        simpleMethods27.addElementToSet(intSet87, 0);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 10);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        simpleMethods22.addElementToSet(intSet57, 100);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods63.addElementToSet(intSet77, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods63.addElementToSet(intSet83, 0);
        simpleMethods22.addElementToSet(intSet83, 8);
        simpleMethods18.addElementToSet(intSet83, 9);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods30.addElementToSet(intSet91, (int) ' ');
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods7.addElementToSet(intSet71, 9);
        simpleMethods0.addElementToSet(intSet71, (-100));
        java.lang.Class<?> wildcardClass77 = intSet71.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods7.addElementToSet(intSet31, (int) (short) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods34.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, 3);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 10);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-4));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 10);
        java.lang.Class<?> wildcardClass63 = intSet57.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        java.lang.Class<?> wildcardClass30 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods10.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods14.addElementToSet(intSet32, 2);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods35.addElementToSet(intSet53, 2);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods56.addElementToSet(intSet70, 9);
        simpleMethods35.addElementToSet(intSet70, (-100));
        simpleMethods14.addElementToSet(intSet70, (-1));
        simpleMethods10.addElementToSet(intSet70, (-9));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods10.addElementToSet(intSet87, 100);
        simpleMethods0.addElementToSet(intSet87, (-4));
        java.lang.Class<?> wildcardClass93 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet27 = null;
        simpleMethods0.addElementToSet(intSet27, (int) '4');
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        java.lang.Integer[] intArray90 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet91 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet91, intArray90);
        simpleMethods71.addElementToSet(intSet91, 0);
        simpleMethods30.addElementToSet(intSet91, (int) ' ');
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass99 = intSet91.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 1);
        simpleMethods4.addElementToSet(intSet43, (int) (short) 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, 0);
        simpleMethods4.addElementToSet(intSet89, (-1));
        simpleMethods0.addElementToSet(intSet89, (int) '4');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Class<?> wildcardClass67 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods7.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, (int) ' ');
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Class<?> wildcardClass70 = intSet64.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 0);
        java.util.HashSet<java.lang.Integer> intSet79 = null;
        simpleMethods0.addElementToSet(intSet79, 10);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 8);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-2));
        simpleMethods0.addElementToSet(intSet59, (int) (short) 10);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, 0);
        simpleMethods0.addElementToSet(intSet85, (-1));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (byte) -1);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods1.addElementToSet(intSet63, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet63, 100);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods49.addElementToSet(intSet90, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet90, 1);
        simpleMethods10.addElementToSet(intSet90, 0);
        simpleMethods0.addElementToSet(intSet90, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet69, (-3));
        simpleMethods0.addElementToSet(intSet69, (-5));
        java.lang.Class<?> wildcardClass77 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods46.addElementToSet(intSet64, 2);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods67.addElementToSet(intSet81, 9);
        simpleMethods46.addElementToSet(intSet81, 100);
        simpleMethods45.addElementToSet(intSet81, (int) (byte) -1);
        simpleMethods44.addElementToSet(intSet81, 8);
        simpleMethods0.addElementToSet(intSet81, 100);
        java.lang.Class<?> wildcardClass93 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.lang.Class<?> wildcardClass50 = intSet42.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods44.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods27.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods27.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet84, (int) (short) -1);
        java.lang.Class<?> wildcardClass90 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        simpleMethods0.addElementToSet(intSet41, 8);
        java.lang.Class<?> wildcardClass53 = intSet41.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods69.addElementToSet(intSet89, 0);
        simpleMethods45.addElementToSet(intSet89, 8);
        simpleMethods4.addElementToSet(intSet89, (-9));
        simpleMethods0.addElementToSet(intSet89, (int) 'a');
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods7.addElementToSet(intSet31, (int) (short) 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods34.addElementToSet(intSet54, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods34.addElementToSet(intSet72, (-2));
        simpleMethods7.addElementToSet(intSet72, 3);
        simpleMethods0.addElementToSet(intSet72, (-1));
        java.lang.Class<?> wildcardClass82 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods21.addElementToSet(intSet41, 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        simpleMethods21.addElementToSet(intSet59, (-2));
        simpleMethods0.addElementToSet(intSet59, (int) (short) 10);
        java.lang.Class<?> wildcardClass67 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-10));
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods58.addElementToSet(intSet78, 0);
        simpleMethods14.addElementToSet(intSet78, (-1));
        simpleMethods4.addElementToSet(intSet78, (int) '#');
        simpleMethods0.addElementToSet(intSet78, 2);
        java.lang.Class<?> wildcardClass88 = intSet78.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 2);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-10));
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods2.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 1);
        simpleMethods2.addElementToSet(intSet61, (-1));
        simpleMethods1.addElementToSet(intSet61, (-5));
        simpleMethods0.addElementToSet(intSet61, (-2));
        java.lang.Class<?> wildcardClass73 = intSet61.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods4.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods4.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, 1);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 0);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 1, (-7), 10, 0, 2, 3, 5, 0, (-6), (-8), 7, 4, (-100), (-3), 10, (-100), 8, (-7), (-8), (-5), (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-2));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-10), (-3), 0, (-6), 3 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods0.addElementToSet(intSet76, (-8));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, (int) (short) 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        simpleMethods0.addElementToSet(intSet61, 8);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 9);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods4.addElementToSet(intSet11, (-4));
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-10));
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods58.addElementToSet(intSet78, 0);
        simpleMethods14.addElementToSet(intSet78, (-1));
        simpleMethods4.addElementToSet(intSet78, (int) '#');
        simpleMethods0.addElementToSet(intSet78, 2);
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 100);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, (-10));
        simpleMethods1.addElementToSet(intSet63, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet63, 100);
        java.lang.Class<?> wildcardClass73 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (-7));
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods48.addElementToSet(intSet86, 0);
        simpleMethods4.addElementToSet(intSet86, (-1));
        simpleMethods0.addElementToSet(intSet86, 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, 0);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        simpleMethods18.addElementToSet(intSet62, 8);
        simpleMethods0.addElementToSet(intSet62, 7);
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-10), (-3), 0, (-6), 3 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods0.addElementToSet(intSet76, (-8));
        java.lang.Class<?> wildcardClass80 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet69, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods10.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 5);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods22.addElementToSet(intSet60, (-10));
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods66.addElementToSet(intSet86, 0);
        simpleMethods22.addElementToSet(intSet86, (-1));
        simpleMethods18.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (-4));
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods21.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, (-9));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet69, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods10.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 5);
        java.lang.Class<?> wildcardClass97 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (int) (short) 100);
        java.lang.Class<?> wildcardClass79 = intSet71.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods6.addElementToSet(intSet26, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods30.addElementToSet(intSet44, 9);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods30.addElementToSet(intSet48, 2);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods30.addElementToSet(intSet65, 1);
        simpleMethods6.addElementToSet(intSet65, (-1));
        simpleMethods5.addElementToSet(intSet65, (-5));
        simpleMethods4.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass79 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, 100);
        simpleMethods50.addElementToSet(intSet86, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet86, 0);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods7.addElementToSet(intSet48, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet48, 5);
        java.lang.Class<?> wildcardClass54 = intSet48.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, 100);
        java.util.HashSet<java.lang.Integer> intSet48 = null;
        simpleMethods7.addElementToSet(intSet48, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods51.addElementToSet(intSet69, 2);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods51.addElementToSet(intSet86, (-100));
        simpleMethods7.addElementToSet(intSet86, (-4));
        simpleMethods0.addElementToSet(intSet86, 8);
        java.lang.Class<?> wildcardClass96 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        simpleMethods0.addElementToSet(intSet60, (-9));
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-8), (-1), (-8), 1, (-6), 9 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods0.addElementToSet(intSet77, 100);
        java.lang.Class<?> wildcardClass81 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-10));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet27 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet27, intArray26);
        simpleMethods7.addElementToSet(intSet27, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods7.addElementToSet(intSet45, (-10));
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        simpleMethods7.addElementToSet(intSet71, (-1));
        simpleMethods0.addElementToSet(intSet71, (int) (short) 100);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.lang.Class<?> wildcardClass62 = intSet52.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods0.addElementToSet(intSet41, (int) (short) 0);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-10), (-7), (-5), 1, 0, 10, 100, (-9), (-3), 0, (-6), (-3), 0, 0, 2, 8, 0 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods0.addElementToSet(intSet63, 1);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (-1));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        simpleMethods22.addElementToSet(intSet57, 1);
        simpleMethods4.addElementToSet(intSet57, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, 10);
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 8);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods42.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        simpleMethods42.addElementToSet(intSet80, (-10));
        simpleMethods18.addElementToSet(intSet80, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet80, 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, 6);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods28.addElementToSet(intSet69, (int) (short) 0);
        simpleMethods10.addElementToSet(intSet69, 1);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods10.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 5);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-9));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods10.addElementToSet(intSet28, 2);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods31.addElementToSet(intSet45, 9);
        simpleMethods10.addElementToSet(intSet45, 100);
        simpleMethods9.addElementToSet(intSet45, (int) (byte) -1);
        simpleMethods8.addElementToSet(intSet45, 8);
        simpleMethods4.addElementToSet(intSet45, 8);
        simpleMethods0.addElementToSet(intSet45, (-100));
        java.lang.Class<?> wildcardClass59 = intSet45.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.lang.Class<?> wildcardClass28 = intSet24.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 1, (-7), 10, 0, 2, 3, 5, 0, (-6), (-8), 7, 4, (-100), (-3), 10, (-100), 8, (-7), (-8), (-5), (-3) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods0.addElementToSet(intSet87, (-2));
        java.lang.Class<?> wildcardClass91 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods2.addElementToSet(intSet22, 0);
        examples.SimpleMethods simpleMethods26 = new examples.SimpleMethods();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet40 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet40, intArray39);
        simpleMethods26.addElementToSet(intSet40, 9);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods26.addElementToSet(intSet44, 2);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        simpleMethods26.addElementToSet(intSet61, 1);
        simpleMethods2.addElementToSet(intSet61, (-1));
        simpleMethods1.addElementToSet(intSet61, (-5));
        simpleMethods0.addElementToSet(intSet61, (-2));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods21.addElementToSet(intSet62, (int) (byte) -1);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods21.addElementToSet(intSet81, 1);
        simpleMethods0.addElementToSet(intSet81, (-9));
        java.lang.Class<?> wildcardClass87 = intSet81.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, (int) (byte) 10);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        simpleMethods28.addElementToSet(intSet66, (-2));
        simpleMethods7.addElementToSet(intSet66, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet66, 0);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods32.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods8.addElementToSet(intSet73, (-3));
        simpleMethods4.addElementToSet(intSet73, 0);
        simpleMethods0.addElementToSet(intSet73, (-2));
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods44.addElementToSet(intSet62, 2);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods44.addElementToSet(intSet79, (-100));
        simpleMethods0.addElementToSet(intSet79, (-7));
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, 0);
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 9);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        simpleMethods2.addElementToSet(intSet37, 100);
        simpleMethods1.addElementToSet(intSet37, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet37, 8);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods47.addElementToSet(intSet84, 8);
        simpleMethods0.addElementToSet(intSet84, (int) '4');
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Class<?> wildcardClass20 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods69.addElementToSet(intSet89, 0);
        simpleMethods45.addElementToSet(intSet89, 8);
        simpleMethods4.addElementToSet(intSet89, (-9));
        simpleMethods0.addElementToSet(intSet89, (int) 'a');
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods4.addElementToSet(intSet86, 9);
        simpleMethods0.addElementToSet(intSet86, 100);
        java.lang.Class<?> wildcardClass94 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods27.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods34.addElementToSet(intSet38, 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods34.addElementToSet(intSet79, (-9));
        simpleMethods27.addElementToSet(intSet79, (-10));
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.lang.Class<?> wildcardClass91 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-2));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods0.addElementToSet(intSet24, 100);
        java.lang.Class<?> wildcardClass28 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-1));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (int) '4');
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods19.addElementToSet(intSet33, 9);
        java.util.HashSet<java.lang.Integer> intSet37 = null;
        simpleMethods19.addElementToSet(intSet37, 2);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        simpleMethods19.addElementToSet(intSet54, 100);
        simpleMethods18.addElementToSet(intSet54, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 0);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods64.addElementToSet(intSet84, 0);
        simpleMethods0.addElementToSet(intSet84, 0);
        java.lang.Class<?> wildcardClass90 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods41.addElementToSet(intSet85, 8);
        simpleMethods0.addElementToSet(intSet85, 0);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods22.addElementToSet(intSet60, (-10));
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods66.addElementToSet(intSet80, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods66.addElementToSet(intSet86, 0);
        simpleMethods22.addElementToSet(intSet86, (-1));
        simpleMethods18.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet86, (-4));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, (-2));
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-8));
        java.lang.Class<?> wildcardClass96 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 0);
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods1.addElementToSet(intSet5, 10);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods1.addElementToSet(intSet8, (-4));
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (-1));
        simpleMethods1.addElementToSet(intSet75, (int) '#');
        simpleMethods0.addElementToSet(intSet75, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) 1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 8);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, 0);
        simpleMethods1.addElementToSet(intSet63, 6);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods1.addElementToSet(intSet85, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet85, (-5));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods8.addElementToSet(intSet69, 8);
        simpleMethods4.addElementToSet(intSet69, 9);
        simpleMethods0.addElementToSet(intSet69, (-1));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods18.addElementToSet(intSet19, 10);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        simpleMethods22.addElementToSet(intSet57, 100);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods63.addElementToSet(intSet77, 9);
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods63.addElementToSet(intSet83, 0);
        simpleMethods22.addElementToSet(intSet83, 8);
        simpleMethods18.addElementToSet(intSet83, 9);
        simpleMethods0.addElementToSet(intSet83, 0);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 10);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 3);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods44.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (-2));
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods4.addElementToSet(intSet68, 9);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods72.addElementToSet(intSet86, 9);
        simpleMethods4.addElementToSet(intSet86, 9);
        simpleMethods0.addElementToSet(intSet86, 100);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet47 = null;
        simpleMethods0.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods50.addElementToSet(intSet64, 9);
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods50.addElementToSet(intSet70, 0);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods74.addElementToSet(intSet88, 9);
        simpleMethods50.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        java.lang.Class<?> wildcardClass44 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods39.addElementToSet(intSet80, (int) (short) 0);
        simpleMethods21.addElementToSet(intSet80, 1);
        simpleMethods0.addElementToSet(intSet80, 0);
        java.util.HashSet<java.lang.Integer> intSet88 = null;
        simpleMethods0.addElementToSet(intSet88, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-4));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 3);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods47.addElementToSet(intSet84, 8);
        simpleMethods0.addElementToSet(intSet84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass96 = intSet84.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet2 = null;
        simpleMethods1.addElementToSet(intSet2, 0);
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods1.addElementToSet(intSet5, 10);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods1.addElementToSet(intSet8, (-4));
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet31 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet31, intArray30);
        simpleMethods11.addElementToSet(intSet31, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods35.addElementToSet(intSet49, 9);
        simpleMethods11.addElementToSet(intSet49, (-10));
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods55.addElementToSet(intSet75, 0);
        simpleMethods11.addElementToSet(intSet75, (-1));
        simpleMethods1.addElementToSet(intSet75, (int) '#');
        simpleMethods0.addElementToSet(intSet75, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods0.addElementToSet(intSet61, 10);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods64.addElementToSet(intSet80, (int) (byte) 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods64.addElementToSet(intSet88, 100);
        simpleMethods0.addElementToSet(intSet88, 100);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods49.addElementToSet(intSet67, 2);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods49.addElementToSet(intSet84, 100);
        simpleMethods48.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods47.addElementToSet(intSet84, 8);
        simpleMethods0.addElementToSet(intSet84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-4));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods70.addElementToSet(intSet86, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet86, 10);
        java.lang.Class<?> wildcardClass92 = intSet86.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods76.addElementToSet(intSet90, 9);
        simpleMethods0.addElementToSet(intSet90, 0);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 6);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.util.HashSet<java.lang.Integer> intSet26 = null;
        simpleMethods8.addElementToSet(intSet26, 2);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        simpleMethods8.addElementToSet(intSet43, 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods49.addElementToSet(intSet69, 0);
        simpleMethods8.addElementToSet(intSet69, 8);
        simpleMethods4.addElementToSet(intSet69, 9);
        simpleMethods0.addElementToSet(intSet69, (-1));
        java.lang.Class<?> wildcardClass79 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 6);
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods53.addElementToSet(intSet69, (int) (byte) 10);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods53.addElementToSet(intSet77, 100);
        simpleMethods0.addElementToSet(intSet77, 3);
        java.lang.Class<?> wildcardClass83 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.lang.Class<?> wildcardClass62 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 9);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        simpleMethods0.addElementToSet(intSet56, (-1));
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, (-9));
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, (-4));
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods70.addElementToSet(intSet86, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet86, 10);
        java.lang.Class<?> wildcardClass92 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.util.HashSet<java.lang.Integer> intSet40 = null;
        simpleMethods22.addElementToSet(intSet40, 2);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        simpleMethods22.addElementToSet(intSet57, 1);
        simpleMethods4.addElementToSet(intSet57, 5);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods65.addElementToSet(intSet85, 0);
        simpleMethods4.addElementToSet(intSet85, 10);
        simpleMethods0.addElementToSet(intSet85, (int) ' ');
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods68.addElementToSet(intSet88, 0);
        simpleMethods44.addElementToSet(intSet88, 0);
        simpleMethods0.addElementToSet(intSet88, (-8));
        java.lang.Class<?> wildcardClass96 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.util.HashSet<java.lang.Integer> intSet82 = null;
        simpleMethods0.addElementToSet(intSet82, 0);
        java.util.HashSet<java.lang.Integer> intSet85 = null;
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.lang.Class<?> wildcardClass88 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 2);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods11.addElementToSet(intSet25, 9);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods29.addElementToSet(intSet43, 9);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet49 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet49, intArray48);
        simpleMethods29.addElementToSet(intSet49, 0);
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods53.addElementToSet(intSet67, 9);
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods53.addElementToSet(intSet73, 0);
        simpleMethods29.addElementToSet(intSet73, 8);
        simpleMethods11.addElementToSet(intSet73, 7);
        simpleMethods7.addElementToSet(intSet73, 100);
        simpleMethods0.addElementToSet(intSet73, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = intSet73.getClass();
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.lang.Class<?> wildcardClass82 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods7.addElementToSet(intSet48, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet48, 5);
        java.lang.Class<?> wildcardClass54 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.lang.Class<?> wildcardClass80 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-10));
        simpleMethods0.addElementToSet(intSet42, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet50 = null;
        simpleMethods0.addElementToSet(intSet50, (int) '#');
        examples.SimpleMethods simpleMethods53 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods53.addElementToSet(intSet69, (int) (byte) 10);
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods53.addElementToSet(intSet77, 100);
        simpleMethods0.addElementToSet(intSet77, 3);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods7.addElementToSet(intSet48, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet48, 5);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods55.addElementToSet(intSet69, 9);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods55.addElementToSet(intSet73, 2);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods76.addElementToSet(intSet90, 9);
        simpleMethods55.addElementToSet(intSet90, 100);
        simpleMethods54.addElementToSet(intSet90, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet90, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods4.addElementToSet(intSet45, (int) (byte) -1);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods4.addElementToSet(intSet64, 1);
        simpleMethods0.addElementToSet(intSet64, 2);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods22.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet63, 5);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods4.addElementToSet(intSet83, 0);
        simpleMethods0.addElementToSet(intSet83, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 6);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-1));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods1.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods25.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods49.addElementToSet(intSet63, 9);
        simpleMethods25.addElementToSet(intSet63, 0);
        simpleMethods1.addElementToSet(intSet63, 6);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods1.addElementToSet(intSet85, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet85, (-5));
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        java.lang.Class<?> wildcardClass10 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods24.addElementToSet(intSet65, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet65, (-3));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods71.addElementToSet(intSet87, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet87, (-3));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods28.addElementToSet(intSet87, 1);
        simpleMethods4.addElementToSet(intSet87, (int) 'a');
        simpleMethods0.addElementToSet(intSet87, 2);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 0, 3, (-10), (-1), 1, (-1), 7, (-6) };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods0.addElementToSet(intSet59, 6);
        java.lang.Class<?> wildcardClass63 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        java.lang.Class<?> wildcardClass20 = intSet16.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods27.addElementToSet(intSet68, (int) (short) 0);
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { 1, (-1), (-10), 1, 10, 6, 8, (-3), 10, 10, 10 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods27.addElementToSet(intSet84, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet84, (int) (short) -1);
        java.lang.Class<?> wildcardClass90 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods6 = new examples.SimpleMethods();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods6.addElementToSet(intSet20, 9);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods6.addElementToSet(intSet24, 2);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        simpleMethods6.addElementToSet(intSet41, 100);
        simpleMethods5.addElementToSet(intSet41, (int) (byte) -1);
        simpleMethods4.addElementToSet(intSet41, 8);
        simpleMethods0.addElementToSet(intSet41, 8);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, (-2));
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        simpleMethods0.addElementToSet(intSet64, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet70 = null;
        simpleMethods0.addElementToSet(intSet70, 7);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (int) (short) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods76.addElementToSet(intSet90, 9);
        simpleMethods0.addElementToSet(intSet90, 0);
        java.lang.Class<?> wildcardClass96 = intSet90.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 0);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods27.addElementToSet(intSet31, 10);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet35 = null;
        simpleMethods34.addElementToSet(intSet35, 0);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods34.addElementToSet(intSet38, 10);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods41.addElementToSet(intSet61, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods65.addElementToSet(intSet79, 9);
        simpleMethods41.addElementToSet(intSet79, (-2));
        simpleMethods34.addElementToSet(intSet79, (-9));
        simpleMethods27.addElementToSet(intSet79, (-10));
        simpleMethods0.addElementToSet(intSet79, (-5));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, 10);
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-2));
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods52.addElementToSet(intSet72, 0);
        simpleMethods8.addElementToSet(intSet72, (int) (short) -1);
        simpleMethods4.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet72, 3);
        java.lang.Class<?> wildcardClass82 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        simpleMethods27.addElementToSet(intSet65, (-2));
        simpleMethods0.addElementToSet(intSet65, 3);
        java.util.HashSet<java.lang.Integer> intSet73 = null;
        simpleMethods0.addElementToSet(intSet73, (-10));
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, 8);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.util.HashSet<java.lang.Integer> intSet36 = null;
        simpleMethods18.addElementToSet(intSet36, 2);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods39.addElementToSet(intSet53, 9);
        simpleMethods18.addElementToSet(intSet53, 1);
        simpleMethods0.addElementToSet(intSet53, 5);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods61.addElementToSet(intSet75, 9);
        simpleMethods0.addElementToSet(intSet75, 4);
        java.lang.Class<?> wildcardClass81 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, (int) (byte) 10);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods21.addElementToSet(intSet62, (int) (short) 0);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods21.addElementToSet(intSet74, (-100));
        simpleMethods0.addElementToSet(intSet74, (-1));
        java.util.HashSet<java.lang.Integer> intSet80 = null;
        simpleMethods0.addElementToSet(intSet80, 6);
        java.lang.Class<?> wildcardClass83 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 1);
        java.util.HashSet<java.lang.Integer> intSet67 = null;
        simpleMethods0.addElementToSet(intSet67, 7);
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods46.addElementToSet(intSet66, 0);
        simpleMethods22.addElementToSet(intSet66, 8);
        simpleMethods4.addElementToSet(intSet66, 7);
        simpleMethods0.addElementToSet(intSet66, 100);
        java.lang.Class<?> wildcardClass76 = intSet66.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods4.addElementToSet(intSet45, (int) (short) 0);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 5, 1, (-4), 0, 9, 7, (-10) };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods4.addElementToSet(intSet57, (-100));
        simpleMethods0.addElementToSet(intSet57, (int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = intSet57.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, (-100));
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods45.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods69.addElementToSet(intSet89, 0);
        simpleMethods45.addElementToSet(intSet89, 8);
        simpleMethods4.addElementToSet(intSet89, 0);
        simpleMethods0.addElementToSet(intSet89, 10);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet9 = null;
        simpleMethods8.addElementToSet(intSet9, 0);
        java.util.HashSet<java.lang.Integer> intSet12 = null;
        simpleMethods8.addElementToSet(intSet12, 10);
        java.util.HashSet<java.lang.Integer> intSet15 = null;
        simpleMethods8.addElementToSet(intSet15, (-4));
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods18.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods18.addElementToSet(intSet56, (-10));
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods62.addElementToSet(intSet82, 0);
        simpleMethods18.addElementToSet(intSet82, (-1));
        simpleMethods8.addElementToSet(intSet82, (int) '#');
        simpleMethods7.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 8);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods2.addElementToSet(intSet16, 9);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods2.addElementToSet(intSet20, 2);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods41.addElementToSet(intSet82, (int) (short) 0);
        simpleMethods23.addElementToSet(intSet82, 1);
        simpleMethods2.addElementToSet(intSet82, 0);
        simpleMethods1.addElementToSet(intSet82, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet82, 0);
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, 5);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods44.addElementToSet(intSet60, (int) (byte) 10);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0, 8, 4 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods44.addElementToSet(intSet68, 100);
        simpleMethods0.addElementToSet(intSet68, 2);
        java.lang.Class<?> wildcardClass74 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, (int) ' ');
        java.lang.Class<?> wildcardClass69 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 0);
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods4.addElementToSet(intSet8, 10);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods12 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods12.addElementToSet(intSet26, 9);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods12.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods36.addElementToSet(intSet50, 9);
        java.util.HashSet<java.lang.Integer> intSet54 = null;
        simpleMethods36.addElementToSet(intSet54, 2);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods57.addElementToSet(intSet71, 9);
        simpleMethods36.addElementToSet(intSet71, 1);
        simpleMethods12.addElementToSet(intSet71, (-1));
        simpleMethods11.addElementToSet(intSet71, (-5));
        simpleMethods4.addElementToSet(intSet71, 100);
        simpleMethods0.addElementToSet(intSet71, 8);
        java.lang.Class<?> wildcardClass85 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods43.addElementToSet(intSet57, 9);
        java.util.HashSet<java.lang.Integer> intSet61 = null;
        simpleMethods43.addElementToSet(intSet61, 2);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet78 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet78, intArray77);
        simpleMethods64.addElementToSet(intSet78, 9);
        simpleMethods43.addElementToSet(intSet78, 100);
        simpleMethods42.addElementToSet(intSet78, (int) (byte) -1);
        simpleMethods41.addElementToSet(intSet78, 8);
        simpleMethods0.addElementToSet(intSet78, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet90 = null;
        simpleMethods0.addElementToSet(intSet90, (int) '4');
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods40.addElementToSet(intSet54, 9);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods40.addElementToSet(intSet81, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet81, 1);
        simpleMethods1.addElementToSet(intSet81, 0);
        simpleMethods0.addElementToSet(intSet81, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 1);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, (-100));
        java.util.HashSet<java.lang.Integer> intSet41 = null;
        simpleMethods0.addElementToSet(intSet41, (int) (byte) -1);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 5, (-4), 9, 3, 0, 6, (-1), (-3), (-5), 4, 8, (-8), (-8), 0, (-3) };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods0.addElementToSet(intSet60, 1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 9);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        java.util.HashSet<java.lang.Integer> intSet44 = null;
        simpleMethods0.addElementToSet(intSet44, (-10));
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods47.addElementToSet(intSet63, (int) (byte) 10);
        simpleMethods0.addElementToSet(intSet63, (int) ' ');
        java.util.HashSet<java.lang.Integer> intSet69 = null;
        simpleMethods0.addElementToSet(intSet69, (-10));
        java.lang.Class<?> wildcardClass72 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods45.addElementToSet(intSet59, 9);
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods45.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods4.addElementToSet(intSet86, 1);
        simpleMethods0.addElementToSet(intSet86, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        simpleMethods0.addElementToSet(intSet35, 1);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        java.util.HashSet<java.lang.Integer> intSet59 = null;
        simpleMethods41.addElementToSet(intSet59, 2);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods62.addElementToSet(intSet76, 9);
        simpleMethods41.addElementToSet(intSet76, 100);
        simpleMethods0.addElementToSet(intSet76, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods1.addElementToSet(intSet15, 9);
        java.util.HashSet<java.lang.Integer> intSet19 = null;
        simpleMethods1.addElementToSet(intSet19, 2);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        simpleMethods1.addElementToSet(intSet36, 100);
        simpleMethods0.addElementToSet(intSet36, (int) (byte) -1);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods44.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods44.addElementToSet(intSet83, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet83, (int) (byte) 10);
        java.util.HashSet<java.lang.Integer> intSet93 = null;
        simpleMethods0.addElementToSet(intSet93, 6);
        java.util.HashSet<java.lang.Integer> intSet96 = null;
        simpleMethods0.addElementToSet(intSet96, 0);
        java.lang.Class<?> wildcardClass99 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods7.addElementToSet(intSet83, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet83, 1);
        java.lang.Class<?> wildcardClass93 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 1, 4, (-4), 1, (-1), 0, (-7), (-100), 2, (-7), 8, (-5), (-6) };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods0.addElementToSet(intSet16, (int) (byte) 10);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods20.addElementToSet(intSet34, 9);
        java.util.HashSet<java.lang.Integer> intSet38 = null;
        simpleMethods20.addElementToSet(intSet38, 2);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods41.addElementToSet(intSet55, 9);
        simpleMethods20.addElementToSet(intSet55, (-100));
        simpleMethods0.addElementToSet(intSet55, (-8));
        java.lang.Class<?> wildcardClass63 = intSet55.getClass();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        simpleMethods0.addElementToSet(intSet38, 0);
        examples.SimpleMethods simpleMethods44 = new examples.SimpleMethods();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet58 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet58, intArray57);
        simpleMethods44.addElementToSet(intSet58, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods44.addElementToSet(intSet64, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods68.addElementToSet(intSet82, 9);
        simpleMethods44.addElementToSet(intSet82, 0);
        simpleMethods0.addElementToSet(intSet82, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = intSet82.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods7.addElementToSet(intSet21, 9);
        java.util.HashSet<java.lang.Integer> intSet25 = null;
        simpleMethods7.addElementToSet(intSet25, 2);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods7.addElementToSet(intSet42, (-100));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.util.HashSet<java.lang.Integer> intSet66 = null;
        simpleMethods48.addElementToSet(intSet66, 2);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods69.addElementToSet(intSet83, 9);
        simpleMethods48.addElementToSet(intSet83, 1);
        simpleMethods7.addElementToSet(intSet83, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet83, 1);
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.lang.Class<?> wildcardClass91 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, 0);
        simpleMethods0.addElementToSet(intSet42, (-4));
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 0, 3, (-10), (-1), 1, (-1), 7, (-6) };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods0.addElementToSet(intSet59, 6);
        java.lang.Class<?> wildcardClass63 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods28.addElementToSet(intSet48, 0);
        simpleMethods4.addElementToSet(intSet48, 0);
        simpleMethods0.addElementToSet(intSet48, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = intSet48.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.lang.Class<?> wildcardClass47 = intSet39.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 2);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) '#');
        java.lang.Class<?> wildcardClass47 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-1));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-5), (-10), 1, (-2), 3, 7, (-2), 7, 1, (-9), 0, (-7), (-8) };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods4.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-3));
        java.lang.Class<?> wildcardClass91 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        examples.SimpleMethods simpleMethods22 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods22.addElementToSet(intSet36, 9);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods22.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods46.addElementToSet(intSet87, (int) (short) 0);
        simpleMethods22.addElementToSet(intSet87, (-3));
        simpleMethods4.addElementToSet(intSet87, (-2));
        simpleMethods0.addElementToSet(intSet87, 0);
        java.util.HashSet<java.lang.Integer> intSet97 = null;
        simpleMethods0.addElementToSet(intSet97, (-7));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods27.addElementToSet(intSet41, 9);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods27.addElementToSet(intSet47, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods51.addElementToSet(intSet65, 9);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods51.addElementToSet(intSet71, 0);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet89 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet89, intArray88);
        simpleMethods75.addElementToSet(intSet89, 9);
        simpleMethods51.addElementToSet(intSet89, (-10));
        simpleMethods27.addElementToSet(intSet89, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet89, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intSet89.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, (-100));
        simpleMethods4.addElementToSet(intSet60, (-1));
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods4.addElementToSet(intSet68, (-9));
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods4.addElementToSet(intSet85, 4);
        simpleMethods0.addElementToSet(intSet85, 2);
        java.lang.Class<?> wildcardClass93 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet8 = null;
        simpleMethods7.addElementToSet(intSet8, 0);
        java.util.HashSet<java.lang.Integer> intSet11 = null;
        simpleMethods7.addElementToSet(intSet11, 10);
        examples.SimpleMethods simpleMethods14 = new examples.SimpleMethods();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods14.addElementToSet(intSet28, 9);
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods14.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods38.addElementToSet(intSet52, 9);
        simpleMethods14.addElementToSet(intSet52, (-2));
        simpleMethods7.addElementToSet(intSet52, (-9));
        simpleMethods0.addElementToSet(intSet52, (-10));
        java.util.HashSet<java.lang.Integer> intSet62 = null;
        simpleMethods0.addElementToSet(intSet62, (-8));
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 10);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods4.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods28.addElementToSet(intSet42, 9);
        simpleMethods4.addElementToSet(intSet42, (-2));
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods48.addElementToSet(intSet68, 0);
        simpleMethods4.addElementToSet(intSet68, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet68, (int) (byte) -1);
        java.util.HashSet<java.lang.Integer> intSet76 = null;
        simpleMethods0.addElementToSet(intSet76, (int) (short) 1);
        java.lang.Class<?> wildcardClass79 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet18 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet18, intArray17);
        simpleMethods4.addElementToSet(intSet18, 9);
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods4.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        simpleMethods4.addElementToSet(intSet39, 1);
        simpleMethods0.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods47.addElementToSet(intSet61, 9);
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods47.addElementToSet(intSet67, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods71.addElementToSet(intSet85, 9);
        simpleMethods47.addElementToSet(intSet85, (-2));
        simpleMethods0.addElementToSet(intSet85, (-10));
        java.lang.Class<?> wildcardClass93 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        java.util.HashSet<java.lang.Integer> intSet4 = null;
        simpleMethods0.addElementToSet(intSet4, 10);
        java.util.HashSet<java.lang.Integer> intSet7 = null;
        simpleMethods0.addElementToSet(intSet7, (-4));
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods10.addElementToSet(intSet24, 9);
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods10.addElementToSet(intSet30, 0);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods34.addElementToSet(intSet48, 9);
        simpleMethods10.addElementToSet(intSet48, (-10));
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods54.addElementToSet(intSet68, 9);
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods54.addElementToSet(intSet74, 0);
        simpleMethods10.addElementToSet(intSet74, (-1));
        simpleMethods0.addElementToSet(intSet74, (int) '#');
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        java.util.HashSet<java.lang.Integer> intSet24 = null;
        simpleMethods0.addElementToSet(intSet24, (int) (short) 10);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet28 = null;
        simpleMethods27.addElementToSet(intSet28, 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet32 = null;
        simpleMethods31.addElementToSet(intSet32, 0);
        examples.SimpleMethods simpleMethods35 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods37.addElementToSet(intSet51, 9);
        java.util.HashSet<java.lang.Integer> intSet55 = null;
        simpleMethods37.addElementToSet(intSet55, 2);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods58.addElementToSet(intSet72, 9);
        simpleMethods37.addElementToSet(intSet72, 100);
        simpleMethods36.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods35.addElementToSet(intSet72, 8);
        simpleMethods31.addElementToSet(intSet72, 8);
        simpleMethods27.addElementToSet(intSet72, (-100));
        simpleMethods0.addElementToSet(intSet72, 100);
        java.lang.Class<?> wildcardClass88 = intSet72.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet22 = null;
        simpleMethods21.addElementToSet(intSet22, 2);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods25.addElementToSet(intSet39, 9);
        java.util.HashSet<java.lang.Integer> intSet43 = null;
        simpleMethods25.addElementToSet(intSet43, 2);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods46.addElementToSet(intSet60, 9);
        simpleMethods25.addElementToSet(intSet60, 1);
        simpleMethods21.addElementToSet(intSet60, (int) '#');
        simpleMethods0.addElementToSet(intSet60, 1);
        java.lang.Class<?> wildcardClass70 = intSet60.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 100);
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (int) '#');
        java.lang.Class<?> wildcardClass94 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (-1));
        java.lang.Class<?> wildcardClass70 = intSet62.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet5 = null;
        simpleMethods4.addElementToSet(intSet5, 10);
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods8.addElementToSet(intSet22, 9);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet28 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet28, intArray27);
        simpleMethods8.addElementToSet(intSet28, 0);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods32.addElementToSet(intSet46, 9);
        simpleMethods8.addElementToSet(intSet46, (-2));
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods52.addElementToSet(intSet66, 9);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods52.addElementToSet(intSet72, 0);
        simpleMethods8.addElementToSet(intSet72, (int) (short) -1);
        simpleMethods4.addElementToSet(intSet72, (int) (byte) -1);
        simpleMethods0.addElementToSet(intSet72, 3);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.util.HashSet<java.lang.Integer> intSet18 = null;
        simpleMethods0.addElementToSet(intSet18, 2);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods21.addElementToSet(intSet35, 9);
        java.util.HashSet<java.lang.Integer> intSet39 = null;
        simpleMethods21.addElementToSet(intSet39, 2);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods42.addElementToSet(intSet56, 9);
        simpleMethods21.addElementToSet(intSet56, (-100));
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 3, 100, (-9), 5, 5, (-7), (-1), 1, 100, 0, 0, 6, (-5), 9, 0, 1, 8, 0, (-7), 1, 4 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods21.addElementToSet(intSet85, 9);
        simpleMethods0.addElementToSet(intSet85, (-8));
        java.util.HashSet<java.lang.Integer> intSet91 = null;
        simpleMethods0.addElementToSet(intSet91, (-1));
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, (-7));
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.util.HashSet<java.lang.Integer> intSet1 = null;
        simpleMethods0.addElementToSet(intSet1, 0);
        examples.SimpleMethods simpleMethods4 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods5 = new examples.SimpleMethods();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet19 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet19, intArray18);
        simpleMethods5.addElementToSet(intSet19, 9);
        examples.SimpleMethods simpleMethods23 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods23.addElementToSet(intSet37, 9);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet64 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet64, intArray63);
        simpleMethods23.addElementToSet(intSet64, (int) (short) 0);
        simpleMethods5.addElementToSet(intSet64, 1);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet84 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet84, intArray83);
        simpleMethods70.addElementToSet(intSet84, 9);
        simpleMethods5.addElementToSet(intSet84, (int) (short) 100);
        simpleMethods4.addElementToSet(intSet84, (-1));
        simpleMethods0.addElementToSet(intSet84, (int) (short) 0);
        java.util.HashSet<java.lang.Integer> intSet94 = null;
        simpleMethods0.addElementToSet(intSet94, 1);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet20 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet20, intArray19);
        simpleMethods0.addElementToSet(intSet20, 0);
        examples.SimpleMethods simpleMethods24 = new examples.SimpleMethods();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet38 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet38, intArray37);
        simpleMethods24.addElementToSet(intSet38, 9);
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-3) };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods24.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods48.addElementToSet(intSet62, 9);
        simpleMethods24.addElementToSet(intSet62, (-10));
        simpleMethods0.addElementToSet(intSet62, (-1));
        java.lang.Class<?> wildcardClass70 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods0.addElementToSet(intSet14, 9);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 8, (-9), (-3), (-1), (-1), 8, 8, (-5), 0, 0, 100 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods18.addElementToSet(intSet32, 9);
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-6), (-1), (-1), 3, 10, (-2), (-10), (-1), 10, (-1), 4, (-2), (-9), (-3), 4, 10, (-5), 8, 8, 9, 7, 7 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods18.addElementToSet(intSet59, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet59, 5);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 100);
        java.util.HashSet<java.lang.Integer> intSet68 = null;
        simpleMethods0.addElementToSet(intSet68, (-9));
        java.util.HashSet<java.lang.Integer> intSet71 = null;
        simpleMethods0.addElementToSet(intSet71, (-7));
        java.lang.Class<?> wildcardClass74 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }
}

