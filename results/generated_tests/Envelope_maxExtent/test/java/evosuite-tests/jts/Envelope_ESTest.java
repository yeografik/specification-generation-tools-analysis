/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 22:24:59 GMT 2023
 */

package jts;

import org.junit.Test;
import static org.junit.Assert.*;
import jts.Envelope;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Envelope_ESTest extends Envelope_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1.0), 0.0, (-4364.359338389321), (-2118.47810624));
      assertEquals(2245.881232149321, envelope0.maxExtent(), 0.01);
      assertEquals(1.0, envelope0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1.0), (-1.0), (-1.0), (-1.0));
      double double0 = envelope0.maxExtent();
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertEquals(0.0, envelope0.getHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(envelope0.isEnvelopeNull());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Envelope envelope0 = new Envelope(663.4684, (-1.0), (-1.0), 663.4684);
      double double0 = envelope0.getWidth();
      assertEquals(664.4684, envelope0.getHeight(), 0.01);
      assertEquals(664.4684, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Envelope envelope0 = new Envelope(0.0, 0.0, 3754.07036, 530.1912544091658);
      double double0 = envelope0.getHeight();
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertEquals(3223.879105590834, envelope0.maxExtent(), 0.01);
      assertEquals(3223.879105590834, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1575.9360275081578), (-1575.9360275081578), (-1575.9360275081578), (-1575.9360275081578));
      double double0 = envelope0.getHeight();
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertFalse(envelope0.isEnvelopeNull());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Envelope envelope0 = new Envelope(798.8057136875461, 798.8057136875461, 798.8057136875461, (-1.0));
      double double0 = envelope0.getWidth();
      assertEquals(799.8057136875461, envelope0.maxExtent(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Envelope envelope0 = new Envelope(798.8057136875461, 798.8057136875461, 798.8057136875461, (-1.0));
      boolean boolean0 = envelope0.isEnvelopeNull();
      assertEquals(799.8057136875461, envelope0.maxExtent(), 0.01);
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Envelope envelope0 = new Envelope(798.8057136875461, 798.8057136875461, 798.8057136875461, (-1.0));
      envelope0.init((-1.0), 798.8057136875461, (-1.0), 0.0);
      assertEquals(1.0, envelope0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Envelope envelope0 = new Envelope(0.0, 0.0, 0.0, (-1.0));
      assertEquals(1.0, envelope0.getHeight(), 0.01);
      
      envelope0.init(0.0, (-1.0), 0.0, 0.0);
      assertEquals(0.0, envelope0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1199.4), (-1199.4), (-1199.4), (-800.3517549063387));
      double double0 = envelope0.maxExtent();
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertEquals(399.0482450936614, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1199.4), (-1199.4), (-1199.4), (-800.3517549063387));
      assertEquals(399.0482450936614, envelope0.getHeight(), 0.01);
      
      envelope0.init((-1199.4), (-800.3517549063387), (-1199.4), (-1199.4));
      double double0 = envelope0.maxExtent();
      assertEquals(0.0, envelope0.getHeight(), 0.01);
      assertEquals(399.0482450936614, double0, 0.01);
  }
}
